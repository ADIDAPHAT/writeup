Gadgets information
============================================================
0x0000000000425b0d : adc ah, 0x43 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a3358 : adc ah, ah ; clc ; push rax ; in eax, -8 ; call rax
0x00000000004a3328 : adc ah, ch ; clc ; call qword ptr [rax]
0x000000000042949f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429509 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049bfa5 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000042fa85 : adc al, 0x13 ; jmp rdx
0x000000000042e075 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043fbda : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000049bc9a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e968 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004189a7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043b880 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000041fb1a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000004c63d4 : adc al, 0x83 ; add byte ptr [rax], al ; sub ah, dh ; cli ; jmp qword ptr [rdx]
0x000000000043f326 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464aee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042a930 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042905e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fa81 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000421367 : adc al, 0xa ; jmp r10
0x000000000042e1e3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000401549 : adc al, 0xdd ; fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x000000000043fe78 : adc al, 0xdf ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000422841 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c07a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a36e9 : adc al, 0xf9 ; jmp rax
0x0000000000476632 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004915be : adc al, 9 ; ret 0xa074
0x00000000004a319c : adc al, al ; clc ; inc dword ptr [rcx - 0x43] ; clc ; call qword ptr [rax]
0x0000000000429647 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004296b1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040d6e7 : adc al, ch ; push rbx ; ret
0x000000000047fa5e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a36f9 : adc bh, cl ; jmp rax
0x00000000004a3430 : adc bl, 0xf8 ; call rax
0x00000000004c2890 : adc bl, 0xfd ; jmp qword ptr [rdx]
0x00000000004a33d8 : adc bl, ah ; clc ; push rax ; in al, -8 ; jmp rax
0x00000000004c6571 : adc bl, bh ; jmp rsi
0x00000000004681e2 : adc bl, byte ptr [rsi - 0x3c] ; add byte ptr [r8 - 0x77], cl ; ret
0x0000000000426b05 : adc bl, ch ; call 0xffffffffc412f45a
0x00000000004235d5 : adc bl, ch ; call 0xffffffffc43abf2a
0x0000000000478be2 : adc bl, ch ; jno 0x478c38 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483684 : adc bl, ch ; ret 0x8348
0x00000000004264f4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b1b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b227 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b187 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b1b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474360 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000412e16 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044f8bd : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045041b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044f8b6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000047835f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a6a9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a67d
0x000000000041681c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004713a4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004406b2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004103d3 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004787dc : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a15e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000044f8b7 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000418563 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000478360 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412337 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048812a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047927e : adc byte ptr [rax + 1], cl ; ret
0x00000000004003ed : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004746d4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x000000000042c074 : adc byte ptr [rax - 0x73], cl ; jg 0x42c091 ; jne 0x42c068 ; ret
0x000000000046ac65 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046ac64 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440322 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447138 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447a9b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c48a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004098f7 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bf7
0x0000000000463877 : adc byte ptr [rax - 0x77], cl ; jo 0x463895 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464bac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a6aa : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a67c
0x0000000000463837 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e303 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041681d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004859af : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a054 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c559 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000043276f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000437f27 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000437f63 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400aba : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420a23 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f9fb : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004797b9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000442b70 : adc byte ptr [rax], ah ; sub eax, dword ptr [rax + rax + 0x48] ; mov dword ptr [rax + 8], edx ; ret
0x000000000042aefc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429851 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25a : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041893a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000478785 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426618 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c078 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000004a318c : adc byte ptr [rbp - 0x42b00008], bl ; clc ; jmp qword ptr [rax]
0x0000000000440197 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000004bd9d0 : adc byte ptr [rbp - 3], bh ; push rax ; jle 0x4bd9db ; call rax
0x0000000000400b96 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049cb9c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041e95b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fac3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c04b2 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000412e17 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00000000004162d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a487 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a4a1 ; ret
0x000000000043df0a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004a39bc : adc byte ptr [rbx], bh ; stc ; call qword ptr [rax]
0x00000000004a399c : adc byte ptr [rbx], ch ; stc ; call qword ptr [rax]
0x00000000004a39ac : adc byte ptr [rbx], dh ; stc ; call qword ptr [rax]
0x00000000004103d4 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c364 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000004502b7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041f843 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000461f40 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ea48 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d2ec : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000004188e7 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004228c3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494167 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043e684 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a39b8 : adc byte ptr [rcx], bh ; stc ; call qword ptr [rax]
0x00000000004162d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004a3998 : adc byte ptr [rcx], ch ; stc ; call qword ptr [rax]
0x0000000000420229 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a39a8 : adc byte ptr [rcx], dh ; stc ; call qword ptr [rax]
0x000000000043e76f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004be560 : adc byte ptr [rdi - 0xc], ah ; call qword ptr [rax]
0x00000000004a39ec : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x00000000004a3994 : adc byte ptr [rdi], ah ; stc ; call qword ptr [rax]
0x00000000004a39c4 : adc byte ptr [rdi], bh ; stc ; call qword ptr [rax]
0x00000000004a39a4 : adc byte ptr [rdi], ch ; stc ; call qword ptr [rax]
0x000000000043ba93 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004975db : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004960df : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004972df : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004969df : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496cdf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963d7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496684 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497284 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497584 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496984 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049637c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049540d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049522d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495c05 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494b25 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495a25 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044f8be : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045041c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004a39b4 : adc byte ptr [rdi], dh ; stc ; call qword ptr [rax]
0x000000000044fe3c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000042ff79 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000485c8a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004a30a8 : adc byte ptr [rdx - 8], cl ; jmp qword ptr [rax]
0x000000000042eedb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3990 : adc byte ptr [rip + 0x2710fff9], ah ; stc ; call qword ptr [rax]
0x00000000004a39a0 : adc byte ptr [rip + 0x2f10fff9], ch ; stc ; call qword ptr [rax]
0x00000000004a39b0 : adc byte ptr [rip + 0x3710fff9], dh ; stc ; call qword ptr [rax]
0x00000000004a39c0 : adc byte ptr [rip + 0x3f10fff9], bh ; stc ; call qword ptr [rax]
0x00000000004c66d0 : adc byte ptr [rsi + 0x1b8c0000], al ; sti ; jmp qword ptr [rdx]
0x000000000042ed8a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e385 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004214b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000426f6b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004bd9b0 : adc byte ptr [rsi - 3], ch ; push rax ; outsd dx, dword ptr [rsi] ; std ; call rax
0x00000000004915ef : adc byte ptr [rsp - 4], al ; ret
0x0000000000491635 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496687 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3785 : adc cl, bh ; call qword ptr [rdx]
0x00000000004a3905 : adc cl, bh ; call rax
0x00000000004a38c5 : adc cl, bh ; jmp rax
0x00000000004524bf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004235c5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004524c2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000474cba : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b27c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x00000000004797b1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464454 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x0000000000426580 : adc dh, bh ; ret
0x000000000041af31 : adc dh, dh ; ret 0xf0f
0x00000000004a3324 : adc dl, ch ; clc ; call qword ptr [rax]
0x0000000000479123 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411972 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f315 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004103c5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004797fc : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f3ec : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417aee : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041627c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000475d6a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042aefb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000004297e7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042adff : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420fdb : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x00000000004358f7 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000435592 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435556 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046963f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402ec4 : adc dword ptr [rdi + 0x6cafe0], edi ; call rax
0x0000000000435a59 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043db5c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043dc8f : adc dword ptr [rsi + 3], edx ; ret
0x000000000043dd2c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043db2e : adc dword ptr [rsi - 1], edx ; ret
0x00000000004297e6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a36dd : adc eax, 0x1560fff9 ; stc ; jmp rax
0x000000000044f2f6 : adc eax, 0x27b73d ; je 0x44f308 ; ret
0x0000000000443f77 : adc eax, 0x28501c ; pop rbx ; ret
0x0000000000470f8d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000470ec9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000429371 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046e199 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000045a275 : adc eax, 0xa750027 ; jmp 0x45a2a7
0x000000000046645a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042ac5e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494949 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004174df : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417506
0x000000000049637f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a0e9 : adc eax, eax ; ret
0x000000000047a226 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b90e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046ac6c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000044027b : adc ebx, ebx ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000049b8e2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x0000000000441eff : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004152ea : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004470d1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c634 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452781 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x00000000004a3701 : adc ecx, edi ; call rax
0x00000000004a3781 : adc ecx, edi ; jmp qword ptr [rdx + 0x12fff910]
0x00000000004a38c1 : adc ecx, edi ; push qword ptr [rax + 0x10] ; stc ; jmp rax
0x00000000004a36f1 : adc edi, ecx ; jmp rax
0x00000000004ba5fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cbdc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f177 : adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000049a7e3 : adc esp, dword ptr [rbx] ; add byte ptr [rax], cl ; ret
0x0000000000496562 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004358f6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000435591 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000435555 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435a58 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043dc8e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043dd2b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043db2d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004264f3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494ab0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a225 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000042657f : adc sil, r15b ; ret
0x00000000004c24a3 : add ah, ah ; add byte ptr [r8], al ; test al, 0x1c ; clc ; call qword ptr [rax]
0x00000000004c5083 : add ah, al ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; clc ; cli ; jmp rdi
0x00000000004c29bb : add ah, bh ; add byte ptr [rax], al ; sar byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x000000000043e1be : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e1de : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e26d : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e19d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c4ebb : add ah, bh ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x00000000004c7dbb : add ah, bh ; pushfq ; add byte ptr [rax], al ; jo 0x4c7da9 ; cld ; call qword ptr [rax]
0x00000000004c019b : add ah, bl ; and byte ptr [rax], al ; add byte ptr [rax], dh ; push 0xf5 ; call qword ptr [rsi]
0x00000000004bf613 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bf6e8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043dc8a : add ah, byte ptr [rdx - 0xf] ; jl 0x43dcdf ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c288b : add ah, cl ; add byte ptr [r8], r8b ; adc bl, 0xfd ; jmp qword ptr [rdx]
0x00000000004beb3b : add ah, dh ; add ch, dh ; call qword ptr [rdx]
0x00000000004c4db3 : add ah, dh ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; cli ; jmp rdx
0x00000000004c36b3 : add ah, dh ; push rbp ; add byte ptr [rax], al ; js 0x4c367e ; clc ; call qword ptr [rdi]
0x0000000000449771 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004497a9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041bbbb : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x0000000000471409 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000422ffd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bb1f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423021 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c8e1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440b82 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426b98 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004be55d : add al, 0 ; add byte ptr [rax], dl ; hlt ; call qword ptr [rax]
0x0000000000449ad1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041802d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402bc5 : add al, 0 ; add byte ptr [rdi + 0x6cb720], bh ; call rbx
0x0000000000418b56 : add al, 0 ; add dh, dh ; ret
0x000000000046ac6b : add al, 0x11 ; ret
0x000000000043e20d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474309 : add al, 0x16 ; jae 0x4742b7 ; xor eax, eax ; ret
0x000000000042e071 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000004226fa : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000469db5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469d86
0x000000000043f04d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000004098fa : add al, 0x24 ; call 0x405bf4
0x00000000004713ac : add al, 0x24 ; call rax
0x000000000046f6c3 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000044f35a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c665 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040e9b0 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044cd8d : add al, 0x29 ; ret 0x8941
0x00000000004657de : add al, 0x31 ; ret
0x00000000004656da : add al, 0x37 ; ret
0x00000000004159cf : add al, 0x3a ; ret
0x000000000048091c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x4808f1
0x00000000004665a6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000470f91 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043b6eb : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043abf9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ac0b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000463d63 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463ca3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000434fda : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463b84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439439 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004653d4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474306 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x4742ba ; xor eax, eax ; ret
0x0000000000473bf6 : add al, 0x4c ; cmp edx, eax ; jne 0x473ba4 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004c41c4 : add al, 0x61 ; add byte ptr [rax], al ; call 0xffffffffe14c3bbc
0x000000000043ac07 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439447 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c632 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bb74 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004665a4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041fcfa : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bf6a7 : add al, 0x79 ; ret
0x0000000000474f41 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499c73 : add al, 0x81 ; je 0x499c55 ; ret
0x000000000042905b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000499c6f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499c59 ; ret
0x000000000042a933 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e308 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e2f8 ; ret
0x0000000000428db7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044913d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046aec0 : add al, 0x85 ; leave ; jne 0x46ae78 ; xor eax, eax ; ret
0x0000000000466c89 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049b78b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043abf6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000439436 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000499cdb : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e1da : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043e30b : add al, 0x8a ; je 0x43e2f5 ; ret
0x000000000045c240 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b574 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000489d23 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1898 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4c16 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b203 : add al, 0x98 ; add rax, r8 ; jmp rax
0x0000000000457264 : add al, 0xc5 ; sub byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000047a17d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47a1d9
0x000000000047fc8d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47fce9
0x000000000047aaf5 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042283d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435343 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f0cb : add al, 0xf3 ; ret
0x00000000004265d9 : add al, 0xf6 ; ret 0x7408
0x00000000004c2131 : add al, 0xf8 ; call qword ptr [rdi]
0x0000000000481018 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004742bc : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004bf71f : add al, 2 ; hlt ; ret
0x000000000042f5e7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c73a8 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x00000000004210dd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042cc08 : add al, 7 ; ret
0x000000000042e1df : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c126f : add al, al ; idiv dil ; ret
0x00000000004ae187 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004beb27 : add al, bh ; add ch, dh ; call qword ptr [rax]
0x00000000004c5087 : add al, bh ; cli ; jmp rdi
0x00000000004c5d77 : add al, bh ; mov dl, 0xfa ; call rdx
0x00000000004c6197 : add al, bl ; add byte ptr [rax], 0 ; je 0x4c6187 ; cli ; call rsi
0x00000000004c1ce7 : add al, bl ; fdivrp st(7) ; jmp qword ptr [rbx]
0x00000000004c82e7 : add al, bl ; std ; call rcx
0x000000000041aa55 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000443956 : add al, bpl ; ret
0x000000000041abb6 : add al, bpl ; ret 0xffff
0x0000000000497462 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235c1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000418fbd : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425bb3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004104a5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000469bb6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004174e0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f636 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445b0d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451add : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042319d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d90c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042a6f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231c1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c8f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043fd72 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000440ff2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440d65 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440c31 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440ba9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004664c3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046a2ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d094 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000474ead : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000482d6e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418608 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041ce17 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a40c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004479bc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044703c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044c7c4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c8a4d : add al, byte ptr [rax] ; ret
0x0000000000443f8a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x443f7e
0x000000000044262e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf268 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c4845 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4641 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004bff0d : add al, byte ptr [rdx] ; ret
0x000000000047a6b5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c189c : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004a3340 : add al, ch ; clc ; jmp rax
0x000000000041aa56 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420707 : add al, ch ; ret
0x0000000000491058 : add al, ch ; ret 0xf706
0x000000000041abb7 : add al, ch ; ret 0xffff
0x00000000004c20cf : add al, dh ; add edi, eax ; call qword ptr [rcx]
0x00000000004c572f : add al, dh ; push rsi ; cli ; jmp rsp
0x00000000004c7e0f : add al, dl ; clc ; cld ; call qword ptr [rax]
0x00000000004c885f : add al, dl ; push rsi ; std ; jmp qword ptr [rbx]
0x00000000004c33af : add al, dl ; sahf ; clc ; jmp rbx
0x00000000004c64fe : add bh, ah ; ret
0x000000000044480f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045f56e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000410066 : add bh, bh ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000004131fa : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400ab7 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047df6f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000402bcc : add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x000000000047a290 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412162 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dbcb : add bh, byte ptr [rax - 1] ; ret
0x00000000004bee7b : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d462 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000046ffb6 : add bh, dh ; ret 0x804
0x0000000000425e96 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000466c61 : add bl, al ; mov eax, 2 ; ret
0x0000000000420f44 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000443f3a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c537f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c4613 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004a355c : add bl, byte ptr [rdi] ; stc ; call qword ptr [rdx + 0x22fff91e]
0x00000000004c5435 : add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000469dba : add bl, ch ; ret 0x1f0f
0x00000000004062a7 : add bl, dh ; ret
0x00000000004754fa : add byte ptr [r15 + 0x4b5d83], dil ; call 0x401729
0x000000000047a860 : add byte ptr [r15 + 0x6cb9c0], r15b ; call rax
0x000000000047a98b : add byte ptr [r15 + 0x6cb9c4], r15b ; call rdx
0x000000000045b4f3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a4df : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474341 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425b0f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468c6e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x000000000049d2af : add byte ptr [r8 + 1], r9b ; ret
0x00000000004681e5 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000442f31 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459548 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27edd5a
0x0000000000446bd5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c24a5 : add byte ptr [r8], al ; test al, 0x1c ; clc ; call qword ptr [rax]
0x00000000004c288d : add byte ptr [r8], r8b ; adc bl, 0xfd ; jmp qword ptr [rdx]
0x000000000043f179 : add byte ptr [r8], r8b ; ret
0x00000000004c656f : add byte ptr [rax + 0x10], ah ; sti ; jmp rsi
0x0000000000420f3f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004bfa4f : add byte ptr [rax + 0x1c000019], dl ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000043da2f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000004053d7 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044bfe8 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418b15 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b160 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004c0b27 : add byte ptr [rax + 0x2a], ch ; add byte ptr [rax], al ; and al, 0xd4 ; cmc ; call rdx
0x00000000004170ab : add byte ptr [rax + 0x39], cl ; ret
0x000000000046d907 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x000000000048395b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004174f6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e7cb : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004174b7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046dae5 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004c005f : add byte ptr [rax + 0x3c00001f], ah ; cmc ; jmp qword ptr [rax]
0x00000000004c2f4f : add byte ptr [rax + 0x3c00004e], dl ; jl 0x4c2f57 ; call qword ptr [rcx]
0x0000000000425b0b : add byte ptr [rax + 0x43d480], bh ; cmove rax, rdx ; ret
0x000000000047a536 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c292f : add byte ptr [rax + 0x48], dh ; add byte ptr [rax], al ; or al, 0x35 ; clc ; jmp rsp
0x00000000004c154f : add byte ptr [rax + 0x4c000034], dl ; mov al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000411a28 : add byte ptr [rax + 0x5b004a19], al ; ret
0x0000000000462c37 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045ccee : add byte ptr [rax + 0x63], cl ; ret
0x000000000046492f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000046a91f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000046a90f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000004c0277 : add byte ptr [rax + 0x6b], ch ; cmc ; call qword ptr [rdx]
0x0000000000417a52 : add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000046a92f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004235bf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476564 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043b68f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004c5b07 : add byte ptr [rax + 0x7a], cl ; add byte ptr [rax], al ; nop ; cli ; call rsi
0x00000000004c602f : add byte ptr [rax + 0x7f], dh ; add byte ptr [rax], al ; fcomp st(0), st(3) ; cli ; jmp rsi
0x000000000040f7aa : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004beb37 : add byte ptr [rax + 0xa], bh ; add byte ptr [rax], al ; hlt ; add ch, dh ; call qword ptr [rdx]
0x0000000000466fbf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000465645 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004433eb : add byte ptr [rax + 0xf], cl ; ret
0x00000000004124d7 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425b10 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040f949 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468c6f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426433 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000004488aa : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004480fd : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044acba : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000401420 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474677 : add byte ptr [rax + 1], bh ; ret
0x0000000000425bb5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004104a7 : add byte ptr [rax + 1], cl ; ret
0x00000000004888af : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b2cc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047ef37 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000479720 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004be51f : add byte ptr [rax + 4], ah ; add byte ptr [rax], al ; pushfq ; add edi, esi ; call rdi
0x000000000049a9ff : add byte ptr [rax + 5], bh ; ret
0x00000000004c4a17 : add byte ptr [rax + 5], bl ; cli ; call rsi
0x000000000043e22e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000043e22d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ad12b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004c212b : add byte ptr [rax + rax*2], ch ; add byte ptr [rax], ah ; add al, 0xf8 ; call qword ptr [rdi]
0x000000000041bd98 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c6a9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000470f90 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004ae2d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004bfa53 : add byte ptr [rax + rdx*2], bl ; cmc ; jmp qword ptr [rcx]
0x00000000004c5b0b : add byte ptr [rax + rdx*4 - 6], al ; call rsi
0x000000000049bf3f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c1553 : add byte ptr [rax + rsi*4 - 0xa], cl ; jmp qword ptr [rsi]
0x0000000000403226 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c7dbf : add byte ptr [rax - 0x21], dh ; cld ; call qword ptr [rax]
0x000000000043fb31 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004524af : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dbbf : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000420e1b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f3ef : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045849f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x00000000004104c7 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004664cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004664af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046650f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004664bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004664ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000458e98 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004c08df : add byte ptr [rax - 0x3f], ah ; cmc ; call qword ptr [rcx]
0x000000000044c7dd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000041d84c : add byte ptr [rax - 0x418aff94], bl ; ret
0x00000000004c374f : add byte ptr [rax - 0x43], al ; clc ; jmp qword ptr [rsi]
0x00000000004c36b7 : add byte ptr [rax - 0x44], bh ; clc ; call qword ptr [rdi]
0x00000000004892c2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004c361f : add byte ptr [rax - 0x49], dh ; clc ; call qword ptr [rdi]
0x000000000044f8b3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000044978f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449773 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004497ab : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b5ca : add byte ptr [rax - 0x73], cl ; jl 0x47b5fa ; js 0x47b619 ; call rsp
0x000000000047b8df : add byte ptr [rax - 0x73], cl ; jl 0x47b90f ; js 0x47b92e ; call rsp
0x000000000047bca6 : add byte ptr [rax - 0x73], cl ; jl 0x47bcd6 ; js 0x47bcf5 ; call rsp
0x000000000049a95f : add byte ptr [rax - 0x73], cl ; jl 0x49a990 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041af2d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000474cb7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b8df : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x0000000000457261 : add byte ptr [rax - 0x75], cl ; add al, 0xc5 ; sub byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000044c80f : add byte ptr [rax - 0x75], cl ; add eax, 0x27eee1 ; ret
0x000000000044549f : add byte ptr [rax - 0x75], cl ; add eax, 0x286e21 ; ret
0x00000000004165af : add byte ptr [rax - 0x75], cl ; add eax, 0x2b2b09 ; ret
0x000000000041997b : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044f8cf : add byte ptr [rax - 0x75], cl ; jl 0x44f900 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000414f86 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464be6 : add byte ptr [rax - 0x75], cl ; jp 0x464c31 ; jmp 0x464bb6
0x0000000000464c1f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d3cd : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416b57 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004313af : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e177 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000444fc2 : add byte ptr [rax - 0x75], cl ; ret
0x000000000049c077 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004165df : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000049d9b3 : add byte ptr [rax - 0x77], cl ; enter -0x72b4, 0x3d ; ret 0x22e1
0x000000000040fa42 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041dd83 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000414af2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414c62 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004695f9 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441445 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441345 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000041bbbd : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x00000000004690c8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091a1e
0x000000000040f891 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000441001 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e430 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040335c : add byte ptr [rax - 0x77], cl ; ret
0x00000000004174e2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041d95c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047a653 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000469e8f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x000000000043eb0a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x00000000004029ce : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c3ff : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000041986f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459819 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044eb24 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004552e1 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e973 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044eef7 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470a97 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000485984 : add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x0000000000425abb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a7bf : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000459f24 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413200 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000471d6f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049de1d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470a33 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004653cf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000467e0f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000046470a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000442f32 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000411377 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000400576 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rdx - 0x41], 0x9c ; ret
0x000000000047140b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459549 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27edd59
0x000000000041e348 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042105d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004016b8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454dc8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004563ef : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041e472 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040154e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bb1f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d55f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c4f9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000004699ef : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040ed3f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475c4f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a074f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452dcf : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004012af : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446bd6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bbc0 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000004228bf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464627 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000425daf : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425d3f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047d90e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000446fcf : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462417 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004846cf : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000425350 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004291d3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004228e3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046733f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e11f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046550f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c344 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044ddcf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004c3eaf : add byte ptr [rax - 0x7e], dl ; stc ; call rdi
0x00000000004468bc : add byte ptr [rax - 0x7f], cl ; ret 0x56e0
0x0000000000432b2b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000463c92 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040fff2 : add byte ptr [rax - 1], bh ; ret
0x00000000004bea77 : add byte ptr [rax - 1], bl ; hlt ; call qword ptr [rbx]
0x000000000041670e : add byte ptr [rax - 1], dil ; ret
0x00000000004a30a4 : add byte ptr [rax - 8], cl ; call qword ptr [rax]
0x00000000004141c9 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417a4f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6c9800], bh ; ret
0x0000000000410229 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000048b3f0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004131fd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047ddcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043534b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047813b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000465f7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044e763 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041c843 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417a5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cbab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c275 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e601 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446dc2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f7ab : add byte ptr [rax], 0 ; je 0x40f7c0 ; mov eax, edx ; pop rbx ; ret
0x000000000047a537 : add byte ptr [rax], 0 ; je 0x47a548 ; mov eax, edx ; pop rbx ; ret
0x00000000004c6199 : add byte ptr [rax], 0 ; je 0x4c6185 ; cli ; call rsi
0x00000000004c212f : add byte ptr [rax], ah ; add al, 0xf8 ; call qword ptr [rdi]
0x00000000004c6dff : add byte ptr [rax], ah ; sti ; jmp qword ptr [rdx]
0x00000000004c63d2 : add byte ptr [rax], al ; adc al, 0x83 ; add byte ptr [rax], al ; sub ah, dh ; cli ; jmp qword ptr [rdx]
0x00000000004c288e : add byte ptr [rax], al ; adc bl, 0xfd ; jmp qword ptr [rdx]
0x00000000004be55e : add byte ptr [rax], al ; adc byte ptr [rdi - 0xc], ah ; call qword ptr [rax]
0x00000000004c66ce : add byte ptr [rax], al ; adc byte ptr [rsi + 0x1b8c0000], al ; sti ; jmp qword ptr [rdx]
0x0000000000470f8f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c41c2 : add byte ptr [rax], al ; add al, 0x61 ; add byte ptr [rax], al ; call 0xffffffffe14c3bbe
0x0000000000420705 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004601e6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466c5f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000469db8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004141ca : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000420f3d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000045c4cb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046d905 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483959 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044e7c9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000046492d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000417a50 : add byte ptr [rax], al ; add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000043b68d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004488a8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004480fb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044acb8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000040141e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a2c3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004889d4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004888ad : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000049a9fd : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000049bf3d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x000000000043fb2f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004130ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045849d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041022a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044c7db : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047b5c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b5fc ; js 0x47b61b ; call rsp
0x000000000047b8dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b911 ; js 0x47b930 ; call rsp
0x000000000047bca4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bcd8 ; js 0x47bcf7 ; call rsp
0x0000000000419979 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000414f84 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464be4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464c33 ; jmp 0x464bb8
0x00000000004165dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004695f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441443 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441343 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000440fff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040f8d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d95a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000046c3fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046db12 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e971 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000485982 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x0000000000425ab9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a7bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004131fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000471d6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000044299c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d55d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444813 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a074d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044bbbe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042a827 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425dad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425d3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000446fcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004847ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042a891 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046733d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e11d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044ddcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434338 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040fff0 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000041659b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047432b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046492b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004130ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045849b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049aa6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004165db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041d958 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485980 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x000000000045e6cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000457e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d55b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000475c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a074b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000425dab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000446fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004847ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004153db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004aefb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af4a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000416dbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043d79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042289b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042146b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442b19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000046648c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000477f1f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047ddcc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b0fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b018c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000045f5f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043bcbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bccc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bcdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bcec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bcfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bc3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043bc4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043bc5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043bc7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bc8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bcac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043bc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000040099b : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004a314c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 0x9d ; clc ; call rax
0x000000000043b68c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b06c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000420f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x0000000000414e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a2c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049a9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000043534c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047813c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004165cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004165dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411bac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043549c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442b1a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000040089c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415250 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414a51 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004153dd : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004affac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0744 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004aefb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af4a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a1014 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401d
0x00000000004bc114 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4bb6
0x0000000000400951 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x400951 ; call rax
0x000000000041c844 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041191c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cbac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000045c29c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004424c8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000461e3d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447d62 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043de8a : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e1d9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047b90f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044275c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000434c2d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411363 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415251 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000412d10 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000460366 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045db0c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000044391d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462c96 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004163dc : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045d112 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d095 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403ca3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d79d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b0bd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420508 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440c41 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000440d75 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440baa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440bb9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004256b1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004587fc : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042289d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042146d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041cec5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000425ec0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425ee6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c276 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045b59a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ebba : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049bd57 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049bd7f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e135 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043542d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043549d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044895c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004628b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411bad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000425ded : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466fd5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d396 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000442d74 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046b907 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042e602 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425d02 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440b83 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e465 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c87ce : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442b1b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c1722 : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; call 0x244c0ecb
0x00000000004584ed : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004497f5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472152 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000040099c : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004652e0 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004172b8 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000446dc3 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043cef1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485850 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049aba5 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478697 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046648e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425bb4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e3ae : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043e6f7 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049bfa8 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004010ec : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f6b6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f365 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445507 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000477f21 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c596a : add byte ptr [rax], al ; and al, 0x83 ; cli ; call rax
0x00000000004c82e2 : add byte ptr [rax], al ; and al, 0xa2 ; add byte ptr [rax], al ; fadd dword ptr [rax - 3] ; call rcx
0x00000000004c0b2a : add byte ptr [rax], al ; and al, 0xd4 ; cmc ; call rdx
0x00000000004c212e : add byte ptr [rax], al ; and byte ptr [rax + rdi*8], al ; call qword ptr [rdi]
0x00000000004c24ee : add byte ptr [rax], al ; and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x00000000004c6dfe : add byte ptr [rax], al ; and byte ptr [rsi], bh ; sti ; jmp qword ptr [rdx]
0x0000000000425dee : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004236b0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465644 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c1726 : add byte ptr [rax], al ; call 0x244c0ec7
0x00000000004c41c6 : add byte ptr [rax], al ; call 0xffffffffe14c3bba
0x000000000044c4eb : add byte ptr [rax], al ; call r12
0x000000000047b784 : add byte ptr [rax], al ; call r14
0x000000000044c5c5 : add byte ptr [rax], al ; call r15
0x000000000040160a : add byte ptr [rax], al ; call rax
0x0000000000440b89 : add byte ptr [rax], al ; call rbx
0x00000000004b0fde : add byte ptr [rax], al ; call rdi
0x000000000040e96c : add byte ptr [rax], al ; call rdx
0x00000000004b018e : add byte ptr [rax], al ; call rsp
0x00000000004beb26 : add byte ptr [rax], al ; clc ; add ch, dh ; call qword ptr [rax]
0x00000000004c5086 : add byte ptr [rax], al ; clc ; cli ; jmp rdi
0x00000000004c5d76 : add byte ptr [rax], al ; clc ; mov dl, 0xfa ; call rdx
0x00000000004c29ba : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; sar byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x00000000004c4eba : add byte ptr [rax], al ; cld ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x00000000004c7dba : add byte ptr [rax], al ; cld ; pushfq ; add byte ptr [rax], al ; jo 0x4c7daa ; cld ; call qword ptr [rax]
0x00000000004c0062 : add byte ptr [rax], al ; cmp al, 0x66 ; cmc ; jmp qword ptr [rax]
0x00000000004c2f52 : add byte ptr [rax], al ; cmp al, 0x7c ; clc ; call qword ptr [rcx]
0x00000000004c6dfa : add byte ptr [rax], al ; cmp al, 0x8d ; add byte ptr [rax], al ; and byte ptr [rsi], bh ; sti ; jmp qword ptr [rdx]
0x00000000004109e7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x4109f8 ; pop rbx ; ret
0x00000000004646a5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x4646b9 ; ret
0x00000000004bfc06 : add byte ptr [rax], al ; cwde ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004c6196 : add byte ptr [rax], al ; fadd dword ptr [rax - 0x1e8c0000] ; cli ; call rsi
0x00000000004c82e6 : add byte ptr [rax], al ; fadd dword ptr [rax - 3] ; call rcx
0x00000000004c6032 : add byte ptr [rax], al ; fcomp st(0), st(3) ; cli ; jmp rsi
0x00000000004c7866 : add byte ptr [rax], al ; fmul dword ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000004c019a : add byte ptr [rax], al ; fsub qword ptr [rax] ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x00000000004beb3a : add byte ptr [rax], al ; hlt ; add ch, dh ; call qword ptr [rdx]
0x00000000004c4db2 : add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; cli ; jmp rdx
0x00000000004c36b2 : add byte ptr [rax], al ; hlt ; push rbp ; add byte ptr [rax], al ; js 0x4c367f ; clc ; call qword ptr [rdi]
0x00000000004c24a2 : add byte ptr [rax], al ; in al, 0x43 ; add byte ptr [rax], al ; test al, 0x1c ; clc ; call qword ptr [rax]
0x00000000004c212a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; and byte ptr [rax + rdi*8], al ; call qword ptr [rdi]
0x00000000004c572a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jbe 0x4c5738 ; add al, dh ; push rsi ; cli ; jmp rsp
0x000000000040f7ac : add byte ptr [rax], al ; je 0x40f7bf ; mov eax, edx ; pop rbx ; ret
0x0000000000420da7 : add byte ptr [rax], al ; je 0x420db4 ; ret
0x000000000047a538 : add byte ptr [rax], al ; je 0x47a547 ; mov eax, edx ; pop rbx ; ret
0x000000000049bf3e : add byte ptr [rax], al ; je 0x49befa ; add rsp, 0x18 ; ret
0x000000000049e466 : add byte ptr [rax], al ; je 0x49e475 ; ret
0x00000000004c619a : add byte ptr [rax], al ; je 0x4c6184 ; cli ; call rsi
0x00000000004c783a : add byte ptr [rax], al ; jl 0x4c77de ; add byte ptr [rax], al ; ror byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x0000000000469db9 : add byte ptr [rax], al ; jmp 0x469d82
0x000000000043fd74 : add byte ptr [rax], al ; jmp rax
0x00000000004c292e : add byte ptr [rax], al ; jo 0x4c2983 ; add byte ptr [rax], al ; or al, 0x35 ; clc ; jmp rsp
0x00000000004c361e : add byte ptr [rax], al ; jo 0x4c35de ; clc ; call qword ptr [rdi]
0x00000000004c602e : add byte ptr [rax], al ; jo 0x4c60ba ; add byte ptr [rax], al ; fcomp st(0), st(3) ; cli ; jmp rsi
0x00000000004c7dbe : add byte ptr [rax], al ; jo 0x4c7da6 ; cld ; call qword ptr [rax]
0x00000000004c5b06 : add byte ptr [rax], al ; jp 0x4c5b14 ; add byte ptr [rax + rdx*4 - 6], al ; call rsi
0x00000000004beb36 : add byte ptr [rax], al ; js 0x4beb4d ; add byte ptr [rax], al ; hlt ; add ch, dh ; call qword ptr [rdx]
0x00000000004c36b6 : add byte ptr [rax], al ; js 0x4c367b ; clc ; call qword ptr [rdi]
0x000000000043bcbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bcce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bcde : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bcee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bcfe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bc1d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043bc3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043bc4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043bc5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bc6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043bc7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bc8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bbca : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bc9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bcae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043bc2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047b5c9 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000040099d : add byte ptr [rax], al ; leave ; ret
0x00000000004be382 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp esi, esp ; call qword ptr [rdx]
0x00000000004c656a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test byte ptr [rax], al ; add byte ptr [rax + 0x10], ah ; sti ; jmp rsi
0x00000000004c0f72 : add byte ptr [rax], al ; mov ah, 0x2e ; add byte ptr [rax], al ; mov dh, dh ; cmc ; call qword ptr [rdx]
0x00000000004c5d72 : add byte ptr [rax], al ; mov ah, 0x7c ; add byte ptr [rax], al ; clc ; mov dl, 0xfa ; call rdx
0x00000000004c757a : add byte ptr [rax], al ; mov ah, 6 ; cld ; jmp qword ptr [rax]
0x00000000004bea72 : add byte ptr [rax], al ; mov ah, 9 ; add byte ptr [rax], al ; pop rax ; push rsp ; call qword ptr [rbx]
0x00000000004c4ebe : add byte ptr [rax], al ; mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x00000000004a314e : add byte ptr [rax], al ; mov al, 0x9d ; clc ; call rax
0x00000000004c1552 : add byte ptr [rax], al ; mov al, 0xf6 ; jmp qword ptr [rsi]
0x000000000043ab9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004393ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c4db6 : add byte ptr [rax], al ; mov byte ptr [rcx], bl ; cli ; jmp rdx
0x000000000043b68e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b06e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c0f76 : add byte ptr [rax], al ; mov dh, dh ; cmc ; call qword ptr [rdx]
0x000000000046477b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b07e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000420f3e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046a91e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000046a90e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000046a92e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000417a51 : add byte ptr [rax], al ; mov eax, 0x6c9800 ; ret
0x0000000000463c91 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040fff1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474676 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049a9fe : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000041629e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049de4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49de69 ; ret
0x000000000049e06e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e089 ; ret
0x000000000048834e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x243f0a] ; ret
0x000000000040f5c1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004732b6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000040f7f5 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004447b3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043b0ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402bc6 : add byte ptr [rax], al ; mov edi, 0x6cb720 ; call rbx
0x000000000049bd58 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049bd80 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434c2e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043534e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473909 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43fbf9
0x0000000000440b84 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000047acf8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000454d45 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487c62 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000487ce6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470a04 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c83e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c0be : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a2b0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f3ff : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c6b0a : add byte ptr [rax], al ; mov r8b, byte ptr [rax] ; add byte ptr [rax], dh ; xor bl, bh ; call rsp
0x000000000041654e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000004664ae : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004664be : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004664ce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004664de : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004664ee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004664fe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046650e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414a89 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410a00 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414f85 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047813e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047183e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464c1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004165ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c08e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c0ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c12e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c11e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c0de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044549e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x286e21] ; ret
0x00000000004165ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b2b09] ; ret
0x00000000004744df : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c237 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fa41 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dd82 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041bd9b : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000004165de : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e42f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a679 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000464be5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464bb7
0x0000000000440d76 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440c42 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440bba : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440bab : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000441000 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041bbbc : add byte ptr [rax], al ; mov rdi, rbx ; call 0x417e17
0x00000000004625e6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000461efb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043518e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004174e1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417504
0x000000000049c69e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400584 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400597 ; ret
0x00000000004c66d2 : add byte ptr [rax], al ; mov word ptr [rbx], ds ; sti ; jmp qword ptr [rdx]
0x00000000004c374a : add byte ptr [rax], al ; mov word ptr [rsi], ss ; add byte ptr [rax - 0x43], al ; clc ; jmp qword ptr [rsi]
0x00000000004c7862 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; add byte ptr [rax], al ; fmul dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000499eff : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000411bae : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000434dbe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043549e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043542e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c2f4e : add byte ptr [rax], al ; nop ; add byte ptr [rax], r8b ; cmp al, 0x7c ; clc ; call qword ptr [rcx]
0x00000000004c5b0a : add byte ptr [rax], al ; nop ; cli ; call rsi
0x0000000000442b1c : add byte ptr [rax], al ; nop ; ret
0x00000000004bfa4e : add byte ptr [rax], al ; nop ; sbb dword ptr [rax], eax ; add byte ptr [rax + rdx*2], bl ; cmc ; jmp qword ptr [rcx]
0x00000000004c154e : add byte ptr [rax], al ; nop ; xor al, 0 ; add byte ptr [rax + rsi*4 - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004c2932 : add byte ptr [rax], al ; or al, 0x35 ; clc ; jmp rsp
0x00000000004c16ca : add byte ptr [rax], al ; or al, 0x36 ; add byte ptr [rax], al ; xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x00000000004beb22 : add byte ptr [rax], al ; or al, byte ptr fs:[rax] ; add al, bh ; add ch, dh ; call qword ptr [rax]
0x0000000000476634 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c365e : add byte ptr [rax], al ; or ch, 0xfd ; call qword ptr [rbx]
0x00000000004c1486 : add byte ptr [rax], al ; pop rax ; jns 0x4c1486 ; call qword ptr [rax]
0x00000000004bea76 : add byte ptr [rax], al ; pop rax ; push rsp ; call qword ptr [rbx]
0x000000000045c1cd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c29d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040089e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e1da : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462c97 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a29c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000044275d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411364 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004005b6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040047e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041194b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c361a : add byte ptr [rax], al ; pop rsp ; push rbp ; add byte ptr [rax], al ; jo 0x4c35e2 ; clc ; call qword ptr [rdi]
0x00000000004c7e0a : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rax]
0x00000000004c3322 : add byte ptr [rax], al ; push rdx ; add byte ptr [rax], al ; test al, 0x9e ; clc ; call qword ptr [rdx]
0x00000000004c4a12 : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xfa055800 ; call rsi
0x00000000004be55a : add byte ptr [rax], al ; pushfq ; add al, 0 ; add byte ptr [rax], dl ; hlt ; call qword ptr [rax]
0x00000000004be522 : add byte ptr [rax], al ; pushfq ; add edi, esi ; call rdi
0x00000000004c885a : add byte ptr [rax], al ; pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rbx]
0x00000000004c365a : add byte ptr [rax], al ; pushfq ; push rbp ; add byte ptr [rax], al ; or ch, 0xfd ; call qword ptr [rbx]
0x00000000004c885e : add byte ptr [rax], al ; rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rbx]
0x00000000004c39de : add byte ptr [rax], al ; rcr bh, 0xf8 ; call qword ptr [rbx]
0x00000000004010f3 : add byte ptr [rax], al ; ret
0x00000000004a7366 : add byte ptr [rax], al ; ret 0
0x00000000004ae2de : add byte ptr [rax], al ; ret 0x10
0x00000000004affae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0746 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004aefb6 : add byte ptr [rax], al ; ret 0x24
0x00000000004af4a6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a1016 : add byte ptr [rax], al ; ret 0x401d
0x00000000004bc116 : add byte ptr [rax], al ; ret 0x4bb6
0x00000000004adade : add byte ptr [rax], al ; ret 0xa
0x00000000004adede : add byte ptr [rax], al ; ret 0xd
0x00000000004b1382 : add byte ptr [rax], al ; ret 1
0x00000000004b1582 : add byte ptr [rax], al ; ret 2
0x00000000004b1782 : add byte ptr [rax], al ; ret 3
0x00000000004b1982 : add byte ptr [rax], al ; ret 4
0x00000000004b1b82 : add byte ptr [rax], al ; ret 5
0x00000000004ad686 : add byte ptr [rax], al ; ret 6
0x00000000004b1f82 : add byte ptr [rax], al ; ret 7
0x00000000004b2182 : add byte ptr [rax], al ; ret 8
0x00000000004b2382 : add byte ptr [rax], al ; ret 9
0x00000000004b197e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c126e : add byte ptr [rax], al ; rol byte ptr [rdx - 0xa], 0xff ; ret
0x00000000004add86 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c783e : add byte ptr [rax], al ; ror byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x00000000004c7e0e : add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rax]
0x00000000004c29be : add byte ptr [rax], al ; sar byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x00000000004bfa52 : add byte ptr [rax], al ; sbb al, 0x50 ; cmc ; jmp qword ptr [rcx]
0x00000000004c39da : add byte ptr [rax], al ; sbb al, 0x59 ; add byte ptr [rax], al ; rcr bh, 0xf8 ; call qword ptr [rbx]
0x00000000004c67d6 : add byte ptr [rax], al ; sbb byte ptr [rdi - 0x616c0000], al ; std ; call rcx
0x00000000004c60ae : add byte ptr [rax], al ; sbb ch, 0xfa ; jmp rdi
0x00000000004c63d6 : add byte ptr [rax], al ; sub ah, dh ; cli ; jmp qword ptr [rdx]
0x00000000004c24ea : add byte ptr [rax], al ; sub al, 0x44 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x00000000004c4486 : add byte ptr [rax], al ; sub cl, dh ; stc ; call qword ptr [rsi]
0x000000000042f04c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004159d6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000442615 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000466fc3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004c24a6 : add byte ptr [rax], al ; test al, 0x1c ; clc ; call qword ptr [rax]
0x00000000004c5966 : add byte ptr [rax], al ; test al, 0x78 ; add byte ptr [rax], al ; and al, 0x83 ; cli ; call rax
0x00000000004c3326 : add byte ptr [rax], al ; test al, 0x9e ; clc ; call qword ptr [rdx]
0x00000000004424c9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400953 : add byte ptr [rax], al ; test rax, rax ; je 0x40094f ; call rax
0x00000000004c67da : add byte ptr [rax], al ; xchg eax, esp ; sahf ; std ; call rcx
0x00000000004c6b0e : add byte ptr [rax], al ; xor byte ptr [rax], dh ; sti ; call rsp
0x00000000004c16ce : add byte ptr [rax], al ; xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x00000000004bf42e : add byte ptr [rax], al ; xor byte ptr [rdi], ch ; cmc ; call qword ptr [rax]
0x00000000004c019e : add byte ptr [rax], al ; xor byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x0000000000451997 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ebbb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a2b5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041c846 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041191e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004131ae : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x4131c9 ; ret
0x0000000000487ed1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440af6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440b1b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440b3f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440b5f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000425d9d : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400999 : add byte ptr [rax], bh ; leave ; ret
0x00000000004c7de7 : add byte ptr [rax], ch ; cdq ; cld ; call qword ptr [rax]
0x00000000004c80f7 : add byte ptr [rax], ch ; cmp al, 0xfd ; call rsp
0x00000000004c63d7 : add byte ptr [rax], ch ; hlt ; cli ; jmp qword ptr [rdx]
0x00000000004c4487 : add byte ptr [rax], ch ; int1 ; stc ; call qword ptr [rsi]
0x0000000000476635 : add byte ptr [rax], cl ; je 0x4766a2 ; pop rbx ; ret
0x000000000049a7de : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231379], 8 ; ret
0x000000000049a7e5 : add byte ptr [rax], cl ; ret
0x00000000004c019f : add byte ptr [rax], dh ; push 0xf5 ; call qword ptr [rsi]
0x00000000004c6b0f : add byte ptr [rax], dh ; xor bl, bh ; call rsp
0x00000000004be55f : add byte ptr [rax], dl ; hlt ; call qword ptr [rax]
0x0000000000400fdf : add byte ptr [rax], dl ; jmp 0x400f43
0x0000000000470aed : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047810d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000004c24ed : add byte ptr [rax], r8b ; and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x000000000047df6d : add byte ptr [rax], r8b ; call rbx
0x00000000004c2f51 : add byte ptr [rax], r8b ; cmp al, 0x7c ; clc ; call qword ptr [rcx]
0x0000000000474675 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b09d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042c83d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b0dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047aa75 : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000004129cd : add byte ptr [rax], r8b ; ret
0x0000000000499e35 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041318d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000004671e7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x000000000041b041 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b1be : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047852c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c1ce : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c29e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004006ba : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474447 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x000000000041d420 : add byte ptr [rbp + 0xa], dh ; jmp 0x41d44f
0x0000000000451972 : add byte ptr [rbp + 0xa], dh ; jmp 0x4519a0
0x000000000045a277 : add byte ptr [rbp + 0xa], dh ; jmp 0x45a2a5
0x00000000004783b2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000417561 : add byte ptr [rbp + 0xb], dh ; jmp 0x417591
0x0000000000478d4f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000478c3f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478454 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c7e0b : add byte ptr [rbp + rbx*4], cl ; add al, dl ; clc ; cld ; call qword ptr [rax]
0x00000000004aded7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000464d6e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004c365b : add byte ptr [rbp + rdx*2 - 0x32800000], bl ; std ; call qword ptr [rbx]
0x00000000004c361b : add byte ptr [rbp + rdx*2], bl ; add byte ptr [rax - 0x49], dh ; clc ; call qword ptr [rdi]
0x000000000049e9d4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004424ca : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae183 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041d84f : add byte ptr [rbp - 0x42], dh ; ret
0x00000000004525d9 : add byte ptr [rbp - 0x75], cl ; jl 0x45260a ; and byte ptr [rax + 1], cl ; ret
0x000000000045c859 : add byte ptr [rbp - 0x75], cl ; jl 0x45c88a ; and byte ptr [rax + 1], cl ; ret
0x0000000000461e3f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447d64 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043de8c : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000415ac2 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x00000000004803df : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004a3a78 : add byte ptr [rbp - 7], bh ; jmp qword ptr [rax]
0x0000000000429059 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474668 : add byte ptr [rbx + 0x255b000d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e1db : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047466b : add byte ptr [rbx + 0x25], bl ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000046ffb0 : add byte ptr [rbx + 0x25c24115], cl ; add bh, dh ; ret 0x804
0x00000000004109e8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416647 : add byte ptr [rbx + 0x2b4f5505], al ; add byte ptr [rcx], al ; ret
0x000000000047b911 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044275e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a29d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b0af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043abdf : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000420007 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434c2f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470ae6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e537 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000004123e1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411365 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004005b7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040047f : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049de4f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483955 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f2fa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c596b : add byte ptr [rbx + rax*4], ah ; cli ; call rax
0x00000000004c63d3 : add byte ptr [rbx + rax*4], dl ; add byte ptr [rax], al ; sub ah, dh ; cli ; jmp qword ptr [rdx]
0x0000000000474e72 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a217 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047fd27 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000460368 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047c637 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c651 ; ret
0x00000000004678da : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x000000000041097f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e256 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e24f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e248 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e241 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e23a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e233 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045db0e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043dfa5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043df90 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000004746d1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000474f3e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000044391f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462c98 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004101e4 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d096 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406763 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000000004628c4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000040a3d8 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004427bf : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x00000000004163de : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c7de3 : add byte ptr [rbx*4 - 0x66d80000], ah ; cld ; call qword ptr [rax]
0x0000000000470a37 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000044ec7f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046553f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041af7f : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000004897fd : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426716 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e1be : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040f5c2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000474eaf : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004152a6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470ae3 : add byte ptr [rcx + 0x5d5b006c], ah ; jmp rax
0x000000000046477c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fa7e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042e2fc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043af28 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000499f00 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004c0273 : add byte ptr [rcx + 0x6b680000], dh ; cmc ; call qword ptr [rdx]
0x0000000000440395 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d114 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d097 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041ac77 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f15e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403ca5 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d79f : add byte ptr [rcx + 1], cl ; ret
0x000000000049b0bf : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042050a : add byte ptr [rcx + 9], al ; ret
0x0000000000412332 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c4a13 : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax + 5], bl ; cli ; call rsi
0x00000000004c39db : add byte ptr [rcx + rbx*2], bl ; add byte ptr [rax], al ; rcr bh, 0xf8 ; call qword ptr [rbx]
0x00000000004bea73 : add byte ptr [rcx + rcx - 0xa80000], dh ; hlt ; call qword ptr [rbx]
0x000000000042c83f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412333 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000440c43 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000047390a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43fbf8
0x000000000047e0bf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000440d77 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445132 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000049c69f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440bac : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044508c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440bbb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c126b : add byte ptr [rcx + rsi + 0x42c00000], ch ; idiv bh ; ret
0x000000000048ec5b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048bda3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488ba3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045ae14 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x00000000004054e4 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449ad3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449af0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449b0d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000482d70 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000047fa5b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004406af : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e8cf : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000442627 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004256b3 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000411253 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004587fe : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000443e17 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445b87 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046c72f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x000000000042289f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fb50 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000042146f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041802f : add byte ptr [rcx - 0xa], al ; ret
0x0000000000419f39 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000419f43 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cb11 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c63a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004c619b : add byte ptr [rcx - 6], dh ; call rsi
0x0000000000425ec2 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425ee8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004c6dfb : add byte ptr [rcx*4 + 0x3e200000], bh ; sti ; jmp qword ptr [rdx]
0x0000000000442d72 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004c41c3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0xffffffffe14c3bbd
0x000000000047466e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400919 : add byte ptr [rcx], al ; ret
0x000000000045f56b : add byte ptr [rcx], bh ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000443f6c : add byte ptr [rcx], bh ; ret
0x0000000000400bfc : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000467ef9 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049c710 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b59c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041363a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000047b237 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ebbc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046ae7f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46ae7a ; ret
0x000000000046aafa : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ab31 ; ret
0x00000000004888c7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004131af : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4131c8 ; ret
0x000000000047a528 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000487ed2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000004479be : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446bb7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044703e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000443f8b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004a38c0 : add byte ptr [rcx], dl ; stc ; push qword ptr [rax + 0x10] ; stc ; jmp rax
0x000000000041abcb : add byte ptr [rdi + 0x4a201c], bh ; call 0x416e08
0x000000000041abca : add byte ptr [rdi + 0x4a201c], dil ; call 0x416e09
0x000000000041abb2 : add byte ptr [rdi + 0x4a204b], bh ; call 0x416e08
0x000000000041abb1 : add byte ptr [rdi + 0x4a204b], dil ; call 0x416e09
0x00000000004754fb : add byte ptr [rdi + 0x4b5d83], bh ; call 0x401728
0x00000000004c885b : add byte ptr [rdi + 0x56d00000], bl ; std ; jmp qword ptr [rbx]
0x0000000000432a35 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445540 : add byte ptr [rdi + 0x6cb6d0], bh ; call rax
0x000000000044553f : add byte ptr [rdi + 0x6cb6d0], r15b ; call rax
0x0000000000402bc7 : add byte ptr [rdi + 0x6cb720], bh ; call rbx
0x000000000047a861 : add byte ptr [rdi + 0x6cb9c0], bh ; call rax
0x000000000047a98c : add byte ptr [rdi + 0x6cb9c4], bh ; call rdx
0x000000000049bd59 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049bd81 : add byte ptr [rdi + 1], bh ; call rax
0x000000000045b4f4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a4e0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c7863 : add byte ptr [rdi + rdx*4 + 0xed80000], ah ; cld ; call qword ptr [rax]
0x00000000004a31a8 : add byte ptr [rdi - 0x400f0008], bh ; clc ; call qword ptr [rsi]
0x00000000004a3abc : add byte ptr [rdi - 7], bh ; jmp qword ptr [rax]
0x00000000004a39e8 : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x00000000004343ca : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e137 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043542f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043549f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044895e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004628b7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000042270f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466630 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411baf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e30f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000425f6f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cb6f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000425e0f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000425dff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000425def : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466fd7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d398 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000403243 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000044920a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420504 : add byte ptr [rdi], cl ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460939 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451ad9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d908 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000040ed39 : add byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fe1a : add byte ptr [rdi], cl ; test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045dd3b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467a89 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000442d76 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004679fd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046b90a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042642e : add byte ptr [rdx + 0x42f930], bh ; cmove rax, rdx ; ret
0x000000000043ab9f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000004393ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004447af : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049bef6 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c4b4b : add byte ptr [rdx + rbp*2 + 0xaa00000], cl ; cli ; jmp rdx
0x00000000004adad7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004c6b0b : add byte ptr [rdx + rcx*4], cl ; add byte ptr [rax], dh ; xor bl, bh ; call rsp
0x00000000004beb23 : add byte ptr [rdx + rcx], ah ; add al, bh ; add ch, dh ; call qword ptr [rax]
0x0000000000469740 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469755
0x0000000000488c55 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004c82e3 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; fadd dword ptr [rax - 3] ; call rcx
0x000000000044f3fd : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004a34b0 : add byte ptr [rip + 0x1c90fff9], bl ; stc ; jmp qword ptr [rax]
0x000000000042e604 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457bd3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000425d04 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440b85 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000440d72 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440c3e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440bb6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000440ff0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000440d63 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440c2f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440ba7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e467 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c0f73 : add byte ptr [rsi + rbp - 0x9780000], dh ; cmc ; call qword ptr [rdx]
0x00000000004c87d0 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c374b : add byte ptr [rsi + rdx*2 - 0x42c00000], cl ; clc ; jmp qword ptr [rsi]
0x00000000004c572b : add byte ptr [rsi + rsi*2], ch ; add al, dh ; push rsi ; cli ; jmp rsp
0x00000000004bc10f : add byte ptr [rsi + rsi*4 + 0x4b], dh ; add byte ptr [rax], al ; ret 0x4bb6
0x00000000004c16cb : add byte ptr [rsi + rsi], cl ; add byte ptr [rax], al ; xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x0000000000442b1d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004a3a9c : add byte ptr [rsi - 7], bh ; jmp qword ptr [rax]
0x00000000004c0063 : add byte ptr [rsi], bh ; cmc ; jmp qword ptr [rax]
0x00000000004be55b : add byte ptr [rsp + rax + 0x67100000], bl ; hlt ; call qword ptr [rax]
0x00000000004c24eb : add byte ptr [rsp + rax*2], ch ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x00000000004c656b : add byte ptr [rsp + rax*4 + 0x10600000], ch ; sti ; jmp rsi
0x00000000004c5d73 : add byte ptr [rsp + rdi*2 - 0x4d080000], dh ; cli ; call rdx
0x00000000004c2f53 : add byte ptr [rsp + rdi*2], bh ; clc ; call qword ptr [rcx]
0x00000000004c0b2b : add byte ptr [rsp + rdx*8], ah ; cmc ; call rdx
0x000000000045c626 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c0f75 : add byte ptr cs:[rax], al ; mov dh, dh ; cmc ; call qword ptr [rdx]
0x00000000004690c7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091a1f
0x0000000000467cb3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000467a88 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004679fc : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046973f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469756
0x0000000000425ab8 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004424c7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000413180 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004118e3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c1725 : add byte ptr ss:[rax], al ; call 0x244c0ec8
0x00000000004c1724 : add byte ptr ss:[rax], al ; call 0x244c0ec9
0x00000000004c16cd : add byte ptr ss:[rax], al ; xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x00000000004584ef : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb13c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb13d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046718b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000464a8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d150 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041ab8d : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472228 : add ch, cl ; ret 0xfffd
0x00000000004beb29 : add ch, dh ; call qword ptr [rax]
0x00000000004beb3d : add ch, dh ; call qword ptr [rdx]
0x00000000004a2f84 : add ch, dh ; idiv edi ; div dil ; jmp qword ptr [rax]
0x000000000045a5b9 : add cl, bl ; in eax, -0x21 ; loopne 0x45a54e ; ret 0xe680
0x0000000000439417 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045da4e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000004892f4 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048931d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000449793 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046f61b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004103c9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483bb5 : add cl, byte ptr [rax + 1] ; ret
0x000000000044ce03 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439418 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000439385 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047bc61 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x0000000000416282 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041ad72 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000046af49 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000047966c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000423550 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004483a4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000004235b3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004640b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bf814 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000489ce3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435272 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041be14 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000043f32f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f287 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000041b1b8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462a95 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e069 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043df0d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c72db : add cl, byte ptr [rdx] ; ret
0x000000000047633d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443b8f : add cl, ch ; ret
0x00000000004085d8 : add cl, ch ; ret 0xffe2
0x0000000000472154 : add cl, ch ; ret 0xfffd
0x000000000040099e : add cl, cl ; ret
0x00000000004bdb14 : add cl, cl ; std ; push qword ptr [rax - 0x37] ; std ; jmp rdx
0x00000000004a100f : add cl, dl ; sbb eax, 0x40 ; add byte ptr [rax], al ; ret 0x401d
0x00000000004bf720 : add dh, ah ; ret
0x00000000004652e2 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b0fd7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435423 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fb9b : add dh, bl ; ret
0x00000000004bf622 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e472 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x00000000004172ba : add dh, dh ; ret
0x0000000000446dc5 : add dh, dh ; ret 0x4801
0x00000000004265c8 : add dh, dh ; ret 0x7404
0x0000000000400e3a : add dh, dh ; ret 0x7420
0x000000000043bac7 : add dh, dh ; ret 0x7501
0x000000000043bad4 : add dh, dh ; ret 0x7502
0x000000000043bae1 : add dh, dh ; ret 0x7504
0x000000000043ba99 : add dh, dh ; ret 0x7510
0x000000000043baa6 : add dh, dh ; ret 0x7520
0x000000000043bab3 : add dh, dh ; ret 0x7540
0x000000000041b1b5 : add dh, dh ; ret 0xf02
0x000000000047062a : add dh, dh ; ret 0xf08
0x00000000004a3374 : add dl, ah ; clc ; jmp rax
0x00000000004c1514 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449ad6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000004621ce : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462922 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449140 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043aba1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000414f01 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004744b9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004744cb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479800 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045954d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000049c849 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000047bbad : add dword ptr [rax + 1], ecx ; ret
0x000000000040db26 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e462 : add dword ptr [rax + 3], edi ; je 0x49e479 ; ret
0x00000000004c4712 : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000458036 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402813 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b1aa : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004393f1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047435d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000439382 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000414d03 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000041857e : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000414e9a : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465211 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471997 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412bef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000004742bd : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000425572 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473574 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004621cf : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450399 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041ad76 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044438c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452873 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446a9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489bd4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d3d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462923 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048101a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004c63d5 : add dword ptr [rax], 0 ; sub ah, dh ; cli ; jmp qword ptr [rdx]
0x000000000043f14b : add dword ptr [rax], 0x50 ; add byte ptr [rax], al ; ret
0x000000000040f896 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044bfe6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b15e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473684 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000411a26 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a19], al ; ret
0x000000000047e9f7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000420e19 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041af2b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004112a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044eef5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bbe5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464708 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e346 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e470 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004059f7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c4f7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040ed3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042333d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449594 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042534e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042bdbf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423291 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044c342 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463c90 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444811 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b0fda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b018a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004affb2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004affaa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0742 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049bd5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401608 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440b87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000469db7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469d84
0x000000000049c64d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000049c2c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a2ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000440d74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440c40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440bb8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440ffe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004625e4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000461ef9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c29b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415303 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e78c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000443f37 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041b1bc : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000415ac0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x000000000049bbbe : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004005b5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444023 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004678d8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x00000000004101e2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00000000004628c2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000445c0c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fb4e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000044920e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041cebb : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000419f41 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000467ef7 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413638 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446bb5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000043bac5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043bad2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043badf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043ba97 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043baa4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bab1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000421088 : add dword ptr [rax], eax ; ret
0x0000000000425971 : add dword ptr [rax], edi ; ret
0x000000000043df47 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000047e0b2 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000489cc3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000485be7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442439 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004352e2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000040d55d : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c8a4a : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c8a47 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000469ec9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446bda : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447068 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041b7ea : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439421 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461ce0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000445bbd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000040424d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004586eb : add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x0000000000425367 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041baf5 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047732b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c6545 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c648d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c64e9 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c649e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c64fa : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6556 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2325 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c72d7 : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c722a : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043dfa8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043df93 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045ba81 : add dword ptr [rdi], ecx ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004180de : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a45d : add dword ptr [rdi], ecx ; test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000041cec1 : add dword ptr [rdi], ecx ; test esp, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004746d7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000474f44 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043de6d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499c70 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000043da32 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043562d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048814b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bf71e : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046d677 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x000000000046d967 : add dword ptr [rdx - 0x77], eax ; je 0x46d8f7 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046d966 : add dword ptr [rdx - 0x77], eax ; je 0x46d8f8 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c0889 : add dword ptr [rdx], 0x43 ; ret
0x00000000004c626d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c8804 : add dword ptr [rdx], 0x54 ; ret
0x00000000004c5d64 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6264 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c87b8 : add dword ptr [rdx], 0x69 ; ret
0x00000000004c4844 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4640 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004bff0c : add dword ptr [rdx], 2 ; ret
0x00000000004bf826 : add dword ptr [rdx], ecx ; ret
0x0000000000416648 : add dword ptr [rip + 0x2b4f55], 1 ; ret
0x00000000004bed2e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bed44 ; ret
0x00000000004bed3c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439402 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bfafa : add dword ptr [rsi], 0xa ; ret
0x00000000004bfb64 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1515 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400cad : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c1eaa : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497587 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c72ee : add dword ptr es:[rdx], ecx ; ret
0x0000000000426a28 : add eax, 0x12ad3 ; ret
0x00000000004234f8 : add eax, 0x14853 ; ret
0x0000000000425e9a : add eax, 0x15e71 ; ret
0x0000000000426474 : add eax, 0x17647 ; ret
0x0000000000421085 : add eax, 0x1a966 ; ret
0x0000000000425e7e : add eax, 0x1d ; ret
0x000000000044f3fc : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c10c0 : add eax, 0x2300e4a ; ret
0x0000000000488351 : add eax, 0x243f0a ; ret
0x0000000000476560 : add eax, 0x255c92 ; jne 0x4765a9 ; ret
0x0000000000473d6c : add eax, 0x257ff7 ; mov qword ptr [rsi], rax ; ret
0x0000000000473d0b : add eax, 0x258060 ; ret
0x0000000000473c2a : add eax, 0x258141 ; add rsp, 8 ; ret
0x000000000044c812 : add eax, 0x27eee1 ; ret
0x00000000004454a2 : add eax, 0x286e21 ; ret
0x0000000000443f51 : add eax, 0x28835a ; test eax, eax ; je 0x443f69 ; ret
0x000000000041d9d9 : add eax, 0x2adc26 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004165b2 : add eax, 0x2b2b09 ; ret
0x00000000004166b6 : add eax, 0x2b4ee9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004014eb : add eax, 0x2c7ba0 ; xor eax, eax ; ret
0x00000000004006b6 : add eax, 0x2c99f5 ; pop rbp ; pop r12 ; ret
0x0000000000400915 : add eax, 0x2ca245 ; add ebx, esi ; ret
0x00000000004c1513 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x000000000043ac38 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000439468 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b136 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043acb9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004394a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047a6b6 : add eax, 0x5b000000 ; ret
0x00000000004b1b7d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418975 : add eax, 0x5c415d5b ; ret
0x0000000000426b44 : add eax, 0x67 ; ret
0x0000000000489d43 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043de67 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000422f2d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a3b1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000422e81 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004563ed : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043ac3b : add eax, 0x8428d48 ; ret
0x0000000000425e92 : add eax, 0x8449 ; ret
0x000000000048542a : add eax, 0x89000001 ; ret 0x348
0x000000000044978d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449aee : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449b0b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f33a : add eax, 0xc0310000 ; ret
0x000000000043acbd : add eax, 0xc428d48 ; ret
0x000000000043b79d : add eax, 0xc478d48 ; ret
0x0000000000441022 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441047 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441190 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441229 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000419f37 : add eax, 0xf6410000 ; ret 0xf01
0x00000000004352d3 : add eax, 0xf7f0ff3 ; ret
0x000000000047356f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000047869a : add eax, 0xfffffff8 ; ret
0x000000000043df45 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466481 : add eax, 1 ; ret
0x00000000004447f5 : add eax, 2 ; push rax ; call rbx
0x0000000000466478 : add eax, 2 ; ret
0x00000000004212d8 : add eax, 3 ; ret
0x0000000000426b97 : add eax, 4 ; ret
0x000000000044f359 : add eax, dword ptr [0] ; ret
0x0000000000470a38 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418b13 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004175db : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000470f8e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x000000000049d9b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; enter -0x72b4, 0x3d ; ret 0x22e1
0x000000000044da18 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046f973 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004230cd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a551 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004230f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445446 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e464 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e477 ; ret
0x000000000043fd8c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000044156d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004415c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441644 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441744 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004212d9 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000476633 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x4766a4 ; pop rbx ; ret
0x000000000043dfa3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e1bc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000442625 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004180e2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000470628 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000400998 : add eax, dword ptr [rax] ; mov eax, 0 ; leave ; ret
0x0000000000445131 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044508b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444a3a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e1c0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e1e0 : add eax, dword ptr [rax] ; ret
0x00000000004c5757 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bf80e : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047e7e1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c64a1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411054 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047ca6d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c73a3 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf262 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046ac6a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471845 : add eax, dword ptr [rdi] ; call rax
0x0000000000478444 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475b99 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c64fd : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6559 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004befbe : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c3e3a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bf71a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c1ea6 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004713ab : add eax, dword ptr [rsp] ; call rax
0x000000000043e288 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000499cde : add eax, eax ; jmp r8
0x000000000049b206 : add eax, eax ; jmp rax
0x000000000045a1e8 : add eax, eax ; ret
0x0000000000425ab6 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004055be : add eax, ebp ; insb byte ptr [rdi], dx ; loopne 0x4055cc ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049aeae : add eax, ebp ; jmp rax
0x00000000004054c6 : add eax, ebp ; loope 0x4054d4 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000416323 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425bba : add eax, ecx ; ret
0x0000000000425bb7 : add eax, edi ; add rax, rcx ; ret
0x00000000004a2f39 : add eax, edi ; jmp qword ptr [rax]
0x0000000000425df4 : add eax, edi ; ret
0x00000000004237c6 : add eax, edx ; sub rax, rdi ; ret
0x000000000049b78e : add eax, esi ; jmp rax
0x0000000000466ff7 : add eax, esi ; ret
0x000000000045a1e7 : add eax, r8d ; ret
0x0000000000457728 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b4ad : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000047ba5d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004713a7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000048838a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c64ee : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471043 : add ebx, dword ptr [rbx - 0xd] ; ret
0x000000000045c699 : add ebx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x00000000004bf824 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00000000004a31f4 : add ebx, eax ; clc ; call qword ptr [rcx + 0x21fff8c3]
0x0000000000478731 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004851aa : add ebx, ebp ; ret 0x8d48
0x0000000000435493 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040091a : add ebx, esi ; ret
0x0000000000426554 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426549 ; ret
0x0000000000439455 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000417f49 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004497af : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004640b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000046d8a9 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b1ae : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439459 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047da28 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d1ee : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418a38 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000446fd5 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040df9d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e077 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004117d7 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000489d03 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435202 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6492 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b0d4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e07f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000439456 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046d8db : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c189a : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4c18 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b4ad : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000004a31e4 : add ecx, eax ; clc ; inc dword ptr [rcx + 0x1fff8c1] ; ret 0xfff8
0x0000000000451dbc : add ecx, ebp ; ret
0x000000000042f95e : add ecx, ebx ; jmp r9
0x000000000042e302 : add ecx, ebx ; jmp rcx
0x0000000000499f06 : add ecx, esi ; jmp rcx
0x000000000049ea3f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004c20d1 : add edi, eax ; call qword ptr [rcx]
0x000000000042f95b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004bdff9 : add edi, esi ; call rax
0x00000000004be525 : add edi, esi ; call rdi
0x00000000004bdff5 : add edi, esi ; inc eax ; add edi, esi ; call rax
0x00000000004be019 : add edi, esi ; jmp rax
0x000000000047238c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c8987 : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x00000000004a31ec : add edx, eax ; clc ; inc dword ptr [rcx + 0x1fff8c2] ; ret
0x0000000000476055 : add edx, eax ; jmp 0x47606a
0x00000000004792c2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452783 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444040 : add edx, ebx ; loopne 0x4440a4 ; pop rbp ; ret
0x00000000004bf12a : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c1f96 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d207 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c8a4b : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004353b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004140c3 : add esi, ebx ; neg rdx ; call 0x4002f7
0x000000000043f07c : add esi, ebx ; ret
0x000000000043e270 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042f958 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000462fe8 : add esi, esi ; ret 0x7420
0x00000000004878e7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fac1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3c9 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420227 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3b1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004732b2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000473294 : add esp, 0x140 ; pop rbx ; ret
0x000000000047681d : add esp, 0x18 ; jmp r11
0x000000000043fbdd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416aa1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410947 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f050 : add esp, 0x18 ; ret
0x0000000000444020 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452003 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487cbc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445561 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414daf : add esp, 0x20 ; pop rbx ; ret
0x000000000047ad49 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040daf8 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041460e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487c11 : add esp, 0x28 ; ret
0x0000000000476b8c : add esp, 0x30 ; jmp r11
0x000000000046aab2 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478329 : add esp, 0x30 ; pop rbx ; ret
0x0000000000476c9e : add esp, 0x30 ; ret
0x000000000043ea10 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004783b6 : add esp, 0x38 ; ret
0x000000000047823c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046aa22 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478448 : add esp, 0x48 ; ret
0x00000000004781ca : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000487d64 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046663c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f300 : add esp, 0x60 ; pop rbx ; ret
0x000000000040047a : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478532 : add esp, 0x68 ; ret
0x000000000044243d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f7f1 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046a79b : add esp, 0x80 ; pop rbx ; ret
0x00000000004141c7 : add esp, 0x80 ; ret
0x000000000041fce6 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046a899 : add esp, 0x90 ; pop rbx ; ret
0x000000000046a8b7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000412d0d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004010ef : add esp, 0x98 ; ret
0x000000000044f6b9 : add esp, 0xd0 ; ret
0x000000000040f368 : add esp, 0xd8 ; ret
0x0000000000478105 : add esp, 8 ; jmp rax
0x0000000000410cf3 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ebe8 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fb3a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417648 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb20 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f1c3 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487c47 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041db4e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405941 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004017c3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412958 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423619 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473b81 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004c60da : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c72ed : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x0000000000446a9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000004234fa : add qword ptr [rax], rax ; ret
0x000000000041baf4 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c72d6 : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000042643c : add r11b, sil ; ret
0x0000000000435492 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435422 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f56d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004959b0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000499cdd : add r8, rax ; jmp r8
0x0000000000474c56 : add r8b, bpl ; ret
0x0000000000491057 : add r8b, bpl ; ret 0xf706
0x000000000042f95d : add r9, r11 ; jmp r9
0x0000000000449af3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449b10 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497162 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478699 : add rax, -8 ; ret
0x000000000043df44 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466480 : add rax, 1 ; ret
0x0000000000466477 : add rax, 2 ; ret
0x0000000000466490 : add rax, 3 ; ret
0x000000000044f358 : add rax, qword ptr [0] ; ret
0x00000000004713aa : add rax, qword ptr [r12] ; call rax
0x0000000000471844 : add rax, qword ptr [r15] ; call rax
0x000000000047e7e0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478443 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475b98 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f357 : add rax, qword ptr fs:[0] ; ret
0x000000000049b78d : add rax, r14 ; jmp rax
0x000000000049b205 : add rax, r8 ; jmp rax
0x000000000049aead : add rax, rbp ; jmp rax
0x0000000000425bb9 : add rax, rcx ; ret
0x0000000000425bb6 : add rax, rdi ; add rax, rcx ; ret
0x0000000000425df3 : add rax, rdi ; ret
0x00000000004237c5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047ba5c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004713a6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e301 : add rcx, r11 ; jmp rcx
0x0000000000499f05 : add rcx, r14 ; jmp rcx
0x000000000049ea3e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042f95a : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047238b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452782 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004792c1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476054 : add rdx, rax ; jmp 0x47606b
0x00000000004140c2 : add rsi, rbx ; neg rdx ; call 0x4002f8
0x00000000004878e6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fac0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3c8 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e3b0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473293 : add rsp, 0x140 ; pop rbx ; ret
0x000000000047681c : add rsp, 0x18 ; jmp r11
0x000000000043fbdc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410946 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f04f : add rsp, 0x18 ; ret
0x000000000044401f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452002 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487cbb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445560 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414dae : add rsp, 0x20 ; pop rbx ; ret
0x000000000047ad48 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041460d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487c10 : add rsp, 0x28 ; ret
0x0000000000476b8b : add rsp, 0x30 ; jmp r11
0x000000000046aab1 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478328 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000476c9d : add rsp, 0x30 ; ret
0x000000000043ea0f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004783b5 : add rsp, 0x38 ; ret
0x000000000047823b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046aa21 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478447 : add rsp, 0x48 ; ret
0x00000000004781c9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000487d63 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046663b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f2ff : add rsp, 0x60 ; pop rbx ; ret
0x0000000000400479 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478531 : add rsp, 0x68 ; ret
0x000000000044243c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046a79a : add rsp, 0x80 ; pop rbx ; ret
0x00000000004141c6 : add rsp, 0x80 ; ret
0x000000000046a898 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000412d0c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004010ee : add rsp, 0x98 ; ret
0x000000000044f6b8 : add rsp, 0xd0 ; ret
0x000000000040f367 : add rsp, 0xd8 ; ret
0x0000000000478104 : add rsp, 8 ; jmp rax
0x0000000000410cf2 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ebe7 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fb39 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417647 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb1f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f1c2 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487c46 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041db4d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004017c2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412957 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423618 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c02e : add sil, sil ; ret 0x7404
0x000000000048814a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488148 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488354 : and al, 0 ; ret
0x000000000043f32d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c108 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000446e43 : and al, 0x10 ; call r12
0x000000000041b36d : and al, 0x10 ; call rax
0x0000000000464c99 : and al, 0x10 ; call rbx
0x0000000000400b95 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440321 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447137 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447a9a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000487c0b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049c7b5 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000004502b6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000004652e5 : and al, 0x14 ; add al, ch ; ret
0x00000000004189a6 : and al, 0x14 ; pop r12 ; ret
0x000000000041db4b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b68c : and al, 0x18 ; call r14
0x0000000000400bf2 : and al, 0x18 ; call rax
0x0000000000464c94 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041b368 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444768 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000447e80 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047ae10 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x0000000000446e3e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000464d72 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418972 : and al, 0x1c ; je 0x418983 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418971 : and al, 0x1c ; je 0x418984 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044713c : and al, 0x20 ; call rax
0x00000000004667f7 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004508d3 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b9284 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004783b0 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x00000000004897fb : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004475b7 : and al, 0x28 ; call r12
0x00000000004482e2 : and al, 0x28 ; call r14
0x0000000000446c44 : and al, 0x28 ; call r15
0x0000000000447a9f : and al, 0x28 ; call rax
0x000000000044766b : and al, 0x28 ; call rbx
0x0000000000466b12 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046689f : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041e863 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048f88f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044aecc : and al, 0x30 ; call r14
0x000000000047325f : and al, 0x30 ; call r9
0x00000000004494ea : and al, 0x30 ; call rbx
0x0000000000487d2f : and al, 0x30 ; je 0x487d43 ; mov edi, 0x6ca140 ; call rax
0x000000000040e039 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000004666dd : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044992a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446ce1 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447666 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000481e9f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048ca32 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000444a38 : and al, 0x38 ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000047855e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047325a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004494e5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478239 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004781c7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000044886a : and al, 0x40 ; call r15
0x00000000004667fc : and al, 0x40 ; call rbx
0x0000000000448c11 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000047681b : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043fbdb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f04e : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000476b8a : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x0000000000476c9c : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041de73 : and al, 0x48 ; call rax
0x000000000046f6c4 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x00000000004475b2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446c3f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000466f02 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049dc3c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000041aa54 : and al, 0x4a ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b687 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c68d : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004189a1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466a10 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e17b : and al, 0x68 ; call rax
0x000000000041f45b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000041137e : and al, 0x74 ; ret 0x8b4c
0x00000000004728fa : and al, 0x75 ; ret
0x000000000047b5ce : and al, 0x78 ; call r12
0x000000000047ba9d : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004482dd : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044aec7 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b3ef : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c274 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000446dc1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c596c : and al, 0x83 ; cli ; call rax
0x000000000041bb76 : and al, 0x89 ; ret 0xb48b
0x000000000041baf2 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c82e4 : and al, 0xa2 ; add byte ptr [rax], al ; fadd dword ptr [rax - 3] ; call rcx
0x000000000043f285 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000049bc9b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004783df : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400b99 : and al, 0xc ; call r12
0x0000000000400bed : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004c0b2c : and al, 0xd4 ; cmc ; call rdx
0x000000000047b84a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004087eb : and al, 0xe8 ; call rbx
0x0000000000409944 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000040995a : and al, 0xe8 ; nop ; ret 0xffff
0x00000000004098fb : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x000000000040997c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409992 : and al, 0xe8 ; pop rax ; ret 0xffff
0x000000000040989c : and al, 0xe8 ; ret
0x000000000040bcc8 : and al, 0xe8 ; ret 0x120
0x00000000004099a3 : and al, 0xe8 ; ret 0xffff
0x0000000000409853 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000491678 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cb95 : and al, 0xf ; ret 0x8348
0x000000000041c017 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c136 : and al, 0xf8 ; jne 0x42c012 ; ret
0x0000000000491631 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491637 : and al, 0xf8 ; ret
0x00000000004915eb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004915f1 : and al, 0xfc ; ret
0x000000000044f427 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f42b : and al, 0xfe ; ret
0x0000000000469db6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044f83c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043e3c6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047a8c2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000440238 : and al, 8 ; call rbx
0x0000000000487c89 : and al, 8 ; je 0x487c9d ; mov edi, 0x6ca140 ; call rax
0x000000000043f391 : and al, 8 ; jmp 0x43f308
0x0000000000477f70 : and al, 8 ; mov edi, 0x6ca140 ; call rax
0x000000000041b424 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040e1f6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004a0668 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004109e6 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000049e9d3 : and al, byte ptr [rax] ; jne 0x49e9bd ; pop rbx ; ret
0x000000000049dd94 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004235ca : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004a3320 : and al, ch ; clc ; call qword ptr [rax]
0x000000000045d14e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004744b3 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000040db9f : and bl, dh ; ret
0x000000000041abb4 : and byte ptr [r10], cl ; call 0x416e06
0x000000000046722e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x00000000004149d4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049e634 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419c79 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004525de : and byte ptr [rax + 1], cl ; ret
0x00000000004c2130 : and byte ptr [rax + rdi*8], al ; call qword ptr [rdi]
0x00000000004667f8 : and byte ptr [rax - 0x73], cl ; je 0x466827 ; call rbx
0x0000000000476bb6 : and byte ptr [rax - 0x75], cl ; jg 0x476bea ; call r11
0x00000000004771a6 : and byte ptr [rax - 0x75], cl ; jg 0x4771da ; call r11
0x0000000000477542 : and byte ptr [rax - 0x75], cl ; jg 0x477576 ; call r11
0x000000000041b883 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000040eca3 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469744 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445b94 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000044ed34 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44ed48 ; call rax
0x000000000049ce0b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445a2e : and byte ptr [rax - 0x7d], cl ; ret
0x00000000004121d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043e253 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c019d : and byte ptr [rax], al ; add byte ptr [rax], dh ; push 0xf5 ; call qword ptr [rsi]
0x0000000000418ebc : and byte ptr [rbp - 1], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000004c73a6 : and byte ptr [rbx + 0x1890304], al ; ret
0x0000000000405b48 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046722f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445563 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf265 : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bf811 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004602ae : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000455310 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000462c39 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004149d5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c3d76 : and byte ptr [rcx + 0xa], al ; ret
0x00000000004508d4 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452005 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000491675 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445b1c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004c24f0 : and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x0000000000445b09 : and byte ptr [rdi], cl ; test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043baa0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000041abb5 : and byte ptr [rdx], cl ; call 0x416e05
0x000000000042e39a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c3e3d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004c6e00 : and byte ptr [rsi], bh ; sti ; jmp qword ptr [rdx]
0x0000000000466472 : and ch, 0xf ; je 0x466499 ; add rax, 2 ; ret
0x000000000046645d : and cl, 0xf ; je 0x466485 ; ret
0x000000000041c36e : and cl, bpl ; ret 0xfff9
0x000000000047e723 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000425f7d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041c36f : and cl, ch ; ret 0xfff9
0x00000000004a0666 : and dh, byte ptr [rdx + 0x22] ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000426567 : and dh, dh ; ret 0x7504
0x000000000045d14d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004c0275 : and dword ptr [rax], eax ; add byte ptr [rax + 0x6b], ch ; cmc ; call qword ptr [rdx]
0x0000000000457589 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bada2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000041593c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046979b : and dword ptr [rcx], 0x950f0026 ; ret 0xf748
0x000000000048ea3c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b7e59 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000046979c : and dword ptr [rsi], esp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046973e : and dword ptr [rsi], esp ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469757
0x00000000004bada1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f35b : and eax, 0 ; ret
0x000000000049c92a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x00000000004a3991 : and eax, 0x2710fff9 ; stc ; call qword ptr [rax]
0x000000000047c666 : and eax, 0x2d0 ; ret
0x000000000040e9b1 : and eax, 0x30 ; call rax
0x000000000040e969 : and eax, 0x30 ; call rdx
0x0000000000476563 : and eax, 0x38754000 ; ret
0x000000000043e1bd : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e1dd : and eax, 0x3fc00 ; ret
0x000000000043e19c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000470ee0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x0000000000473d6f : and eax, 0x6894800 ; ret
0x000000000043e210 : and eax, 0x7ff80000 ; ret
0x0000000000474653 : and eax, 0x89485300 ; ret
0x000000000041ac76 : and eax, 0x950f4100 ; ret
0x00000000004426a7 : and eax, 0xc ; cmp eax, 4 ; je 0x4426b8 ; ret
0x0000000000400caf : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444156 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x000000000047872c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004c24f1 : and eax, edi ; call qword ptr [rax]
0x000000000041593d : and ebp, edi ; pop rbx ; ret
0x0000000000442642 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442655 ; ret
0x000000000042f915 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f048 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419cfb : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fb1c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000417565 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00000000004166ec : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000049164e : and esi, 0xe0837fff ; jg 0x491667 ; ret 0x5488
0x000000000049fc69 : and esp, ecx ; idiv edi ; nop dword ptr [rax] ; ret
0x0000000000474652 : and rax, 0x89485300 ; ret
0x000000000042ca0a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000425df0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000425e00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000425e10 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425de0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000425d2f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042cc03 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423666 : bsf eax, edx ; ret
0x00000000004237c2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042cd20 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004236b2 : bsf rax, rdx ; ret
0x0000000000465647 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004658cb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004657d9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004656d5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000465646 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004658ca : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004657d8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004656d4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047b957 : call 0x1009f17e
0x000000000047c2ba : call 0x1009fae1
0x000000000044afb8 : call 0x2073308
0x00000000004c1728 : call 0x244c0ec5
0x000000000042c344 : call 0x24b74e9d
0x00000000004140c8 : call 0x4002f2
0x0000000000474053 : call 0x40031a
0x000000000041185c : call 0x400347
0x0000000000475501 : call 0x401722
0x00000000004098fc : call 0x405bf2
0x000000000044b05e : call 0x40734e
0x000000000041abb8 : call 0x416e02
0x000000000041bbc1 : call 0x417e12
0x0000000000420261 : call 0x41c4f2
0x000000000046171c : call 0x41d9f2
0x0000000000441ad9 : call 0x41dd92
0x00000000004085d4 : call 0x41dd96
0x000000000045c698 : call 0x4265a7
0x000000000040fd8f : call 0x42c002
0x00000000004006d1 : call 0x43e126
0x0000000000473910 : call 0x43fbf2
0x0000000000456382 : call 0x442592
0x000000000040305d : call 0x44f332
0x0000000000458406 : call 0x4634e6
0x0000000000469e71 : call 0x467788
0x000000000048caec : call 0x478db2
0x000000000047f7c7 : call 0x488158
0x0000000000434a1a : call 0x4fc25a18
0x0000000000434a19 : call 0x4fc25a19
0x000000000047b4bb : call 0xffffffff8a09dde2
0x000000000047b622 : call 0xffffffff8a09df49
0x000000000047b80f : call 0xffffffff8a09e136
0x000000000047be3b : call 0xffffffff8a09e762
0x000000000047bf98 : call 0xffffffff8a09e8bf
0x000000000047c166 : call 0xffffffff8a09ea8d
0x00000000004b88c3 : call 0xffffffffaf0e2739
0x000000000047b13a : call 0xffffffffc270f982
0x000000000041bc98 : call 0xffffffffc27b04a9
0x000000000045954c : call 0xffffffffc27edd56
0x000000000041c558 : call 0xffffffffc2cb0d71
0x0000000000468fad : call 0xffffffffc37fd8ba
0x0000000000485b0a : call 0xffffffffc381a714
0x00000000004668dc : call 0xffffffffc3a2aa42
0x000000000044f835 : call 0xffffffffc3f40786
0x00000000004678dc : call 0xffffffffc40dc115
0x0000000000426b07 : call 0xffffffffc412f458
0x00000000004235d7 : call 0xffffffffc43abf28
0x00000000004c41c8 : call 0xffffffffe14c3bb8
0x0000000000452785 : call qword ptr [r10 + rax*8]
0x00000000004a3893 : call qword ptr [rax + 0x10fff916]
0x00000000004a34b3 : call qword ptr [rax + 0x20fff91c]
0x0000000000410227 : call qword ptr [rax + 0x80]
0x00000000004bda4f : call qword ptr [rax - 0x1f0002a5]
0x00000000004a3477 : call qword ptr [rax - 0x1f00072a]
0x00000000004a3423 : call qword ptr [rax - 0x1f000731]
0x00000000004a305f : call qword ptr [rax - 0x1f000780]
0x00000000004a2f27 : call qword ptr [rax]
0x0000000000400ab8 : call qword ptr [rbx + 0x10]
0x0000000000401548 : call qword ptr [rbx*8 + 0x6c8ed8]
0x000000000047e0c8 : call qword ptr [rbx]
0x00000000004a31f7 : call qword ptr [rcx + 0x21fff8c3]
0x000000000049a3fe : call qword ptr [rcx]
0x00000000004c2133 : call qword ptr [rdi]
0x00000000004a355f : call qword ptr [rdx + 0x22fff91e]
0x00000000004a31bb : call qword ptr [rdx + 0x30fff8bf]
0x0000000000452786 : call qword ptr [rdx + rax*8]
0x00000000004a357f : call qword ptr [rdx]
0x00000000004a323f : call qword ptr [rsi + 0x26fff8c4]
0x00000000004a34fb : call qword ptr [rsi + 0x26fff91b]
0x00000000004925f2 : call qword ptr [rsi]
0x0000000000476bbc : call r11
0x0000000000400b9b : call r12
0x000000000040dfc0 : call r14
0x0000000000403521 : call r15
0x00000000004625eb : call r8
0x0000000000473261 : call r9
0x00000000004a3433 : call rax
0x0000000000402bcd : call rbx
0x00000000004054ea : call rcx
0x0000000000403522 : call rdi
0x000000000040e96e : call rdx
0x000000000040dfc1 : call rsi
0x0000000000400b9c : call rsp
0x000000000044eef4 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004c7de9 : cdq ; cld ; call qword ptr [rax]
0x00000000004ba600 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004006b8 : cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004859ae : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bb73 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000458c7a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004beb28 : clc ; add ch, dh ; call qword ptr [rax]
0x000000000045da4d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000040d55c : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043de6c : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047ca6c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046d8da : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425bb8 : clc ; add rax, rcx ; ret
0x00000000004a3476 : clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004a3422 : clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a305e : clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a307e : clc ; call qword ptr [rax]
0x00000000004c39e2 : clc ; call qword ptr [rbx]
0x00000000004a31f6 : clc ; call qword ptr [rcx + 0x21fff8c3]
0x00000000004c20d2 : clc ; call qword ptr [rcx]
0x00000000004c2132 : clc ; call qword ptr [rdi]
0x00000000004a31ba : clc ; call qword ptr [rdx + 0x30fff8bf]
0x00000000004c332a : clc ; call qword ptr [rdx]
0x00000000004a323e : clc ; call qword ptr [rsi + 0x26fff8c4]
0x00000000004a31ae : clc ; call qword ptr [rsi]
0x00000000004a3432 : clc ; call rax
0x00000000004c2242 : clc ; call rsp
0x00000000004c7e11 : clc ; cld ; call qword ptr [rax]
0x00000000004c5088 : clc ; cli ; jmp rdi
0x000000000042f8b9 : clc ; cmp rcx, rax ; jne 0x42f8eb ; xor eax, eax ; ret
0x000000000042f8b8 : clc ; cmp rcx, rax ; jne 0x42f8ec ; xor eax, eax ; ret
0x00000000004742c0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421060 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412306 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000004016bb : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a328a : clc ; dec dword ptr [rbx - 0x3a] ; clc ; call rax
0x00000000004a326e : clc ; dec dword ptr [rbx - 0x3e] ; clc ; dec ebx ; ret 0xfff8
0x0000000000454dcb : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004563f2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000004a318e : clc ; dec dword ptr [rdi - 0x43] ; clc ; jmp qword ptr [rax]
0x000000000047a52d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a3272 : clc ; dec ebx ; ret 0xfff8
0x00000000004a326a : clc ; dec ebx ; sar eax, -1 ; ret 0xfff8
0x00000000004a33ce : clc ; inc dword ptr [rax + 0x40fff8df] ; loope 0x4a33d8 ; call qword ptr [rax]
0x00000000004a301a : clc ; inc dword ptr [rax + 0x65] ; clc ; jmp rax
0x00000000004a303a : clc ; inc dword ptr [rax + 0x72] ; clc ; jmp rax
0x00000000004a305a : clc ; inc dword ptr [rax + 0x7f] ; clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a331a : clc ; inc dword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a33ba : clc ; inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a3336 : clc ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a33d2 : clc ; inc dword ptr [rax - 0x1f] ; clc ; call qword ptr [rax]
0x00000000004a336e : clc ; inc dword ptr [rax - 0x20] ; clc ; inc dword ptr [rax] ; loop 0x4a3378 ; jmp rax
0x00000000004a3472 : clc ; inc dword ptr [rax - 0x2b] ; clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004a306a : clc ; inc dword ptr [rax - 0x2f00077c] ; test edi, eax ; jmp qword ptr [rax]
0x00000000004a341e : clc ; inc dword ptr [rax - 0x32] ; clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a32b6 : clc ; inc dword ptr [rax - 0x3d] ; clc ; call rax
0x00000000004a30a2 : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3372 : clc ; inc dword ptr [rax] ; loop 0x4a3374 ; jmp rax
0x00000000004a31a6 : clc ; inc dword ptr [rax] ; mov edi, 0xbff0fff8 ; clc ; call qword ptr [rsi]
0x00000000004a31e6 : clc ; inc dword ptr [rcx + 0x1fff8c1] ; ret 0xfff8
0x00000000004a31ee : clc ; inc dword ptr [rcx + 0x1fff8c2] ; ret
0x00000000004a3202 : clc ; inc dword ptr [rcx - 0x3b] ; clc ; jmp rcx
0x00000000004a319e : clc ; inc dword ptr [rcx - 0x43] ; clc ; call qword ptr [rax]
0x000000000044e199 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a31f2 : clc ; inc dword ptr [rcx] ; ret
0x00000000004a31ea : clc ; inc dword ptr [rcx] ; ret 0xfff8
0x00000000004a343e : clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a307a : clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x000000000044e194 : clc ; ja 0x44e19b ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000044997e : clc ; jg 0x44990d ; ret 0x5c77
0x00000000004a2f3a : clc ; jmp qword ptr [rax]
0x00000000004a31fa : clc ; jmp qword ptr [rcx]
0x000000000047e018 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a3242 : clc ; jmp qword ptr [rsi]
0x00000000004a301e : clc ; jmp rax
0x00000000004c33b2 : clc ; jmp rbx
0x00000000004a3206 : clc ; jmp rcx
0x00000000004a324e : clc ; jmp rdi
0x00000000004a3222 : clc ; jmp rsi
0x00000000004c2936 : clc ; jmp rsp
0x000000000042c137 : clc ; jne 0x42c011 ; ret
0x000000000049c310 : clc ; leave ; ret
0x00000000004b9262 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c5d78 : clc ; mov dl, 0xfa ; call rdx
0x0000000000431397 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431d07 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004347a7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f07 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434717 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432107 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434687 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004313b3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004355fc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c3a8 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000491632 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a32aa : clc ; push qword ptr [rax + 0x30fff8c1] ; ret 0xfff8
0x00000000004a32b2 : clc ; push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004a334e : clc ; push qword ptr [rax - 0x20] ; clc ; push qword ptr [rax] ; loop 0x4a3358 ; call qword ptr [rax]
0x00000000004a343a : clc ; push qword ptr [rax - 0x29] ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a3186 : clc ; push qword ptr [rax - 0x53] ; clc ; call qword ptr [rax]
0x00000000004a3076 : clc ; push qword ptr [rax - 0x78] ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a3352 : clc ; push qword ptr [rax] ; loop 0x4a3354 ; call qword ptr [rax]
0x00000000004a31be : clc ; push qword ptr [rax] ; mov ebp, 0xbde0fff8 ; clc ; call rax
0x00000000004a32ae : clc ; push qword ptr [rax] ; ret 0xfff8
0x00000000004109ea : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415990 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004427c1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415938 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000414e15 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046a87c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a309e : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a33da : clc ; push rax ; in al, -8 ; jmp rax
0x00000000004a335a : clc ; push rax ; in eax, -8 ; call rax
0x00000000004a3156 : clc ; push rax ; lahf ; clc ; call qword ptr [rax]
0x00000000004a3176 : clc ; push rax ; test al, 0xf8 ; call qword ptr [rax]
0x00000000004a344e : clc ; push rax ; xbegin 0xfffffffff914f55f ; call qword ptr [rax]
0x00000000004165e2 : clc ; ret
0x0000000000478c8a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000477efd : clc ; std ; jbe 0x477f0c ; ret
0x00000000004c29bc : cld ; add byte ptr [rax], al ; sar byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x000000000046e068 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e1bf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e1df : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c781a : cld ; call qword ptr [rax]
0x00000000004c782e : cld ; call qword ptr [rdx]
0x000000000048091f : cld ; cmove rsi, r9 ; jmp 0x4808ee
0x000000000045c69b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000047103e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e26e : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e19e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c4ebc : cld ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x00000000004c757e : cld ; jmp qword ptr [rax]
0x0000000000431b22 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d25 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431f25 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432125 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043560e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000432658 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431756 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434936 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431936 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004348b6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b16 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434836 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431576 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349b6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004915ec : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004c7dbc : cld ; pushfq ; add byte ptr [rax], al ; jo 0x4c7da8 ; cld ; call qword ptr [rax]
0x0000000000426588 : cld ; ret
0x00000000004b8716 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000041fb19 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041fcf9 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x000000000041d84b : cli ; add byte ptr [rax - 0x418aff94], bl ; ret
0x000000000047c639 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000046718a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004892f3 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048931c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004103c8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043df0c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044913f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000004746d6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000474f43 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043da31 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043562c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b4ac : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c596e : cli ; call rax
0x00000000004c5d7a : cli ; call rdx
0x00000000004c4a1a : cli ; call rsi
0x000000000043261b : cli ; jg 0x43262e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004355e7 : cli ; jg 0x4355fa ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043d9f1 : cli ; jg 0x43da03 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043db76 : cli ; jg 0x43db88 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c4ec2 : cli ; jmp qword ptr [rax]
0x00000000004c6332 : cli ; jmp qword ptr [rdx]
0x00000000004c508a : cli ; jmp rdi
0x00000000004c4b52 : cli ; jmp rdx
0x00000000004c6036 : cli ; jmp rsi
0x00000000004c5732 : cli ; jmp rsp
0x0000000000431f28 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425f98 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047af96 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489ca8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bab81 : cli ; push 0x6e ; ja 0x4bab0e ; ret 0x48f
0x00000000004468b9 : cli ; push rsi ; add byte ptr [rax - 0x7f], cl ; ret 0x56e0
0x00000000004b9625 : cli ; ret 0xac65
0x00000000004425cb : cli ; setae al ; ret
0x0000000000423709 : cli ; test rdx, rdx ; je 0x423729 ; bsf rax, rdx ; ret
0x00000000004654d8 : cli ; test rdx, rdx ; je 0x465509 ; bsf rax, rdx ; ret
0x00000000004b826a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c8a4c : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495c08 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044391c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041db90 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004beb2a : cmc ; call qword ptr [rax]
0x00000000004bfc0a : cmc ; call qword ptr [rcx]
0x00000000004beb3e : cmc ; call qword ptr [rdx]
0x00000000004c01a2 : cmc ; call qword ptr [rsi]
0x00000000004c0b2e : cmc ; call rdx
0x00000000004006b7 : cmc ; cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004a2f85 : cmc ; idiv edi ; div dil ; jmp qword ptr [rax]
0x00000000004c0066 : cmc ; jmp qword ptr [rax]
0x00000000004bfa56 : cmc ; jmp qword ptr [rcx]
0x00000000004bf2aa : cmc ; jmp qword ptr [rsi]
0x00000000004bafa9 : cmc ; mov ch, 0xab ; ret
0x00000000004348ba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317ae : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043cf83 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b7e57 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047a7dd : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043cf87 : cmc ; sub eax, edx ; ret
0x00000000004ba5e5 : cmc ; xlatb ; ret 0x4e27
0x000000000049c717 : cmova eax, edx ; ret
0x0000000000466ff1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000416de9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000416de8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f04b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464c01 : cmove eax, ecx ; ret
0x000000000043f330 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000421063 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425b12 : cmove eax, edx ; ret
0x0000000000480921 : cmove esi, ecx ; jmp 0x4808ec
0x0000000000464c00 : cmove r8, rcx ; ret
0x000000000043f04a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046aef0 : cmove rax, r9 ; ret
0x0000000000421062 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425b11 : cmove rax, rdx ; ret
0x0000000000480920 : cmove rsi, r9 ; jmp 0x4808ed
0x000000000041492b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414929 ; ret
0x00000000004637fb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4637f9 ; ret
0x00000000004133c3 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004210e3 : cmovne eax, edx ; ret
0x00000000004210e2 : cmovne rax, rdx ; ret
0x00000000004438c3 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x00000000004563bd : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x000000000044698c : cmovs eax, edx ; ret
0x0000000000419b20 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049c648 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000048091e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x4808ef
0x00000000004c1ce5 : cmp al, 0 ; add al, bl ; fdivrp st(7) ; jmp qword ptr [rbx]
0x0000000000440281 : cmp al, 0x24 ; call rbx
0x000000000049dc3b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e03d : cmp al, 0x33 ; call rax
0x00000000004b9260 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c0064 : cmp al, 0x66 ; cmc ; jmp qword ptr [rax]
0x00000000004c2f54 : cmp al, 0x7c ; clc ; call qword ptr [rcx]
0x00000000004c6dfc : cmp al, 0x8d ; add byte ptr [rax], al ; and byte ptr [rsi], bh ; sti ; jmp qword ptr [rdx]
0x00000000004bdfdc : cmp al, 0xeb ; std ; jmp rsp
0x00000000004c80f9 : cmp al, 0xfd ; call rsp
0x000000000043d446 : cmp al, byte ptr [rsi - 1] ; jne 0x43d46c ; xor eax, eax ; ret
0x000000000043f578 : cmp al, ch ; ret 0x2b3
0x0000000000425de6 : cmp al, dh ; ret
0x0000000000425de5 : cmp al, r14b ; ret
0x0000000000452ec3 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004bdac0 : cmp bl, al ; std ; jmp rax
0x0000000000440252 : cmp bl, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000486e89 : cmp bl, ch ; ret 0x8148
0x000000000042c843 : cmp bl, dh ; ret
0x000000000041006b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045dc36 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004012b3 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x000000000042694f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000425e27 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440234 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041006c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000482e97 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000425e16 : cmp byte ptr [rax], ah ; ret
0x0000000000414de3 : cmp byte ptr [rax], al ; je 0x414df4 ; ret
0x000000000049bef5 : cmp byte ptr [rax], al ; je 0x49bf6b ; add rsp, 0x18 ; ret
0x00000000004210e0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000425e06 : cmp byte ptr [rax], dl ; ret
0x0000000000425e05 : cmp byte ptr [rax], r10b ; ret
0x0000000000425e15 : cmp byte ptr [rax], r12b ; ret
0x00000000004210df : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2324 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c64f9 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6555 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c649d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ea12 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047325b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004646d7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476b96 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000414da8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042ed8d : cmp byte ptr [rdi], dl ; ret
0x000000000042f8a0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f889 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f872 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e32e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046aeec : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x00000000004497f3 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041a620 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481b7b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000046aeef : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004893b6 : cmp cl, ch ; ret
0x000000000046aebe : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46ae7a ; xor eax, eax ; ret
0x000000000046e063 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043562b : cmp dl, 1 ; jb 0x43563d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043da30 : cmp dl, 1 ; jb 0x43da3e ; mov byte ptr [rdi], cl ; ret
0x000000000043dbaa : cmp dl, 1 ; jb 0x43dbb8 ; mov byte ptr [rdi], cl ; ret
0x00000000004646a8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4646b6 ; ret
0x0000000000488147 : cmp dword ptr [rax + rax], esp ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004343cc : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046000b : cmp dword ptr [rbx], ecx ; jmp rax
0x000000000045073e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000414de1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x414df6 ; ret
0x00000000004427b0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000426714 : cmp dword ptr [rdx], ebp ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000049c714 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000043f283 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047aba9 : cmp eax, 0x250e16 ; call rax
0x000000000047aa6c : cmp eax, 0x250f53 ; jmp rax
0x00000000004a39c1 : cmp eax, 0x3f10fff9 ; stc ; call qword ptr [rax]
0x00000000004a3091 : cmp eax, 0x3fc0fff8 ; clc ; call rax
0x000000000044f2f7 : cmp eax, 0x740027b7 ; add esi, ebx ; ret
0x0000000000477efc : cmp eax, 0xfd ; jbe 0x477f0d ; ret
0x00000000004742bf : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000414e14 : cmp eax, 0xff ; je 0x414e29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415937 : cmp eax, 0xff ; je 0x415948 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004648ba : cmp eax, 0xff ; je 0x4648cb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004648fe : cmp eax, 0xff ; je 0x46490f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004109e9 : cmp eax, 0xff ; jne 0x4109f6 ; pop rbx ; ret
0x000000000041598f : cmp eax, 0xff ; jne 0x415980 ; pop rbx ; ret
0x00000000004427c0 : cmp eax, 0xff ; jne 0x4427c0 ; xor eax, eax ; leave ; ret
0x000000000040db99 : cmp eax, 0xfffff000 ; ja 0x40dbc8 ; ret
0x000000000043f076 : cmp eax, 0xfffff000 ; ja 0x43f088 ; ret
0x000000000043f0c5 : cmp eax, 0xfffff000 ; ja 0x43f0d8 ; ret
0x000000000043f254 : cmp eax, 0xfffff000 ; ja 0x43f298 ; ret
0x000000000044f751 : cmp eax, 0xfffff000 ; ja 0x44f768 ; ret
0x000000000046a5c8 : cmp eax, 0xfffff000 ; ja 0x46a5e0 ; pop rbx ; ret
0x000000000046a956 : cmp eax, 0xfffff000 ; ja 0x46a968 ; ret
0x000000000046a9ab : cmp eax, 0xfffff000 ; ja 0x46a9c0 ; ret
0x000000000043e2bb : cmp eax, 2 ; je 0x43e2cf ; xor eax, eax ; ret
0x00000000004426aa : cmp eax, 4 ; je 0x4426b5 ; ret
0x0000000000412e15 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x412e28 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441021 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474308 : cmp eax, dword ptr [rsi + rdx] ; jae 0x4742b8 ; xor eax, eax ; ret
0x00000000004166e9 : cmp eax, ecx ; jae 0x416717 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d463 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004780d4 : cmp eax, esi ; je 0x4780e4 ; ret
0x0000000000442646 : cmp ebx, 0xa ; je 0x442651 ; ret
0x0000000000443f8e : cmp ebx, eax ; setne dl ; jmp 0x443f7a
0x00000000004713a1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046d37e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447a39 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000466ff0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464bfe : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043e22c : cmp ecx, dword ptr [rdx] ; mov eax, 8 ; pop rbx ; ret
0x000000000042f8bb : cmp ecx, eax ; jne 0x42f8e9 ; xor eax, eax ; ret
0x00000000004a39b9 : cmp ecx, edi ; call qword ptr [rax]
0x0000000000473be6 : cmp ecx, edx ; jne 0x473bc5 ; ret
0x00000000004a39bd : cmp edi, ecx ; call qword ptr [rax]
0x000000000045a1d5 : cmp edi, ecx ; ja 0x45a1c0 ; mov eax, r8d ; ret
0x000000000046aafe : cmp edi, edx ; ja 0x46ab2d ; ret
0x000000000047c638 : cmp edx, 0 ; mov eax, edx ; jle 0x47c650 ; ret
0x000000000041d84a : cmp edx, 0x6c9800 ; jne 0x41d819 ; ret
0x0000000000473bf8 : cmp edx, eax ; jne 0x473ba2 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426558 : cmp edx, ecx ; jne 0x426545 ; ret
0x00000000004425ca : cmp edx, edi ; setae al ; ret
0x0000000000466c86 : cmp edx, esi ; je 0x466c97 ; test edx, edx ; jne 0x466c89 ; ret
0x0000000000416729 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044d205 : cmp esi, 3 ; je 0x44d216 ; pop rbx ; ret
0x00000000004ba5e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000046495a : cmp esi, ecx ; jb 0x464957 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004159ca : cmp esi, ecx ; jne 0x4159c7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004be385 : cmp esi, esp ; call qword ptr [rdx]
0x0000000000467cb2 : cmp esp, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004646a7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4646b7 ; ret
0x0000000000414de0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x414df7 ; ret
0x000000000049c713 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000042c842 : cmp r11b, r14b ; ret
0x0000000000442645 : cmp r11d, 0xa ; je 0x442652 ; ret
0x000000000048091d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x4808f0
0x0000000000474307 : cmp r8, qword ptr [rsi + rdx] ; jae 0x4742b9 ; xor eax, eax ; ret
0x000000000040db98 : cmp rax, -0x1000 ; ja 0x40dbc9 ; ret
0x000000000043f075 : cmp rax, -0x1000 ; ja 0x43f089 ; ret
0x000000000043f0c4 : cmp rax, -0x1000 ; ja 0x43f0d9 ; ret
0x000000000043f253 : cmp rax, -0x1000 ; ja 0x43f299 ; ret
0x000000000044f750 : cmp rax, -0x1000 ; ja 0x44f769 ; ret
0x000000000046a5c7 : cmp rax, -0x1000 ; ja 0x46a5e1 ; pop rbx ; ret
0x000000000046a955 : cmp rax, -0x1000 ; ja 0x46a969 ; ret
0x000000000046a9aa : cmp rax, -0x1000 ; ja 0x46a9c1 ; ret
0x0000000000477efb : cmp rax, 0xfd ; jbe 0x477f0e ; ret
0x00000000004742be : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000412e14 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x412e29 ; movzx eax, byte ptr [rax] ; ret
0x00000000004166e8 : cmp rax, rcx ; jae 0x416718 ; movzx eax, byte ptr [rax] ; ret
0x00000000004780d3 : cmp rax, rsi ; je 0x4780e5 ; ret
0x0000000000464bfd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042f8ba : cmp rcx, rax ; jne 0x42f8ea ; xor eax, eax ; ret
0x0000000000473be5 : cmp rcx, rdx ; jne 0x473bc6 ; ret
0x000000000046aafd : cmp rdi, rdx ; ja 0x46ab2e ; ret
0x0000000000473bf7 : cmp rdx, r8 ; jne 0x473ba3 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426557 : cmp rdx, rcx ; jne 0x426546 ; ret
0x0000000000426556 : cmp rdx, rcx ; jne 0x426547 ; ret
0x00000000004425c9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464959 : cmp rsi, rcx ; jb 0x464958 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004159c9 : cmp rsi, rcx ; jne 0x4159c8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000496207 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496507 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497407 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c4f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000004258c5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497107 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f339 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a3171 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; call rax
0x000000000040058a : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400591 ; ret
0x0000000000429e66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496b07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000409946 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000047a85f : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [r15 + 0x6cb9c0], r15b ; call rax
0x00000000004c885d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rbx]
0x00000000004a3175 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; push rax ; test al, 0xf8 ; call qword ptr [rax]
0x000000000047a7d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000412d0f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004bdff4 : cwde ; add edi, esi ; inc eax ; add edi, esi ; call rax
0x000000000049b204 : cwde ; add rax, r8 ; jmp rax
0x000000000040305c : cwde ; call 0x44f333
0x000000000040305b : cwde ; call 0x44f334
0x000000000041d84d : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000414b3c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004bfc08 : cwde ; push rsi ; cmc ; call qword ptr [rcx]
0x0000000000439161 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b576 : dec byte ptr [r8 - 0x75] ; ret
0x0000000000439162 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000479cc6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b5f4 : dec byte ptr [rax - 0x73] ; ret
0x000000000045cdac : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b577 : dec byte ptr [rax - 0x75] ; ret
0x000000000046538d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e1fa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e21d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000482d73 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000477ef9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x477f10 ; ret
0x000000000041adac : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x0000000000410389 : dec dword ptr [rax + 0x29] ; ret
0x00000000004392a2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004737f1 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e416 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418f0d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d58d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004185c5 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480a44 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000048583d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004704e5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047444a : dec dword ptr [rax + 0x63] ; ret
0x00000000004621cb : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000046291f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000004658c9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004742c1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421061 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004592de : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412307 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000004103ec : dec dword ptr [rax + 1] ; ret
0x000000000047d787 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045d366 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c69c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x0000000000411577 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004809ae : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043ea7c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004bdaa3 : dec dword ptr [rax - 0x4f00023e] ; ret 0xfffd
0x000000000046941e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x00000000004744b5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410068 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481b78 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000043ffbd : dec dword ptr [rax - 0x75] ; jge 0x43ffc7 ; call rbx
0x0000000000440270 : dec dword ptr [rax - 0x75] ; jge 0x44027a ; call rbx
0x0000000000441e08 : dec dword ptr [rax - 0x75] ; jge 0x441e12 ; call rbx
0x0000000000478fb7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041b86f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000413df1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000047835c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483bb2 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488387 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004266c8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000049ea3a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004016bc : dec dword ptr [rax - 0x77] ; ret
0x000000000046aaee : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483bff : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041db31 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f5d2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e3da : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466206 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483489 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455007 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045fba6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000004824bd : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x0000000000420fde : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b0b3 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402ae8 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x00000000004782c1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000047f6c7 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; pop rsi ; ret
0x00000000004876f8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004859ab : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000477efa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x477f0f ; ret
0x0000000000453a81 : dec dword ptr [rax - 0x7d] ; jge 0x453abe ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004040ac : dec dword ptr [rax - 0x7d] ; ret
0x0000000000418ebf : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448962 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004708ef : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000004708dd : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000456de4 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x0000000000469f26 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000047097b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004853a2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000452ec6 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004343d0 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046c710 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000047e21e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b279 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x000000000044047e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041b1af : dec dword ptr [rbx + 0x2ae64e15] ; add dh, dh ; ret 0xf02
0x00000000004783dc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000469e75 : dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000000004a328b : dec dword ptr [rbx - 0x3a] ; clc ; call rax
0x00000000004a326f : dec dword ptr [rbx - 0x3e] ; clc ; dec ebx ; ret 0xfff8
0x0000000000484246 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004552c4 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046d913 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000454ed3 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046c742 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000454e51 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047201a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049d2ac : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x00000000004693f6 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045a9dc : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x0000000000452b29 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000480abf : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000403057 : dec dword ptr [rcx - 0x67ba7639] ; call 0x44f338
0x000000000043fdf5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044027e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043fe88 : dec dword ptr [rcx - 0x75] ; jge 0x43fe92 ; call rbx
0x000000000043ffaf : dec dword ptr [rcx - 0x75] ; jge 0x43ffb9 ; call rbx
0x00000000004400f2 : dec dword ptr [rcx - 0x75] ; jge 0x4400fc ; call rbx
0x0000000000440262 : dec dword ptr [rcx - 0x75] ; jge 0x44026c ; call rbx
0x0000000000441a80 : dec dword ptr [rcx - 0x75] ; jge 0x441a8a ; call rbx
0x0000000000441ba8 : dec dword ptr [rcx - 0x75] ; jge 0x441bb2 ; call rbx
0x0000000000441ceb : dec dword ptr [rcx - 0x75] ; jge 0x441cf5 ; call rbx
0x0000000000441dec : dec dword ptr [rcx - 0x75] ; jge 0x441df6 ; call rbx
0x000000000047ca2c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453ac3 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000445e08 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e667 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000004560f3 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041adad : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485b07 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381a717
0x00000000004a318f : dec dword ptr [rdi - 0x43] ; clc ; jmp qword ptr [rax]
0x000000000043f175 : dec dword ptr [rdi] ; adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000043f149 : dec dword ptr [rdi] ; add dword ptr [rax], 0x50 ; add byte ptr [rax], al ; ret
0x0000000000483f26 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x00000000004867df : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x00000000004133c2 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000044257c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000044698b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000044255f : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004104a1 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000043d2f0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047057c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041672b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004856ff : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a52e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459926 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043e96d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f1d5 : dec dword ptr [rdi] ; xor dword ptr [rdi + rcx*2], 0 ; ret
0x00000000004a3273 : dec ebx ; ret 0xfff8
0x00000000004a326b : dec ebx ; sar eax, -1 ; ret 0xfff8
0x000000000047a04d : dec ecx ; ret
0x00000000004a354b : dec esp ; sbb ecx, edi ; push qword ptr [rdx + 0x19] ; stc ; jmp rdx
0x00000000004392a1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462356 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448961 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046d912 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004a2f89 : div bh ; jmp qword ptr [rax]
0x00000000004653d2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004c0f79 : div ch ; call qword ptr [rdx]
0x00000000004a2f88 : div dil ; jmp qword ptr [rax]
0x000000000047a7dc : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a1e5 : div ecx ; add eax, r8d ; ret
0x000000000043e271 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000462e36 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a7db : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004fc : enter -0x1401, -0x3b ; ret
0x00000000004004ec : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d464 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000049d9b6 : enter -0x72b4, 0x3d ; ret 0x22e1
0x000000000043915e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000043929e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000478fbb : enter -0x74b8, 0x14 ; ret
0x000000000046d4f4 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d4c8
0x000000000046bc34 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x000000000043fed4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004166ea : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a34e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041eda2 : enter 0x2a, 0x48 ; test eax, eax ; je 0x41edb4 ; call rax
0x000000000041eda1 : enter 0x2a, 0x48 ; test eax, eax ; je 0x41edb5 ; call rax
0x00000000004226fd : enter 0x31c3, -0x40 ; ret
0x00000000004c1873 : enter 0x380e, 0x41 ; ret
0x000000000041857d : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041ad75 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000046ae76 : enter 0x4f75, -0xd ; ret
0x00000000004bad9c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000042f3e6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421131 : enter 0xf66, -0x15 ; ret
0x00000000004c6198 : fadd dword ptr [rax - 0x1e8c0000] ; cli ; call rsi
0x00000000004c82e8 : fadd dword ptr [rax - 3] ; call rcx
0x0000000000414a87 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000414f83 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f36a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004427b6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041c81f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00000000004118e0 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444022 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c8a49 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411057 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b4b9 : fadd st(1) ; call 0xffffffff8a09dde4
0x000000000047b620 : fadd st(1) ; call 0xffffffff8a09df4b
0x000000000047be39 : fadd st(1) ; call 0xffffffff8a09e764
0x000000000047bf96 : fadd st(1) ; call 0xffffffff8a09e8c1
0x00000000004776a5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000049de1b : fbld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x000000000042ef31 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049e864 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004ba3d8 : fcmovb st(0), st(3) ; ret
0x000000000044ee6e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x0000000000468997 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f92a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fa0f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fb3f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041dd86 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb159 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000044eb21 : fcomp dword ptr [rsi + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004b93c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004c6034 : fcomp st(0), st(3) ; cli ; jmp rsi
0x000000000041db2f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000469e73 : fcos ; dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000000004859a9 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004400e3 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004400f0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4400fe ; call rbx
0x000000000043ff1a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3441 : fdivr st(0) ; call qword ptr [rax]
0x00000000004b8715 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000043d468 : fdivr st(7) ; ret
0x00000000004c1ce9 : fdivrp st(7) ; jmp qword ptr [rbx]
0x000000000043f282 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004640b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000440639 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bafa6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000045b4f1 : fidiv word ptr [rcx] ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x0000000000443f35 : fidivr dword ptr [rax + 1] ; ret
0x000000000043de8f : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000042c184 : fild qword ptr [rcx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000045a1d8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a2b5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000410490 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000404da8 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000004266f2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048aad2 : fimul word ptr [rax + 0x29] ; ret
0x000000000041166e : fimul word ptr [rax - 0x77] ; ret
0x0000000000472e4a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a17e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a1d8
0x000000000047fc8e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47fce8
0x000000000044f8a0 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x0000000000414af5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414c65 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004173a8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000467e12 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049e861 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000473e19 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000479221 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b200 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047923b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000440b19 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e1ae : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000447d67 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000041c5b9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x00000000004792bf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b19d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f301 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f001 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004326ec : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000047d3f2 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400bfa : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9401 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000441bb3 : fld st(1) ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000049167a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f429 : fldcw word ptr [rsp - 2] ; ret
0x0000000000425d19 : fldenv dword ptr [rsi + 0xf] ; je 0x425d76 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cb47 : fldenv dword ptr [rsi + 0xf] ; je 0x42cba4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f381 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425c11 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047a224 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418b4f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e401 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047e726 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048ed07 : fmul dword ptr [rax - 0x39] ; ret
0x00000000004584f1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411151 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484249 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047ce43 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x00000000004695fc : fmul dword ptr [rax - 0x7d] ; ret
0x00000000004117da : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045abee : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a4ad : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049a745 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000045cc4b : fmul dword ptr [rdi] ; ret
0x000000000040154b : fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004c7868 : fmul dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000048a9d7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a05c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004214b9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000426f6f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048ec02 : fmul st(0) ; ret
0x000000000048eb80 : fmulp st(1) ; ret
0x000000000040db45 : fpatan ; ret
0x000000000042f101 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b90e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9460 : fstp st(0) ; ret 0xde5d
0x0000000000467cb1 : fstp xword ptr [rbx] ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000040dbc8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042f401 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000437fd4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004c019c : fsub qword ptr [rax] ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x000000000047c662 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043d87b : fsub qword ptr [rsi + 0xf] ; jmp 0x43d847
0x000000000042f201 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042124c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000043fed2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004419db : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000441dda : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441448 : fsubp st(0) ; ret 0xffe8
0x0000000000441348 : fsubp st(0) ; ret 0xffe9
0x000000000041d97c : fsubr qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004bb138 : fucom st(5) ; loop 0x4bb191 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047eba5 : fucomi st(1) ; ret
0x000000000049e4d7 : fucompi st(0) ; ret
0x0000000000446458 : fucompi st(0) ; ret 0xfb9e
0x000000000041bbc0 : fucompi st(0) ; ret 0xffff
0x0000000000445602 : fucompi st(3) ; ret
0x0000000000467e16 : fucompp ; ret 0xfffe
0x000000000043e970 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004beb3c : hlt ; add ch, dh ; call qword ptr [rdx]
0x000000000044243b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004be562 : hlt ; call qword ptr [rax]
0x00000000004bea7a : hlt ; call qword ptr [rbx]
0x00000000004be386 : hlt ; call qword ptr [rdx]
0x00000000004c63d9 : hlt ; cli ; jmp qword ptr [rdx]
0x00000000004c4db4 : hlt ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; cli ; jmp rdx
0x00000000004b94e8 : hlt ; jmp 0x4b94bd
0x000000000043483a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043199e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043cf73 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004c36b4 : hlt ; push rbp ; add byte ptr [rax], al ; js 0x4c367d ; clc ; call qword ptr [rdi]
0x00000000004bf721 : hlt ; ret
0x0000000000441b98 : hlt ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b9623 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043cf77 : hlt ; sub eax, edx ; ret
0x00000000004c1272 : idiv bh ; ret
0x0000000000401606 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446986 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004c1271 : idiv dil ; ret
0x00000000004a2f82 : idiv edi ; add ch, dh ; idiv edi ; div dil ; jmp qword ptr [rax]
0x000000000049d2aa : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049b72f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a2f86 : idiv edi ; div dil ; jmp qword ptr [rax]
0x000000000049fc6b : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049fc28 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0628 : idiv edi ; ret
0x000000000045c697 : imul eax ; add ebx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x0000000000441b1d : imul eax ; insd dword ptr [rdi], dx ; ret 0xfffd
0x000000000046b0e8 : imul eax ; ret 0xfd42
0x00000000004419f5 : imul eax ; xchg eax, ebp ; ret
0x00000000004c4a15 : imul eax, dword ptr [rax], 0xfa055800 ; call rsi
0x000000000044b15d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043bad1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000044703b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000443f89 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x000000000047ca2f : imul ecx ; ret
0x0000000000441e21 : imul edi, dword ptr [rdi + 0x1f0ffffd], 0 ; ret
0x0000000000466ff4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000043af4c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000043481a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042655b : in al, -0xd ; ret
0x00000000004a3319 : in al, -8 ; inc dword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a3339 : in al, -8 ; jmp qword ptr [rax]
0x00000000004a33dd : in al, -8 ; jmp rax
0x00000000004a3359 : in al, -8 ; push rax ; in eax, -8 ; call rax
0x00000000004c24a4 : in al, 0x43 ; add byte ptr [rax], al ; test al, 0x1c ; clc ; call qword ptr [rax]
0x00000000004235cc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043df08 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000485bea : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457868 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000422e80 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004a3329 : in al, dx ; clc ; call qword ptr [rax]
0x000000000047103d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000491679 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000043199a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c1a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465207 : in al, dx ; or al, ch ; ret 1
0x000000000041c857 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004bab7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bab11 ; ret 0x48f
0x00000000004bab7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bab12 ; ret 0x48f
0x00000000004bb139 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000045a5bb : in eax, -0x21 ; loopne 0x45a54c ; ret 0xe680
0x000000000043489a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c07a : in eax, -0xd ; ret
0x00000000004ba601 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a335d : in eax, -8 ; call rax
0x00000000004a33bd : in eax, -8 ; jmp qword ptr [rax]
0x00000000004b9283 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042661a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000451ef2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8519 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000466473 : in eax, 0xf ; je 0x466498 ; add rax, 2 ; ret
0x00000000004016b6 : in eax, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e8af : in eax, dx ; jne 0x49e891 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043d792 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004317aa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c9a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495410 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004789cb : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e0d2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414932 : in eax, dx ; ret
0x000000000043d8e2 : in eax, dx ; sub rax, 1 ; ret
0x000000000049c955 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043dba8 : inc bl ; cmp dl, 1 ; jb 0x43dbba ; mov byte ptr [rdi], cl ; ret
0x0000000000432676 : inc bl ; jb 0x432686 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426581 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000414da2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044d206 : inc byte ptr [rbx] ; je 0x44d215 ; pop rbx ; ret
0x00000000004a34bf : inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3697 : inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a33cf : inc dword ptr [rax + 0x40fff8df] ; loope 0x4a33d7 ; call qword ptr [rax]
0x00000000004a2f33 : inc dword ptr [rax + 0x50fff800] ; add eax, edi ; jmp qword ptr [rax]
0x00000000004bda4b : inc dword ptr [rax + 0x59] ; std ; call qword ptr [rax - 0x1f0002a5]
0x00000000004a301b : inc dword ptr [rax + 0x65] ; clc ; jmp rax
0x00000000004a303b : inc dword ptr [rax + 0x72] ; clc ; jmp rax
0x00000000004a305b : inc dword ptr [rax + 0x7f] ; clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a398b : inc dword ptr [rax + 8] ; stc ; call qword ptr [rax]
0x00000000004a331b : inc dword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a33bb : inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a3337 : inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a33d3 : inc dword ptr [rax - 0x1f] ; clc ; call qword ptr [rax]
0x00000000004a336f : inc dword ptr [rax - 0x20] ; clc ; inc dword ptr [rax] ; loop 0x4a3377 ; jmp rax
0x00000000004a3473 : inc dword ptr [rax - 0x2b] ; clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004a306b : inc dword ptr [rax - 0x2f00077c] ; test edi, eax ; jmp qword ptr [rax]
0x00000000004a341f : inc dword ptr [rax - 0x32] ; clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a32b7 : inc dword ptr [rax - 0x3d] ; clc ; call rax
0x000000000045319a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045534c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a38bf : inc dword ptr [rax] ; adc ecx, edi ; push qword ptr [rax + 0x10] ; stc ; jmp rax
0x000000000045fef3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042f917 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a30a3 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a2f83 : inc dword ptr [rax] ; cmc ; idiv edi ; div dil ; jmp qword ptr [rax]
0x00000000004a39e7 : inc dword ptr [rax] ; ja 0x4a39e8 ; call qword ptr [rax]
0x00000000004a3abb : inc dword ptr [rax] ; jg 0x4a3abc ; jmp qword ptr [rax]
0x00000000004a3a77 : inc dword ptr [rax] ; jge 0x4a3a78 ; jmp qword ptr [rax]
0x00000000004a3a9b : inc dword ptr [rax] ; jle 0x4a3a9c ; jmp qword ptr [rax]
0x00000000004bdb13 : inc dword ptr [rax] ; leave ; std ; push qword ptr [rax - 0x37] ; std ; jmp rdx
0x00000000004a3373 : inc dword ptr [rax] ; loop 0x4a3373 ; jmp rax
0x00000000004a31a7 : inc dword ptr [rax] ; mov edi, 0xbff0fff8 ; clc ; call qword ptr [rsi]
0x00000000004a34af : inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x000000000047103f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473250 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b0c0 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b145 ; ret
0x00000000004602e7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d55a : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049cde2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e197 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000046845c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407612 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000043e26f : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e19f : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a31e7 : inc dword ptr [rcx + 0x1fff8c1] ; ret 0xfff8
0x00000000004a31ef : inc dword ptr [rcx + 0x1fff8c2] ; ret
0x000000000045dfb9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000477670 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x00000000004a3203 : inc dword ptr [rcx - 0x3b] ; clc ; jmp rcx
0x00000000004a319f : inc dword ptr [rcx - 0x43] ; clc ; call qword ptr [rax]
0x000000000044e19a : inc dword ptr [rcx - 0x77] ; ret
0x00000000004c8a46 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004a31f3 : inc dword ptr [rcx] ; ret
0x00000000004a31eb : inc dword ptr [rcx] ; ret 0xfff8
0x000000000047fb10 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a356b : inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x000000000042b97d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a3507 : inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004a34f7 : inc dword ptr [rsi] ; sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3633 : inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004bdff7 : inc eax ; add edi, esi ; call rax
0x00000000004a343f : inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a39d7 : inc eax ; jbe 0x4a39d8 ; call rax
0x00000000004a3a93 : inc eax ; jge 0x4a3a94 ; jmp rax
0x00000000004a3a6b : inc eax ; jl 0x4a3a6c ; call rax
0x00000000004a3ab3 : inc eax ; jle 0x4a3ab4 ; jmp rax
0x00000000004a307b : inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004bdaab : inc eax ; ret 0xfffd
0x00000000004bda2b : inc eax ; std ; call qword ptr [rax]
0x0000000000464c0c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d469 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004129c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000004776ab : inc ebx ; sub eax, edx ; ret
0x00000000004600a2 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000481016 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a34e7 : inc esi ; sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x0000000000402bcb : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x000000000040154d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c212c : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; and byte ptr [rax + rdi*8], al ; call qword ptr [rdi]
0x00000000004c4db5 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; cli ; jmp rdx
0x000000000041d84e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470ae5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000047abe6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047ba61 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x000000000049167b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f42a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bb13e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c572c : insb byte ptr [rdi], dx ; jbe 0x4c5736 ; add al, dh ; push rsi ; cli ; jmp rsp
0x00000000004055c0 : insb byte ptr [rdi], dx ; loopne 0x4055ca ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040fd90 : insb byte ptr [rdi], dx ; ret 1
0x00000000004bd9ad : insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x0000000000494c90 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c4ebd : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x000000000043fadf : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495b90 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004628c1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb13f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b94ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000441b1f : insd dword ptr [rdi], dx ; ret 0xfffd
0x00000000004ba3ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478873 : int 0x48
0x00000000004ba5c7 : int 0x80
0x00000000004c17f1 : int 0xa
0x00000000004886bf : int 0xfc
0x000000000045a1e6 : int1 ; add eax, r8d ; ret
0x000000000044476c : int1 ; call rbx
0x0000000000473be4 : int1 ; cmp rcx, rdx ; jne 0x473bc7 ; ret
0x000000000043db2b : int1 ; jl 0x43db7c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043db4c : int1 ; jl 0x43db9d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043db5f : int1 ; jl 0x43dbb0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dc34 : int1 ; jl 0x43dc85 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dc8c : int1 ; jl 0x43dcdd ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043dd29 : int1 ; jl 0x43dd7a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480923 : int1 ; jmp 0x4808ea
0x0000000000480922 : int1 ; jmp 0x4808eb
0x0000000000499f07 : int1 ; jmp rcx
0x000000000043468b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f6f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043cf43 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043e272 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bab16 : int1 ; ret 0x5803
0x00000000004c4489 : int1 ; stc ; call qword ptr [rsi]
0x000000000043cf47 : int1 ; sub eax, edx ; ret
0x00000000004a3425 : iretd ; clc ; jmp rax
0x000000000040db9e : ja 0x40dbc3 ; ret
0x00000000004264e2 : ja 0x4264f3 ; ret
0x000000000042c008 : ja 0x42c002 ; ret 0x7401
0x0000000000435a53 : ja 0x435a57 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b097 : ja 0x43b09d ; ret
0x000000000043b0b3 : ja 0x43b0bd ; mov dword ptr [rdi], ecx ; ret
0x000000000043b0f4 : ja 0x43b103 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b179 : ja 0x43b18d ; ret
0x000000000043b1cf : ja 0x43b1e7 ; ret
0x000000000043b251 : ja 0x43b26d ; ret
0x000000000043b6b7 : ja 0x43b6c1 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b6d3 : ja 0x43b6e1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b724 : ja 0x43b737 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b809 : ja 0x43b821 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b87f : ja 0x43b89b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b901 : ja 0x43b921 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f07b : ja 0x43f083 ; ret
0x000000000043f0ca : ja 0x43f0d3 ; ret
0x000000000043f259 : ja 0x43f293 ; ret
0x000000000043f2fd : ja 0x43f347 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044e195 : ja 0x44e19a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000044f756 : ja 0x44f763 ; ret
0x000000000045a1d7 : ja 0x45a1be ; mov eax, r8d ; ret
0x000000000046a5cd : ja 0x46a5db ; pop rbx ; ret
0x000000000046a95b : ja 0x46a963 ; ret
0x000000000046a9b0 : ja 0x46a9bb ; ret
0x000000000046ab00 : ja 0x46ab2b ; ret
0x0000000000476bb5 : ja 0x476bdf ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004771a5 : ja 0x4771cf ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000477541 : ja 0x47756b ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000478cee : ja 0x478d40 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004848e4 : ja 0x484871 ; ret 0x348
0x000000000048725b : ja 0x4871e8 ; ret 0x348
0x00000000004a39e9 : ja 0x4a39e6 ; call qword ptr [rax]
0x00000000004a39ed : ja 0x4a39ea ; jmp qword ptr [rax]
0x00000000004a3a15 : ja 0x4a3a12 ; call rax
0x00000000004a3a19 : ja 0x4a3a16 ; jmp rax
0x00000000004a3a21 : ja 0x4a3a1e ; call qword ptr [rax]
0x00000000004a3a1d : ja 0x4a3a1e ; push rax ; ja 0x4a3a22 ; call qword ptr [rax]
0x00000000004bab84 : ja 0x4bab0b ; ret 0x48f
0x0000000000412e18 : jae 0x412e25 ; movzx eax, byte ptr [rax] ; ret
0x00000000004166eb : jae 0x416715 ; movzx eax, byte ptr [rax] ; ret
0x000000000043ff19 : jae 0x43ff00 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000443f34 : jae 0x443f17 ; mov eax, 1 ; ret
0x000000000043f01d : jae 0x444156 ; ret
0x000000000047430b : jae 0x4742b5 ; xor eax, eax ; ret
0x00000000004b9142 : jae 0x4b9124 ; jo 0x4b91c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004b9fde : jae 0x4b9fb9 ; push rsi ; pop rdx ; je 0x4b9fae ; ret 0xacfc
0x00000000004bed39 : jae 0x4bed51 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4653 : jae 0x4c4661 ; ret
0x000000000042ff7a : jb 0x42ff8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300ca : jb 0x4300da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043021a : jb 0x43022a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043036a : jb 0x43037a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304ba : jb 0x4304ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043060a : jb 0x43061a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043075a : jb 0x43076a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308aa : jb 0x4308ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309fa : jb 0x430a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b4a : jb 0x430b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c9a : jb 0x430caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430dea : jb 0x430dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f3a : jb 0x430f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043108a : jb 0x43109a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311da : jb 0x4311ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432571 : jb 0x43255a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004325d4 : jb 0x4325bd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000432678 : jb 0x432684 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043562e : jb 0x43563a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043da17 : jb 0x43da27 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043da23 : jb 0x43da39 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043da33 : jb 0x43da3b ; mov byte ptr [rdi], cl ; ret
0x000000000043db95 : jb 0x43dba4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dba0 : jb 0x43dbb3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dbad : jb 0x43dbb5 ; mov byte ptr [rdi], cl ; ret
0x000000000046495c : jb 0x464955 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000049aba3 : jb 0x49abad ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a303d : jb 0x4a3039 ; jmp rax
0x00000000004a303c : jb 0x4a303a ; jmp rax
0x00000000004a3550 : jb 0x4a356e ; stc ; jmp rdx
0x0000000000414b3b : jbe 0x414adb ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000425e26 : jbe 0x425e65 ; add rax, rdi ; ret
0x0000000000425e36 : jbe 0x425e67 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425e46 : jbe 0x425e67 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425e56 : jbe 0x425e67 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c073 : jbe 0x42c08e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c069 ; ret
0x000000000045a9a2 : jbe 0x45a92f ; ret 0x8166
0x0000000000463e8a : jbe 0x463e00 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000477eff : jbe 0x477f0a ; ret
0x000000000049da36 : jbe 0x49da48 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a39d9 : jbe 0x4a39d6 ; call rax
0x00000000004a39d5 : jbe 0x4a39d6 ; inc eax ; jbe 0x4a39da ; call rax
0x00000000004a39dd : jbe 0x4a39da ; jmp rax
0x00000000004a39e5 : jbe 0x4a39e6 ; inc dword ptr [rax] ; ja 0x4a39ea ; call qword ptr [rax]
0x00000000004c572d : jbe 0x4c5735 ; add al, dh ; push rsi ; cli ; jmp rsp
0x000000000040088d : je 0x4008a8 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x00000000004008db : je 0x4008f0 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000040090a : je 0x40091a ; mov edi, 0x4be0c0 ; call rax
0x0000000000400958 : je 0x40094a ; call rax
0x0000000000400b94 : je 0x400bc2 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401603 : je 0x401617 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000402149 : je 0x40215d ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402395 : je 0x4023a9 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402c74 : je 0x402c84 ; mov edi, 0x6cb060 ; call rax
0x0000000000402ec3 : je 0x402edd ; mov edi, 0x6cafe0 ; call rax
0x00000000004030b7 : je 0x4030d1 ; mov edi, 0x6cafe0 ; call rax
0x00000000004034d2 : je 0x4034e2 ; mov edi, 0x6cb0a0 ; call rax
0x000000000040351a : je 0x40352c ; mov edi, 0x6cb0a0 ; call r15
0x000000000040361a : je 0x40362a ; mov edi, 0x6cb0a0 ; call rax
0x000000000040f7ae : je 0x40f7bd ; mov eax, edx ; pop rbx ; ret
0x0000000000413f2b : je 0x413ed1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414b03 : je 0x414abd ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414c73 : je 0x414c2d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414de5 : je 0x414df2 ; ret
0x0000000000414e17 : je 0x414e26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041593a : je 0x415945 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004174dd : je 0x4176fe ; mov rdx, rax ; jmp 0x417508
0x0000000000417aaa : je 0x417ab1 ; pop rbx ; ret
0x0000000000417b87 : je 0x417b8d ; call rax
0x0000000000418974 : je 0x418981 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041de72 : je 0x41de9b ; call rax
0x000000000041e862 : je 0x41e88e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041eda8 : je 0x41edae ; call rax
0x0000000000420da9 : je 0x420db2 ; ret
0x0000000000421032 : je 0x421047 ; mov eax, 0x16 ; ret
0x0000000000421081 : je 0x421093 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004227b3 : je 0x42277d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000423485 : je 0x42348d ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004234f4 : je 0x423506 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000423664 : je 0x42366e ; bsf eax, edx ; ret
0x0000000000423664 : je 0x42366f ; bsf eax, edx ; ret
0x000000000042370d : je 0x423725 ; bsf rax, rdx ; ret
0x000000000042370d : je 0x423726 ; bsf rax, rdx ; ret
0x00000000004236ac : je 0x423739 ; bsf rax, rdx ; ret
0x0000000000425d1c : je 0x425d73 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000425e8e : je 0x425ea1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000426470 : je 0x426482 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426a24 : je 0x426a36 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000428ef3 : je 0x428ebd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042aa83 : je 0x42aa4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042cb4a : je 0x42cba1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cc01 : je 0x42cc19 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042f677 : je 0x42f681 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e1ad : je 0x43e176 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e185 : je 0x43e178 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e1ad : je 0x43e178 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e2be : je 0x43e2cc ; xor eax, eax ; ret
0x000000000043e2b9 : je 0x43e2d9 ; cmp eax, 2 ; je 0x43e2d1 ; xor eax, eax ; ret
0x000000000043e30d : je 0x43e2f3 ; ret
0x000000000043e3f8 : je 0x43e408 ; mov edi, 0x6cb720 ; call rax
0x000000000043e410 : je 0x43e420 ; mov edi, 0x6cb720 ; call rax
0x000000000043e770 : je 0x43e751 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f1d8 : je 0x43f22d ; add byte ptr [rax], al ; ret
0x000000000043fb9a : je 0x43fba1 ; ret
0x0000000000440ee0 : je 0x440ef2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442649 : je 0x44264e ; ret
0x00000000004426ad : je 0x4426b2 ; ret
0x0000000000443c43 : je 0x443c53 ; mov edi, 0x6ca140 ; call rax
0x0000000000443dd1 : je 0x443de1 ; mov edi, 0x6ca140 ; call rax
0x0000000000443f58 : je 0x443f62 ; ret
0x0000000000443f74 : je 0x443f89 ; mov dword ptr [rip + 0x28501c], edx ; pop rbx ; ret
0x0000000000444767 : je 0x444793 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448864 : je 0x448893 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d208 : je 0x44d213 ; pop rbx ; ret
0x000000000044d203 : je 0x44d218 ; cmp esi, 3 ; je 0x44d218 ; pop rbx ; ret
0x000000000044d790 : je 0x44d7a0 ; mov edi, 0x6cb720 ; call rax
0x000000000044d7bf : je 0x44d7d7 ; mov edi, 0x6cb720 ; call rax
0x000000000044d8c0 : je 0x44d8c6 ; call rax
0x000000000044d91f : je 0x44d92f ; mov edi, 0x6cb720 ; call rax
0x000000000044da98 : je 0x44daaf ; mov edi, 0x6cb720 ; call rax
0x000000000044dd78 : je 0x44dd88 ; mov edi, 0x6cb720 ; call rax
0x000000000044de7c : je 0x44de82 ; call rax
0x000000000044ed3b : je 0x44ed41 ; call rax
0x000000000044f2fb : je 0x44f303 ; ret
0x00000000004508d2 : je 0x4508ff ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462c38 : je 0x462c62 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004638c6 : je 0x463916 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004638c5 : je 0x463917 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004646ac : je 0x4646b2 ; ret
0x00000000004646da : je 0x46473c ; pop rbp ; pop r12 ; ret
0x000000000046477f : je 0x4647e1 ; pop rbp ; pop r12 ; ret
0x00000000004648bd : je 0x4648c8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464901 : je 0x46490c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004654dc : je 0x465505 ; bsf rax, rdx ; ret
0x00000000004654dc : je 0x465506 ; bsf rax, rdx ; ret
0x000000000046546c : je 0x465519 ; bsf rax, rdx ; ret
0x0000000000466459 : je 0x466479 ; mov cl, dl ; and cl, 0xf ; je 0x466489 ; ret
0x0000000000466460 : je 0x466482 ; ret
0x0000000000466475 : je 0x466496 ; add rax, 2 ; ret
0x00000000004667fb : je 0x466824 ; call rbx
0x00000000004668a3 : je 0x4668cc ; call rbx
0x0000000000466c88 : je 0x466c95 ; test edx, edx ; jne 0x466c87 ; ret
0x0000000000466c87 : je 0x466c96 ; test edx, edx ; jne 0x466c88 ; ret
0x000000000046ae85 : je 0x46ae74 ; ret
0x000000000046d96a : je 0x46d8f4 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470a74 : je 0x470a84 ; mov edi, 0x6ca100 ; call rax
0x0000000000474a68 : je 0x474a78 ; mov edi, 0x6ca140 ; call rax
0x0000000000474a90 : je 0x474aa0 ; mov edi, 0x6ca140 ; call rax
0x0000000000474b06 : je 0x474b16 ; mov edi, 0x6ca140 ; call rax
0x000000000047602b : je 0x47603f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047604e : je 0x47609a ; shl rdx, 5 ; add rdx, rax ; jmp 0x476071
0x000000000047661c : je 0x476641 ; pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x00000000004765d3 : je 0x476647 ; mov edi, 0x6ca140 ; call rax
0x0000000000476637 : je 0x4766a0 ; pop rbx ; ret
0x0000000000476774 : je 0x47677b ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047696f : je 0x476976 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000477f8e : je 0x477f59 ; mov edi, 0x6ca140 ; call rax
0x0000000000477f6f : je 0x477f9d ; or byte ptr [rdi + 0x6ca140], bh ; call rax
0x00000000004780d6 : je 0x4780e2 ; ret
0x00000000004780ec : je 0x4780fc ; mov edi, 0x6ca140 ; call rax
0x000000000047a53a : je 0x47a545 ; mov eax, edx ; pop rbx ; ret
0x000000000047ae32 : je 0x47ae46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ba9c : je 0x47bacb ; js 0x47baf1 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047e508 : je 0x47e518 ; mov edi, 0x6ca140 ; call rax
0x000000000047e534 : je 0x47e544 ; mov edi, 0x6ca140 ; call rax
0x000000000047e7da : je 0x47e7ee ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048750b : je 0x487498 ; ret 0x348
0x0000000000487c8b : je 0x487c9b ; mov edi, 0x6ca140 ; call rax
0x0000000000487cb2 : je 0x487cc2 ; mov edi, 0x6ca140 ; call rax
0x0000000000487d31 : je 0x487d41 ; mov edi, 0x6ca140 ; call rax
0x0000000000487d5a : je 0x487d6a ; mov edi, 0x6ca140 ; call rax
0x0000000000493e93 : je 0x493e5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000495e43 : je 0x495e0d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499c75 : je 0x499c53 ; ret
0x000000000049bf40 : je 0x49bef8 ; add rsp, 0x18 ; ret
0x000000000049bef7 : je 0x49bf69 ; add rsp, 0x18 ; ret
0x000000000049de33 : je 0x49de44 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49de49 ; ret
0x000000000049dfed : je 0x49e057 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e468 : je 0x49e473 ; ret
0x000000000049e6da : je 0x49e6ea ; mov edi, 0x6ca100 ; call rax
0x000000000049e79b : je 0x49e7ab ; mov edi, 0x6ca100 ; call rax
0x00000000004a043e : je 0x4a0449 ; call rax
0x00000000004b92a8 : je 0x4b9273 ; xor al, 0xd8 ; ret
0x00000000004b94e7 : je 0x4b94e4 ; jmp 0x4b94be
0x00000000004b9fe2 : je 0x4b9faa ; ret 0xacfc
0x00000000004bed32 : je 0x4bed40 ; ret
0x00000000004c619c : je 0x4c6182 ; cli ; call rsi
0x00000000004264f2 : jg 0x426544 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426617 : jg 0x426630 ; jne 0x426607 ; mov rax, rdi ; ret
0x000000000042c077 : jg 0x42c08e ; jne 0x42c065 ; ret
0x0000000000431b59 : jg 0x431bac ; ret
0x0000000000431bdf : jg 0x431c2a ; ret
0x0000000000431d59 : jg 0x431dac ; ret 0x894c
0x0000000000431ddf : jg 0x431e2a ; ret 0x894c
0x0000000000432570 : jg 0x4325ec ; loopne 0x432541 ; jp 0x4325fd ; jp 0x432570 ; ret
0x000000000043261c : jg 0x43262d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434668 : jg 0x4346b9 ; loope 0x434667 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004346df : jg 0x43472a ; ret 0xff2
0x00000000004346f8 : jg 0x434749 ; loop 0x4346f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043476f : jg 0x4347ba ; ret
0x0000000000434788 : jg 0x4347d9 ; jrcxz 0x434787 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434818 : jg 0x434869 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434898 : jg 0x4348e9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434918 : jg 0x434969 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434998 : jg 0x4349e9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a18 : jg 0x434a69 ; call 0x4fc25a1a
0x0000000000434a98 : jg 0x434ae9 ; jmp 0x4fc25a9a
0x0000000000434c18 : jg 0x434c69 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c98 : jg 0x434ce9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d28 : jg 0x434d79 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434da8 : jg 0x434df9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e1c : jg 0x434e27 ; ret
0x0000000000434e76 : jg 0x434e89 ; ret
0x0000000000434e71 : jg 0x434ec1 ; psllq mm1, qword ptr [rdi] ; jg 0x434e8e ; ret
0x0000000000434ee6 : jg 0x434ef9 ; ret
0x0000000000434f56 : jg 0x434f69 ; ret
0x0000000000434f51 : jg 0x434fa1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000434fc6 : jg 0x434fd9 ; ret
0x0000000000434fc1 : jg 0x435011 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435036 : jg 0x435049 ; ret
0x0000000000435031 : jg 0x435081 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004350a6 : jg 0x4350b9 ; ret
0x00000000004350a1 : jg 0x4350f1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435116 : jg 0x435129 ; ret
0x0000000000435111 : jg 0x435161 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435186 : jg 0x435199 ; ret
0x0000000000435181 : jg 0x4351d1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004351f6 : jg 0x435209 ; ret
0x0000000000435266 : jg 0x435279 ; ret
0x00000000004352d6 : jg 0x4352e9 ; ret
0x00000000004352d1 : jg 0x435321 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435346 : jg 0x435359 ; ret
0x0000000000435341 : jg 0x435391 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353b6 : jg 0x4353c9 ; ret
0x00000000004353b1 : jg 0x435401 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435426 : jg 0x435439 ; ret
0x0000000000435421 : jg 0x435471 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435496 : jg 0x4354a9 ; ret
0x0000000000435491 : jg 0x4354e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355d4 : jg 0x4355e5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004355e8 : jg 0x4355f9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435a5a : jg 0x435a56 ; ret
0x000000000043b166 : jg 0x43b171 ; ret
0x000000000043b176 : jg 0x43b184 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b18a : jg 0x43b199 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b1a9 : jg 0x43b1b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b1b9 : jg 0x43b1c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b1c9 : jg 0x43b1da ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b1ea : jg 0x43b1f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b20a : jg 0x43b219 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b22a : jg 0x43b239 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b24a : jg 0x43b25c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b28d : jg 0x43b29f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b2ad : jg 0x43b2bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b2cb : jg 0x43b2db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b2eb : jg 0x43b2fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b30b : jg 0x43b31b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b32b : jg 0x43b33b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b7f6 : jg 0x43b805 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b806 : jg 0x43b818 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b839 : jg 0x43b84b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b859 : jg 0x43b86b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b97f : jg 0x43b9df ; or eax, 0x1c478d48 ; ret
0x000000000043d9f2 : jg 0x43da02 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043da93 : jg 0x43dae4 ; loopne 0x43dae8 ; sub eax, edx ; vzeroupper ; ret
0x000000000043db77 : jg 0x43db87 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043db6d : jg 0x43db8d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e140 : jg 0x43e17d ; ret 0x2b77
0x0000000000443736 : jg 0x443764 ; add dh, dh ; ret 0x7420
0x000000000044997f : jg 0x44990c ; ret 0x5c77
0x00000000004690c5 : jg 0x4690f8 ; add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091a21
0x0000000000476bb9 : jg 0x476be7 ; call r11
0x00000000004771a9 : jg 0x4771d7 ; call r11
0x0000000000477545 : jg 0x477573 ; call r11
0x000000000047ef41 : jg 0x47ef47 ; add byte ptr [rcx], bh ; ret
0x0000000000491654 : jg 0x491661 ; ret 0x5488
0x00000000004a305d : jg 0x4a305d ; call qword ptr [rax - 0x1f000780]
0x00000000004a305c : jg 0x4a305e ; call qword ptr [rax - 0x1f000780]
0x00000000004a3abd : jg 0x4a3aba ; jmp qword ptr [rax]
0x000000000040dfbe : jge 0x40dfc3 ; call r14
0x000000000043f4cf : jge 0x43f4c1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043fe8b : jge 0x43fe8f ; call rbx
0x000000000043ffb2 : jge 0x43ffb6 ; call rbx
0x000000000043ffc0 : jge 0x43ffc4 ; call rbx
0x00000000004400f5 : jge 0x4400f9 ; call rbx
0x0000000000440265 : jge 0x440269 ; call rbx
0x0000000000440273 : jge 0x440277 ; call rbx
0x00000000004406c6 : jge 0x440691 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441a83 : jge 0x441a87 ; call rbx
0x0000000000441bab : jge 0x441baf ; call rbx
0x0000000000441cee : jge 0x441cf2 ; call rbx
0x0000000000441def : jge 0x441df3 ; call rbx
0x0000000000441e0b : jge 0x441e0f ; call rbx
0x0000000000453a84 : jge 0x453abb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466204 : jge 0x466206 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466203 : jge 0x466207 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466636 : jge 0x46663b ; call r12
0x000000000049c30f : jge 0x49c30c ; leave ; ret
0x000000000049c3a7 : jge 0x49c3aa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c43b : jge 0x49c438 ; leave ; ret
0x000000000049c487 : jge 0x49c48a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c550 : jge 0x49c553 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c5df : jge 0x49c5dc ; leave ; ret
0x000000000049c630 : jge 0x49c633 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ea40 : jge 0x49ea55 ; call r12
0x00000000004a3a79 : jge 0x4a3a76 ; jmp qword ptr [rax]
0x00000000004a3a91 : jge 0x4a3a92 ; inc eax ; jge 0x4a3a96 ; jmp rax
0x00000000004a3a95 : jge 0x4a3a92 ; jmp rax
0x00000000004a3a99 : jge 0x4a3a9a ; inc dword ptr [rax] ; jle 0x4a3a9e ; jmp qword ptr [rax]
0x00000000004bd9d1 : jge 0x4bd9d6 ; push rax ; jle 0x4bd9da ; call rax
0x0000000000400b98 : jl 0x400bc2 ; or al, 0x41 ; call rsp
0x0000000000400bec : jl 0x400c1a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000413cdb : jl 0x413d26 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041afc5 : jl 0x41aff0 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b0fc : jl 0x41b127 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000435554 : jl 0x4355a3 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435590 : jl 0x4355df ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043578e : jl 0x4357dd ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004358f5 : jl 0x435944 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435a57 : jl 0x435aa6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043db2c : jl 0x43db7b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043db4d : jl 0x43db9c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043db60 : jl 0x43dbaf ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dc35 : jl 0x43dc84 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dc8d : jl 0x43dcdc ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043dd2a : jl 0x43dd79 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f284 : jl 0x43f2b0 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f284 : jl 0x43f2b1 ; test al, 2 ; cmove eax, edx ; ret
0x0000000000440320 : jl 0x44034e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447136 : jl 0x447164 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447a99 : jl 0x447ac7 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000447e7f : jl 0x447ead ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448869 : jl 0x448893 ; call r15
0x0000000000448c10 : jl 0x448c3e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449929 : jl 0x449957 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044a835 : jl 0x44a863 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044cde8 : jl 0x44ce13 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044f8d2 : jl 0x44f8fd ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004525dc : jl 0x452607 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458c78 : jl 0x458c42 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045c85c : jl 0x45c887 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464625 : jl 0x4645c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000473259 : jl 0x473288 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047b5cd : jl 0x47b5f7 ; js 0x47b616 ; call rsp
0x000000000047b8e2 : jl 0x47b90c ; js 0x47b92b ; call rsp
0x000000000047baa1 : jl 0x47bacb ; js 0x47baea ; call rsp
0x000000000047bca9 : jl 0x47bcd3 ; js 0x47bcf2 ; call rsp
0x000000000049a962 : jl 0x49a98d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3a6d : jl 0x4a3a6a ; call rax
0x00000000004a3a69 : jl 0x4a3a6a ; inc eax ; jl 0x4a3a6e ; call rax
0x00000000004a3a71 : jl 0x4a3a6e ; jmp rax
0x00000000004a3a75 : jl 0x4a3a76 ; inc dword ptr [rax] ; jge 0x4a3a7a ; jmp qword ptr [rax]
0x00000000004bdfe4 : jl 0x4bdfd3 ; std ; call rsp
0x00000000004c2f55 : jl 0x4c2f51 ; call qword ptr [rcx]
0x00000000004c5d75 : jl 0x4c5d7d ; add al, bh ; mov dl, 0xfa ; call rdx
0x00000000004c783c : jl 0x4c77dc ; add byte ptr [rax], al ; ror byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x00000000004236ae : jle 0x4236b7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004236ae : jle 0x4236b8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d252 : jle 0x44d265 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004742da : jle 0x474306 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000047c63d : jle 0x47c64b ; ret
0x00000000004a3a9d : jle 0x4a3a9a ; jmp qword ptr [rax]
0x00000000004a3ab1 : jle 0x4a3ab2 ; inc eax ; jle 0x4a3ab6 ; jmp rax
0x00000000004a3ab5 : jle 0x4a3ab2 ; jmp rax
0x00000000004a3ab9 : jle 0x4a3aba ; inc dword ptr [rax] ; jg 0x4a3abe ; jmp qword ptr [rax]
0x00000000004bd9d5 : jle 0x4bd9d6 ; call rax
0x000000000040076d : jmp 0x400732
0x0000000000400fe1 : jmp 0x400f41
0x0000000000402072 : jmp 0x402088
0x0000000000411573 : jmp 0x41147b
0x0000000000417564 : jmp 0x41758e
0x000000000041ab7d : jmp 0x41a08c
0x000000000041ab8e : jmp 0x41a9a9
0x000000000041d423 : jmp 0x41d44c
0x0000000000421134 : jmp 0x4210fa
0x0000000000421288 : jmp 0x42124d
0x000000000042cc5c : jmp 0x42cc22
0x000000000042cda8 : jmp 0x42cd6d
0x000000000043d73e : jmp 0x43d704
0x000000000043d80f : jmp 0x43d7d5
0x000000000043d87e : jmp 0x43d844
0x000000000043f393 : jmp 0x43f306
0x000000000043fc93 : jmp 0x43fc36
0x0000000000443a8c : jmp 0x44356f
0x0000000000445603 : jmp 0x4455c9
0x0000000000445a7e : jmp 0x445a43
0x000000000044f23f : jmp 0x44ee61
0x00000000004500d1 : jmp 0x4500db
0x0000000000451975 : jmp 0x45199d
0x00000000004568c3 : jmp 0x45689f
0x000000000045a27a : jmp 0x45a2a2
0x0000000000462454 : jmp 0x462419
0x0000000000462453 : jmp 0x46241a
0x0000000000464beb : jmp 0x464bb1
0x0000000000464bea : jmp 0x464bb2
0x0000000000465cfb : jmp 0x465b51
0x0000000000469dbb : jmp 0x469d80
0x000000000046a6b0 : jmp 0x46a676
0x000000000046d4fb : jmp 0x46d4c1
0x000000000047a182 : jmp 0x47a1d4
0x000000000047d2ec : jmp 0x47d2fe
0x000000000047c655 : jmp 0x47ee1b
0x000000000047fc92 : jmp 0x47fce4
0x00000000004828d6 : jmp 0x48000e
0x0000000000480924 : jmp 0x4808e9
0x0000000000483685 : jmp 0x48364a
0x00000000004851ab : jmp 0x485170
0x0000000000486e8a : jmp 0x486e4f
0x00000000004a327c : jmp 0x4a3242
0x00000000004b87aa : jmp 0x4b87e9
0x00000000004b94e9 : jmp 0x4b94bc
0x00000000004ba4e0 : jmp 0x4ba474
0x00000000004ba4df : jmp 0x4ba475
0x00000000004bdfd9 : jmp 0x4bdfde
0x0000000000434a9a : jmp 0x4fc25a98
0x0000000000434a99 : jmp 0x4fc25a99
0x00000000004690cb : jmp 0xffffffffbf091a1b
0x0000000000478cf1 : jmp 0xffffffffc3571646
0x000000000049bc05 : jmp qword ptr [r10]
0x00000000004bda93 : jmp qword ptr [rax - 0x1f000244]
0x00000000004bda83 : jmp qword ptr [rax - 0x1f00024d]
0x00000000004bda73 : jmp qword ptr [rax - 0x1f000256]
0x00000000004bda63 : jmp qword ptr [rax - 0x1f00025f]
0x000000000041c9c9 : jmp qword ptr [rax]
0x00000000004832ae : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c172b : jmp qword ptr [rbx]
0x00000000004a31fb : jmp qword ptr [rcx]
0x00000000004bada4 : jmp qword ptr [rdi]
0x00000000004a3783 : jmp qword ptr [rdx + 0x12fff910]
0x000000000049bb5c : jmp qword ptr [rdx]
0x000000000047e019 : jmp qword ptr [rsi + 0xf]
0x00000000004a3243 : jmp qword ptr [rsi]
0x0000000000421369 : jmp r10
0x0000000000476821 : jmp r11
0x0000000000499ce0 : jmp r8
0x000000000042f960 : jmp r9
0x00000000004bda67 : jmp rax
0x0000000000476822 : jmp rbx
0x00000000004202ee : jmp rcx
0x00000000004a324f : jmp rdi
0x000000000042136a : jmp rdx
0x00000000004a3223 : jmp rsi
0x000000000045ff32 : jmp rsp
0x000000000040058b : jne 0x400590 ; ret
0x000000000040db44 : jne 0x40db22 ; ret
0x000000000040fa0b : jne 0x40fa21 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004109ec : jne 0x4109f3 ; pop rbx ; ret
0x00000000004131b5 : jne 0x4131c2 ; ret
0x0000000000414931 : jne 0x414923 ; ret
0x0000000000415641 : jne 0x415658 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415992 : jne 0x41597d ; pop rbx ; ret
0x00000000004159cc : jne 0x4159c5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000416286 : jne 0x41627b ; ret
0x0000000000417562 : jne 0x417576 ; jmp 0x417590
0x000000000041d421 : jne 0x41d434 ; jmp 0x41d44e
0x000000000041d850 : jne 0x41d813 ; ret
0x00000000004212d4 : jne 0x4212e6 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000425dd9 : jne 0x425e35 ; xor rax, rax ; ret
0x0000000000425d99 : jne 0x425e59 ; xor rax, rax ; ret
0x0000000000425e7a : jne 0x425e8d ; lea rax, qword ptr [rip + 0x1d] ; ret
0x000000000042655a : jne 0x426543 ; ret
0x00000000004266c3 : jne 0x4265af ; mov rax, rdi ; ret
0x0000000000426619 : jne 0x426605 ; mov rax, rdi ; ret
0x0000000000426b40 : jne 0x426b52 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426b93 : jne 0x426ba5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042c138 : jne 0x42c010 ; ret
0x000000000042c079 : jne 0x42c063 ; ret
0x000000000042e2cc : jne 0x42e2b6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042f8bd : jne 0x42f8e7 ; xor eax, eax ; ret
0x000000000042eeb1 : jne 0x42f8eb ; xor eax, eax ; ret
0x000000000042eed9 : jne 0x42f8f7 ; xor eax, eax ; ret
0x000000000043bae5 : jne 0x43ba76 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bab7 : jne 0x43ba76 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bab6 : jne 0x43ba77 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043d244 : jne 0x43d458 ; xor eax, eax ; ret
0x000000000043d449 : jne 0x43d469 ; xor eax, eax ; ret
0x000000000043d2f1 : jne 0x43d46d ; xor eax, eax ; ret
0x000000000043d461 : jne 0x43d46e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d571 : jne 0x43d562 ; ret
0x000000000043d621 : jne 0x43d612 ; ret
0x000000000043d791 : jne 0x43d786 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043d8e1 : jne 0x43d8d6 ; sub rax, 1 ; ret
0x0000000000440638 : jne 0x440620 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044243a : jne 0x442438 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004424aa : jne 0x4424a8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004425f2 : jne 0x4425e9 ; pop rdx ; pop r10 ; ret
0x00000000004427c3 : jne 0x4427bd ; xor eax, eax ; leave ; ret
0x0000000000445a7c : jne 0x445a53 ; jmp 0x445a45
0x0000000000451973 : jne 0x451985 ; jmp 0x45199f
0x0000000000451ef1 : jne 0x451edd ; mov rax, rsi ; ret
0x0000000000451f75 : jne 0x451f55 ; mov rax, rsi ; ret
0x000000000045a278 : jne 0x45a28a ; jmp 0x45a2a4
0x0000000000463801 : jne 0x4637f3 ; ret
0x00000000004653d3 : jne 0x4653de ; xor rax, rax ; ret
0x00000000004665a5 : jne 0x4665b2 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466c4b : jne 0x466c06 ; mov rax, rdx ; ret
0x0000000000466c8c : jne 0x466c83 ; ret
0x000000000046aec3 : jne 0x46ae75 ; xor eax, eax ; ret
0x000000000046ae77 : jne 0x46aecb ; ret
0x000000000046aebf : jne 0x46aecd ; test ecx, ecx ; jne 0x46ae79 ; xor eax, eax ; ret
0x0000000000473bfa : jne 0x473ba0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473be8 : jne 0x473bc3 ; ret
0x0000000000473d07 : jne 0x473d1a ; mov rax, qword ptr [rip + 0x258060] ; ret
0x0000000000473d50 : jne 0x473d23 ; ret
0x0000000000476566 : jne 0x4765a3 ; ret
0x0000000000476565 : jne 0x4765a4 ; ret
0x00000000004783b3 : jne 0x4783c6 ; add rsp, 0x38 ; ret
0x0000000000478455 : jne 0x478468 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047852d : jne 0x478570 ; xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004785e5 : jne 0x4785f8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047a7b0 : jne 0x47a7c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047df68 : jne 0x47df25 ; nop word ptr [rax + rax] ; call rbx
0x00000000004916b0 : jne 0x4916c2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000491703 : jne 0x491715 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049c003 : jne 0x49bffc ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c067 : jne 0x49c05c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c30b : jne 0x49c304 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c437 : jne 0x49c430 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c5db : jne 0x49c5d4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c954 : jne 0x49c94b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049c9b4 : jne 0x49c9ab ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049de39 : jne 0x49de43 ; ret
0x000000000049de54 : jne 0x49de63 ; ret
0x000000000049e074 : jne 0x49e083 ; ret
0x000000000049e473 : jne 0x49e482 ; mov eax, 8 ; ret
0x000000000049e865 : jne 0x49e853 ; pop rbx ; ret
0x000000000049e8b0 : jne 0x49e890 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049e9d5 : jne 0x49e9bb ; pop rbx ; ret
0x00000000004a3045 : jne 0x4a3041 ; jmp qword ptr [rax]
0x0000000000425e9b : jno 0x425eff ; add dword ptr [rax], eax ; ret
0x000000000042f16e : jno 0x42f17d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000435550 : jno 0x435559 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043578a : jno 0x435793 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004358f1 : jno 0x435902 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435a56 : jno 0x435ada ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004665a3 : jno 0x4665b2 ; jne 0x4665b4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004665a9 : jno 0x4665b6 ; ret
0x0000000000478be4 : jno 0x478c36 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000443b8d : jnp 0x443bbb ; add cl, ch ; ret
0x00000000004b8fc5 : jnp 0x4b8f82 ; ret
0x00000000004bd9cd : jnp 0x4bd9ce ; call qword ptr [rax]
0x0000000000400767 : jns 0x40065b ; jmp 0x400738
0x0000000000435557 : jns 0x43555a ; ret
0x0000000000435791 : jns 0x435794 ; ret
0x00000000004358f8 : jns 0x435903 ; ret
0x000000000046f15c : jns 0x46f16a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000049bef4 : jns 0x49bf37 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b80ce : jns 0x4b8064 ; ret 0xf869
0x00000000004b80cd : jns 0x4b8065 ; ret 0xf869
0x00000000004ba4de : jns 0x4ba535 ; jmp 0x4ba476
0x00000000004bd9c9 : jns 0x4bd9ce ; push qword ptr [rax] ; jnp 0x4bd9d2 ; call qword ptr [rax]
0x00000000004c1489 : jns 0x4c1483 ; call qword ptr [rax]
0x0000000000413034 : jo 0x413085 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046387a : jo 0x463892 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000466d9c : jo 0x466db0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a48a : jo 0x47a417 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a489 : jo 0x47a418 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a3078 : jo 0x4a3009 ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a3039 : jo 0x4a3039 ; inc dword ptr [rax + 0x72] ; clc ; jmp rax
0x00000000004a3188 : jo 0x4a313a ; clc ; call qword ptr [rax]
0x00000000004a3350 : jo 0x4a3339 ; clc ; push qword ptr [rax] ; loop 0x4a3356 ; call qword ptr [rax]
0x00000000004a343c : jo 0x4a341c ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a36d8 : jo 0x4a36f3 ; stc ; jmp rax
0x00000000004a38c4 : jo 0x4a38d9 ; stc ; jmp rax
0x00000000004b9144 : jo 0x4b91be ; mov ebp, 0xfb67d10d ; ret
0x00000000004bda1c : jo 0x4bd9a5 ; std ; call rax
0x00000000004bda1c : jo 0x4bd9a9 ; std ; call rax
0x00000000004bda28 : jo 0x4bda75 ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bdb18 : jo 0x4bdae6 ; std ; jmp rdx
0x00000000004c2930 : jo 0x4c2981 ; add byte ptr [rax], al ; or al, 0x35 ; clc ; jmp rsp
0x00000000004c3620 : jo 0x4c35dc ; clc ; call qword ptr [rdi]
0x00000000004c6030 : jo 0x4c60b8 ; add byte ptr [rax], al ; fcomp st(0), st(3) ; cli ; jmp rsi
0x00000000004c7dc0 : jo 0x4c7da4 ; cld ; call qword ptr [rax]
0x00000000004265a5 : jp 0x42659f ; ret 0x7401
0x0000000000432576 : jp 0x43256a ; ret
0x00000000004325d9 : jp 0x4325cd ; ret
0x000000000043256f : jp 0x4325f9 ; jb 0x43255c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432574 : jp 0x4325f9 ; jp 0x43256c ; ret
0x0000000000441b12 : jp 0x441add ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000464be9 : jp 0x464c2e ; jmp 0x464bb3
0x000000000047b30e : jp 0x47b323 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000488385 : jp 0x48838e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c5b09 : jp 0x4c5b11 ; add byte ptr [rax + rdx*4 - 6], al ; call rsi
0x00000000004c5b08 : jp 0x4c5b12 ; add byte ptr [rax + rdx*4 - 6], al ; call rsi
0x000000000043478a : jrcxz 0x434785 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434789 : jrcxz 0x434786 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442643 : jrcxz 0x442608 ; cmp r11d, 0xa ; je 0x442654 ; ret
0x000000000045b0c6 : jrcxz 0x45b13f ; ret
0x000000000045d0d8 : jrcxz 0x45d0d2 ; ret 0xf40
0x00000000004a33b9 : jrcxz 0x4a33b9 ; inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a33d9 : jrcxz 0x4a33d9 ; push rax ; in al, -8 ; jmp rax
0x00000000004b7f25 : jrcxz 0x4b7f7f ; ret
0x00000000004098f6 : js 0x409910 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x0000000000409907 : js 0x409919 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000040991d : js 0x40993f ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000040992e : js 0x409948 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000040993f : js 0x409951 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x0000000000409955 : js 0x409977 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x0000000000409966 : js 0x409980 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x0000000000409977 : js 0x409989 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000040998d : js 0x4099af ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000040999e : js 0x4099b8 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x00000000004099af : js 0x4099c1 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x00000000004099c5 : js 0x4099e7 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x00000000004099d6 : js 0x4099f0 ; mov qword ptr [rsp], rax ; call 0x405bf8
0x000000000041aa53 : js 0x41aa7f ; add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044243f : js 0x44249f ; pop rbp ; ret
0x00000000004424af : js 0x44250f ; pop rbp ; ret
0x00000000004482de : js 0x44832f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044aec8 : js 0x44af19 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044bd28 : js 0x44bd79 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471042 : js 0x47104b ; pop rbx ; ret
0x000000000047a48d : js 0x47a49b ; ret
0x000000000047b5cf : js 0x47b614 ; call rsp
0x000000000047b8e4 : js 0x47b929 ; call rsp
0x000000000047ba63 : js 0x47baa8 ; call rsp
0x000000000047baa3 : js 0x47bae8 ; call rsp
0x000000000047ba9e : js 0x47baef ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bc66 : js 0x47bcab ; call rsp
0x000000000047bcab : js 0x47bcf0 ; call rsp
0x000000000049c235 : js 0x49c242 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c242 : js 0x49c24e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3a39 : js 0x4a3a36 ; call rax
0x00000000004a3a41 : js 0x4a3a3e ; call qword ptr [rax]
0x00000000004a3a3d : js 0x4a3a3e ; push rax ; js 0x4a3a42 ; call qword ptr [rax]
0x00000000004bdac8 : js 0x4bda8f ; std ; call rax
0x00000000004beb38 : js 0x4beb4b ; add byte ptr [rax], al ; hlt ; add ch, dh ; call qword ptr [rdx]
0x00000000004c36b8 : js 0x4c3679 ; clc ; call qword ptr [rdi]
0x00000000004c5969 : js 0x4c5971 ; add byte ptr [rbx + rax*4], ah ; cli ; call rax
0x000000000041fb4d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004a3159 : lahf ; clc ; call qword ptr [rax]
0x000000000045c69a : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004ba603 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000473bfb : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042b6dd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440398 : lahf ; ret
0x0000000000485bec : lahf ; ret 0x2941
0x000000000040fa8e : lahf ; ret 0x3841
0x000000000044039e : lahf ; ret 0x3845
0x00000000004b7e5d : lahf ; ret 0x871e
0x0000000000483dc1 : lahf ; ret 0xb60f
0x0000000000486858 : lahf ; ret 0xd129
0x00000000004868cf : lahf ; ret 0xd629
0x00000000004867e1 : lahf ; ret 0xd729
0x000000000043e139 : lahf ; ret 0xea81
0x000000000049b596 : lahf ; ret 0xf45
0x00000000004bda61 : lahf ; std ; jmp qword ptr [rax - 0x1f00025f]
0x000000000042bd6d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdff3 : lcall ptr [rax - 0x3f0001fd] ; add edi, esi ; call rax
0x0000000000410e93 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000048804a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c983 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004517a2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410cdd : lcall ptr [rbx + 0x5d] ; ret
0x0000000000474686 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041fdc3 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000434e16 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004133c4 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000004159db : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046aeeb : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x000000000043fcbf : lea eax, dword ptr [rax + rax] ; ret
0x0000000000425e04 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000425e14 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000425de4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000004159dc : lea eax, dword ptr [rax - 1] ; ret
0x00000000004c6dfd : lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; sti ; jmp qword ptr [rdx]
0x00000000004657dd : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043d794 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043b80c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043b821 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043b83f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043b85f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043b882 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043b8a1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043b8c1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043b8e1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043b904 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043b929 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043b947 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043b967 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043b983 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043b9a3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043b9c3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043b9e3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043b75d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043b77d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043b79f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043b7bf : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043b7df : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043b7f9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043b6a7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043b6ba : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043b6c5 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043b6d8 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043b6ed : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043b70b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043b717 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043b72a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043b73f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000425e39 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000425e49 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000425d33 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042cc07 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000004656d9 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000477ef8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x477f11 ; ret
0x000000000043b693 : lea eax, dword ptr [rdi] ; ret
0x000000000043ac7d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043ac9d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043acbf : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043acdf : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043acff : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043ab8f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043abb7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043abcd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043abe5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043abfb : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ac0d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043ac2b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043ab37 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043ac3d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043ac5d : lea eax, dword ptr [rdx + 9] ; ret
0x00000000004159ce : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043e20c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000416eb6 : lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043aba5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426a27 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x00000000004234f7 : lea eax, dword ptr [rip + 0x14853] ; ret
0x0000000000425e99 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x0000000000426473 : lea eax, dword ptr [rip + 0x17647] ; ret
0x0000000000421084 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x0000000000425e7d : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426b43 : lea eax, dword ptr [rip + 0x67] ; ret
0x0000000000425e91 : lea eax, dword ptr [rip + 0x8449] ; ret
0x00000000004212d7 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426b96 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c4c15 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c5c0 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x000000000047bc5f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8711 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049c765 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004666e0 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000469742 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x469753
0x000000000042f9b7 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043af2e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000045277f : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000463d61 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a180 : lea ecx, dword ptr [rdx] ; jmp 0x47a1d6
0x000000000047fc90 : lea ecx, dword ptr [rdx] ; jmp 0x47fce6
0x000000000046ac67 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464c97 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000464d70 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004667f5 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466b10 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466a0e : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046f6c6 : lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000040214c : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e03c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000426616 : lea edi, dword ptr [rdi + 0x10] ; jne 0x426608 ; mov rax, rdi ; ret
0x000000000042c076 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42c066 ; ret
0x000000000047b5cc : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047b972 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047b77f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x000000000041628b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000464f40 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fa84 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000464aed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000421366 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042fe78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000463ca1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464c92 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046689d : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466f00 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c4e6 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x0000000000485cac : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cae5 : lea esi, dword ptr [rax*8 + 0x4b7ba8] ; call 0x478db9
0x0000000000466a13 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004666db : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004667fa : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046b00d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f471 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000421365 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e03b : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044c5bf : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042f9b6 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047a17f : lea r9, qword ptr [rdx] ; jmp 0x47a1d7
0x000000000047fc8f : lea r9, qword ptr [rdx] ; jmp 0x47fce7
0x0000000000464c96 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000464d6f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000425e03 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000425e13 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425de3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004657dc : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043d793 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043b80b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b820 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b83e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b85e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b881 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b8a0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b8c0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b8e0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b903 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b928 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b946 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b966 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b982 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b9a2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b9c2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b9e2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b75c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b77c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b79e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b7be : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b7de : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b7f8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b6a6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b6b9 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b6c4 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b6d7 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b6ec : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b70a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b716 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b729 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b73e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000425e38 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425e48 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425d32 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042cc06 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000004656d8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043b692 : lea rax, qword ptr [rdi] ; ret
0x000000000043ac7c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043ac9c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043acbe : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043acde : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043acfe : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043ab8e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043abb6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043abcc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043abe4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043abfa : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043ac0c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043ac2a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043ab36 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043ac3c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043ac5c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043aba4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426a26 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x00000000004234f6 : lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000425e98 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000426472 : lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000421083 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x0000000000425e7c : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426b42 : lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000425e90 : lea rax, qword ptr [rip + 0x8449] ; ret
0x00000000004212d6 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426b95 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049c764 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043af2d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004666df : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000469741 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x469754
0x000000000046ac66 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046f6c5 : lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000040214b : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000426615 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x426609 ; mov rax, rdi ; ret
0x000000000042c075 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c067 ; ret
0x000000000047b5cb : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047b971 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047b77e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042fa83 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042fe77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000466eff : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c4e5 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466a12 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004666da : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004667f9 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046b00c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000487ed6 : leave ; cmove rax, rdx ; ret
0x000000000043d570 : leave ; jne 0x43d563 ; ret
0x000000000043d620 : leave ; jne 0x43d613 ; ret
0x000000000043d8e0 : leave ; jne 0x43d8d7 ; sub rax, 1 ; ret
0x0000000000466c4a : leave ; jne 0x466c07 ; mov rax, rdx ; ret
0x000000000046aec2 : leave ; jne 0x46ae76 ; xor eax, eax ; ret
0x0000000000499cd8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x00000000004447f0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000040099f : leave ; ret
0x00000000004a006b : leave ; ret 0x22
0x00000000004bdb19 : leave ; std ; jmp rdx
0x00000000004bdb15 : leave ; std ; push qword ptr [rax - 0x37] ; std ; jmp rdx
0x0000000000413da1 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004111ad : ljmp ptr [rip + 0x29480005] ; ret
0x000000000040f8d0 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a475 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e6be : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fb0f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004231c0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043cef0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b3ee : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a3185 : lodsb al, byte ptr [rsi] ; clc ; push qword ptr [rax - 0x53] ; clc ; call qword ptr [rax]
0x00000000004be384 : lodsb al, byte ptr [rsi] ; cmp esi, esp ; call qword ptr [rdx]
0x000000000047a7d0 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004780cf : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4780e9 ; ret
0x00000000004bad9d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004bda79 : lodsb al, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x00000000004c656c : lodsb al, byte ptr [rsi] ; test byte ptr [rax], al ; add byte ptr [rax + 0x10], ah ; sti ; jmp rsi
0x00000000004c126c : lodsb al, byte ptr [rsi] ; xor dword ptr [rax], eax ; add al, al ; idiv dil ; ret
0x000000000046aec4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a3189 : lodsd eax, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x0000000000495050 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478d52 : lodsd eax, dword ptr [rsi] ; ret
0x00000000004053d5 : loop 0x4053dd ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041bbba : loop 0x41bbc9 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x417e19
0x000000000042e2cd : loop 0x42e305 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004346fa : loop 0x4346f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004346f9 : loop 0x4346f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c64b : loop 0x45c5d8 ; ret
0x0000000000474051 : loop 0x47405b ; call 0x40031c
0x0000000000475e6e : loop 0x475e31 ; ret
0x0000000000476052 : loop 0x47605d ; add rdx, rax ; jmp 0x47606d
0x00000000004a3335 : loop 0x4a3335 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a3355 : loop 0x4a3351 ; call qword ptr [rax]
0x00000000004a3375 : loop 0x4a3371 ; jmp rax
0x00000000004bb13a : loop 0x4bb18f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004054c9 : loope 0x4054d1 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004054c8 : loope 0x4054d2 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000042c612 : loope 0x42c669 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000043466a : loope 0x434665 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434669 : loope 0x434666 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043bc1b : loope 0x43bc25 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043e30e : loope 0x43e305 ; ret
0x000000000044403f : loope 0x44404a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046645e : loope 0x466473 ; je 0x466484 ; ret
0x000000000046a88c : loope 0x46a819 ; ret 0xf631
0x0000000000478be7 : loope 0x478c39 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478c18 : loope 0x478c6b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000478c8d : loope 0x478ce0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049e9d6 : loope 0x49ea35 ; ret
0x00000000004a33d5 : loope 0x4a33d1 ; call qword ptr [rax]
0x00000000004a33d4 : loope 0x4a33d2 ; call qword ptr [rax]
0x00000000004c619d : loope 0x4c619b ; call rsi
0x0000000000400cb0 : loopne 0x400cc7 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000405559 : loopne 0x405561 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004055c1 : loopne 0x4055c9 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004127b9 : loopne 0x412820 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412867 : loopne 0x4128ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004143b6 : loopne 0x41441a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416a85 : loopne 0x416ae9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004206fb : loopne 0x42075d ; pop rbp ; pop r12 ; ret
0x000000000042634d : loopne 0x4263b1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004263e2 : loopne 0x426446 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c8cd : loopne 0x42c925 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042fed1 : loopne 0x42fee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fed0 : loopne 0x42fee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430021 : loopne 0x430038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430020 : loopne 0x430039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430171 : loopne 0x430188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430170 : loopne 0x430189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004302c1 : loopne 0x4302d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004302c0 : loopne 0x4302d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430411 : loopne 0x430428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430410 : loopne 0x430429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430561 : loopne 0x430578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430560 : loopne 0x430579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306b1 : loopne 0x4306c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306b0 : loopne 0x4306c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307ff : loopne 0x430816 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307fe : loopne 0x430817 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430951 : loopne 0x430968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430950 : loopne 0x430969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430aa1 : loopne 0x430ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430aa0 : loopne 0x430ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bf1 : loopne 0x430c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bf0 : loopne 0x430c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d41 : loopne 0x430d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d40 : loopne 0x430d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e91 : loopne 0x430ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e90 : loopne 0x430ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fe1 : loopne 0x430ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fe0 : loopne 0x430ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431131 : loopne 0x431148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431130 : loopne 0x431149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432572 : loopne 0x43253f ; jp 0x4325fb ; jp 0x43256e ; ret
0x000000000043da95 : loopne 0x43dae6 ; sub eax, edx ; vzeroupper ; ret
0x000000000043da94 : loopne 0x43dae7 ; sub eax, edx ; vzeroupper ; ret
0x000000000043ffac : loopne 0x43ff93 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43ffbc ; call rbx
0x00000000004423ca : loopne 0x44241d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004426a8 : loopne 0x4426bd ; cmp eax, 4 ; je 0x4426b7 ; ret
0x0000000000444042 : loopne 0x4440a2 ; pop rbp ; ret
0x000000000045a5bd : loopne 0x45a54a ; ret 0xe680
0x0000000000461b8b : loopne 0x461bef ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000461f43 : loopne 0x461fa5 ; pop rbp ; pop r12 ; ret
0x0000000000461f6d : loopne 0x461fcf ; pop rbp ; pop r12 ; ret
0x000000000046262b : loopne 0x46268d ; pop rbp ; pop r12 ; ret
0x000000000046269d : loopne 0x4626ff ; pop rbp ; pop r12 ; ret
0x0000000000463c6e : loopne 0x463c07 ; mov eax, 0xffffffff ; ret
0x000000000047872d : loopne 0x478736 ; sub eax, 1 ; ret
0x000000000047abe4 : loopne 0x47aba4 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x00000000004a31c4 : loopne 0x4a3186 ; clc ; call rax
0x00000000004a3344 : loopne 0x4a3332 ; clc ; jmp rax
0x00000000004a3348 : loopne 0x4a3338 ; clc ; jmp rax
0x00000000004a3351 : loopne 0x4a3351 ; push qword ptr [rax] ; loop 0x4a3355 ; call qword ptr [rax]
0x00000000004a3371 : loopne 0x4a3371 ; inc dword ptr [rax] ; loop 0x4a3375 ; jmp rax
0x00000000004a3370 : loopne 0x4a3372 ; inc dword ptr [rax] ; loop 0x4a3376 ; jmp rax
0x00000000004a3a1c : loopne 0x4a3a9c ; stc ; push rax ; ja 0x4a3a23 ; call qword ptr [rax]
0x00000000004a3a74 : loopne 0x4a3af9 ; stc ; inc dword ptr [rax] ; jge 0x4a3a7b ; jmp qword ptr [rax]
0x00000000004a3a98 : loopne 0x4a3b1e ; stc ; inc dword ptr [rax] ; jle 0x4a3a9f ; jmp qword ptr [rax]
0x00000000004a3ab8 : loopne 0x4a3b3f ; stc ; inc dword ptr [rax] ; jg 0x4a3abf ; jmp qword ptr [rax]
0x00000000004b8714 : loopne 0x4b86f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bda68 : loopne 0x4bda10 ; std ; jmp qword ptr [rax]
0x00000000004bda78 : loopne 0x4bda29 ; std ; jmp qword ptr [rax]
0x00000000004bda88 : loopne 0x4bda42 ; std ; jmp qword ptr [rax]
0x00000000004b812a : mov ah, 0x13 ; ret
0x00000000004a3630 : mov ah, 0x1c ; stc ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004c0f74 : mov ah, 0x2e ; add byte ptr [rax], al ; mov dh, dh ; cmc ; call qword ptr [rdx]
0x00000000004c5d74 : mov ah, 0x7c ; add byte ptr [rax], al ; clc ; mov dl, 0xfa ; call rdx
0x00000000004b85d0 : mov ah, 0xa5 ; ret
0x000000000046bc38 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004c757c : mov ah, 6 ; cld ; jmp qword ptr [rax]
0x00000000004bea74 : mov ah, 9 ; add byte ptr [rax], al ; pop rax ; push rsp ; call qword ptr [rbx]
0x00000000004b7f24 : mov ah, bl ; push rsi ; ret
0x0000000000499e2a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c123 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458408 : mov al, 0 ; add cl, ch ; ret
0x00000000004a34bc : mov al, 0x1b ; stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004c4ec0 : mov al, 0x1d ; cli ; jmp qword ptr [rax]
0x00000000004a3694 : mov al, 0x1f ; stc ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x000000000049bf41 : mov al, 0x48 ; add esp, 0x18 ; ret
0x0000000000443428 : mov al, 0x4e ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004a39d4 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a39db ; call rax
0x00000000004a3a14 : mov al, 0x77 ; stc ; call rax
0x00000000004a3a38 : mov al, 0x78 ; stc ; call rax
0x00000000004a3a68 : mov al, 0x7c ; stc ; inc eax ; jl 0x4a3a6f ; call rax
0x00000000004a3a90 : mov al, 0x7d ; stc ; inc eax ; jge 0x4a3a97 ; jmp rax
0x00000000004a3150 : mov al, 0x9d ; clc ; call rax
0x00000000004a3170 : mov al, 0xa6 ; clc ; call rax
0x00000000004a32ac : mov al, 0xc1 ; clc ; push qword ptr [rax] ; ret 0xfff8
0x00000000004a32b4 : mov al, 0xc2 ; clc ; inc dword ptr [rax - 0x3d] ; clc ; call rax
0x00000000004bdaa8 : mov al, 0xc2 ; std ; inc eax ; ret 0xfffd
0x00000000004ba3d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004a370c : mov al, 0xf ; stc ; jmp qword ptr [rsi]
0x00000000004c1555 : mov al, 0xf6 ; jmp qword ptr [rsi]
0x00000000004bf611 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c537d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004a3079 : mov al, bh ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004c6b0d : mov al, byte ptr [rax] ; add byte ptr [rax], dh ; xor bl, bh ; call rsp
0x0000000000439416 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439434 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043aba0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004393f0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040f8cf : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439400 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435431 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044f2f8 : mov bh, 0x27 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000044cd8b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044c90e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043bab8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004681e0 : mov bh, 0x84 ; adc bl, byte ptr [rsi - 0x3c] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004b9404 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004c3621 : mov bh, 0xf8 ; call qword ptr [rdi]
0x00000000004c2328 : mov bh, 1 ; ret
0x00000000004bab13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004468b8 : mov bh, dl ; push rsi ; add byte ptr [rax - 0x7f], cl ; ret 0x56e0
0x000000000043d3ae : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000466c4c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047df69 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba4e3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004bda85 : mov bl, 0xfd ; jmp rax
0x000000000041c820 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00000000004116bc : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000041c821 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000446fd8 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004116bd : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047b782 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c5c3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c1410 : mov byte ptr [rcx], al ; ret
0x00000000004c4db8 : mov byte ptr [rcx], bl ; cli ; jmp rdx
0x000000000043b808 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b178 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b87e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b1ce : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b900 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b250 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b6b6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b096 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043b6d2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b0b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b0f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004314fb : mov byte ptr [rdi - 1], dl ; ret
0x000000000043267c : mov byte ptr [rdi], cl ; ret
0x000000000043b690 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b070 : mov byte ptr [rdi], dh ; ret
0x00000000004354a3 : mov byte ptr [rdi], dl ; ret
0x000000000043abc9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000439419 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043abf7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000439437 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043aba2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004393f2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440af4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049a7e0 : mov byte ptr [rip + 0x231379], 8 ; ret
0x0000000000400914 : mov byte ptr [rip + 0x2ca245], 1 ; ret
0x0000000000451f73 : mov byte ptr [rsi], al ; jne 0x451f57 ; mov rax, rsi ; ret
0x0000000000451eef : mov byte ptr [rsi], dl ; jne 0x451edf ; mov rax, rsi ; ret
0x000000000047a677 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b7f22 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9263 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba5ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bafaa : mov ch, 0xab ; ret
0x00000000004bda89 : mov ch, 0xfd ; jmp qword ptr [rax]
0x0000000000420fdc : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f236 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425d9b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004685db : mov cl, 0x32 ; add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000417567 : mov cl, 0x35 ; ret
0x0000000000441cdb : mov cl, 0xc0 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3200 : mov cl, 0xc4 ; clc ; inc dword ptr [rcx - 0x3b] ; clc ; jmp rcx
0x00000000004bda81 : mov cl, 0xfd ; jmp qword ptr [rax - 0x1f00024d]
0x000000000044f20b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000428db5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000421364 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba3d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000043267a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046645b : mov cl, dl ; and cl, 0xf ; je 0x466487 ; ret
0x00000000004ba68c : mov cs, edi ; ret 0x8b36
0x000000000042b1ee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b090 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411b9e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414ea0 : mov dh, 0 ; pop rbx ; ret
0x0000000000412e1b : mov dh, 0 ; ret
0x00000000004354a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000425f74 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040db40 : mov dh, 0x17 ; test dl, dl ; jne 0x40db26 ; ret
0x00000000004a3504 : mov dh, 0x1a ; stc ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x0000000000461cde : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040da75 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462313 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043cf81 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043cf71 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043cf41 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043cf61 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043cf51 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448960 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000499f04 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b93c2 : mov dh, 0x4e ; ret 0x474c
0x000000000046d675 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004628b9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043cf85 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043cf75 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043cf45 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043cf55 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d117 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d09a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000046e197 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044eb1f : mov dh, 0xb2 ; fcomp dword ptr [rsi + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044f4ad : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047ad4d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047aaf7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aa26 : mov dh, 0xc0 ; ret
0x000000000043e188 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e1b0 : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000413cde : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ba604 : mov dh, 0xc7 ; ret 0xe71f
0x0000000000425f9a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b1ff : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422711 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e314 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466632 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049cc8a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414b3e : mov dh, 2 ; pop rbx ; ret
0x0000000000411bb1 : mov dh, 2 ; ret
0x000000000042e311 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000425f71 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422714 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f894 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e30c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004c0f78 : mov dh, dh ; cmc ; call qword ptr [rdx]
0x00000000004a3568 : mov dl, 0x1d ; stc ; inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x000000000044eb20 : mov dl, 0xd8 ; pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004c5d79 : mov dl, 0xfa ; call rdx
0x00000000004bdaa4 : mov dl, al ; std ; push qword ptr [rax - 0x3f00023e] ; ret 0xfffd
0x0000000000431580 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004a3490 : mov ds, word ptr [rcx] ; stc ; call qword ptr [rax]
0x000000000047c664 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b30c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004189a3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000469db3 : mov dword ptr [r12], 1 ; jmp 0x469d88
0x0000000000400cb2 : mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004665a7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435626 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435611 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463839 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463879 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004647d9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000046383d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464877 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004468c8 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004468cb : mov dword ptr [rax + 0x54], edx ; ret
0x000000000041548a : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442b76 : mov dword ptr [rax + 8], edx ; ret
0x000000000042657e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049cc53 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000004802b2 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044d948 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041bd97 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c6a8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a2c8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000400cb3 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000463d65 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000486e88 : mov dword ptr [rax], edi ; jmp 0x486e51
0x000000000047aca5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483683 : mov dword ptr [rax], edx ; jmp 0x48364c
0x0000000000463ca5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047ac99 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464af1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461716 : mov dword ptr [rbp - 0x10d0], edx ; call 0x41d9f8
0x000000000045637c : mov dword ptr [rbp - 0x4d8], edx ; call 0x442598
0x0000000000454d48 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x000000000040305a : mov dword ptr [rbp - 0x68], eax ; call 0x44f335
0x00000000004722a1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x000000000047248a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x00000000004597af : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471a50 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491441 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004118e2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004118e1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d241 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478325 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004119b7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a6a8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a67e
0x000000000047835e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047435f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004121b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004782c3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487c65 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004149d3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c6a3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f4af : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414a4e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004161d1 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413032 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004638c4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004646d8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411947 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000414d05 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d257 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000414e9c : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047dd46 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000414dac : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488389 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004647dc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004149d6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004665a8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435627 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435612 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435601 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000046af4c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004851a9 : mov dword ptr [rcx], eax ; jmp 0x485172
0x00000000004c73aa : mov dword ptr [rcx], eax ; ret
0x000000000049c06a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000417262 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043b81d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b85b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b8dd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b1cb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b24d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b18d : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b290 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b2b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b271 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043b943 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b293 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414963 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043b925 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b963 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b275 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046722d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470a35 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470a07 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042c841 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414993 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000418580 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c0c1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043b89d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b1ed : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043b83b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b8bd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b1ab : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004352e5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435128 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435275 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004350b8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b707 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435205 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435048 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b0d7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000418583 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043b6e9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000434fd8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b0c9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043b79b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000434f68 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b13b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043b7bb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000434ef8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b14b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043b759 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b7db : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000434e88 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b119 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414967 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000478d24 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043b779 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b73b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000047a0e4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b10b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000432673 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x0000000000426585 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000042658e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c079 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431245 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431283 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478c8f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004315cc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434938 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317ac : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004348b8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043199c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434838 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b6d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004347a9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431d6d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434719 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f6d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434689 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043194d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431765 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431949 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431d29 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000004313ff : mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d26 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431f26 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432126 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431249 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000431287 : mov dword ptr [rdi - 8], edx ; ret
0x00000000004313fc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004314f8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431444 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349b8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478c14 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478d1e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c286 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043b6d5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b727 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b6b4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b094 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043b705 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b0d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b757 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b117 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b777 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b127 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000426583 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043da19 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b138 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b148 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b158 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000042658b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b0c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b108 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043da26 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c617 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400548 : mov dword ptr [rdi], ecx ; ret
0x000000000043b6a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b6c2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b714 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435194 : mov dword ptr [rdi], edx ; ret
0x000000000043560f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000043265b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a28d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004355fe : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043263e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435623 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000432670 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a2b3 : mov dword ptr [rdi], esi ; ret
0x000000000040f893 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042c8cf : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b30d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043ac27 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000439457 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043ac09 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439449 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043acbb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043ac39 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000439469 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043acdb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043ac59 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000439479 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043ac79 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043acfb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000439489 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043ac99 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043ab8b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004393db : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416326 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047a6b4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046aacf : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000499d0c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041ab8c : mov dword ptr [rdx], eax ; jmp 0x41a9ab
0x000000000043abb4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043abe2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ab34 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000412161 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dbca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a28f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004129c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000439384 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047ac85 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000416292 : mov dword ptr [rdx], eax ; ret
0x0000000000463b86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049e9cf : mov dword ptr [rip + 0x22cbab], ebx ; jne 0x49e9c1 ; pop rbx ; ret
0x000000000044f2f5 : mov dword ptr [rip + 0x27b73d], edx ; je 0x44f309 ; ret
0x0000000000443f76 : mov dword ptr [rip + 0x28501c], edx ; pop rbx ; ret
0x00000000004014ea : mov dword ptr [rip + 0x2c7ba0], eax ; xor eax, eax ; ret
0x00000000004006b5 : mov dword ptr [rip + 0x2c99f5], eax ; pop rbp ; pop r12 ; ret
0x000000000049dd97 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043da29 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043da1b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046dd81 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c0ab : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000473d72 : mov dword ptr [rsi], eax ; ret
0x000000000049c7b3 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b36b : mov dword ptr [rsp + 0x10], edx ; call rax
0x00000000004189a4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b366 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047ba60 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047bc63 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047bbb2 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x0000000000440236 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b422 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000477f6e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6ca140 ; call rax
0x0000000000491676 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f425 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000469db4 : mov dword ptr [rsp], 1 ; jmp 0x469d87
0x00000000004098f9 : mov dword ptr [rsp], eax ; call 0x405bf5
0x000000000041b427 : mov dword ptr [rsp], ecx ; call rdx
0x000000000047c663 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044d947 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c6a7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a2c7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000486e87 : mov dword ptr fs:[rax], edi ; jmp 0x486e52
0x0000000000483682 : mov dword ptr fs:[rax], edx ; jmp 0x48364d
0x000000000046ab1c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004851a8 : mov dword ptr fs:[rcx], eax ; jmp 0x485173
0x000000000047a6b3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412160 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dbc9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000043265a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431760 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b080 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000040099a : mov eax, 0 ; leave ; ret
0x000000000043e259 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000420da4 : mov eax, 0x16 ; je 0x420db7 ; ret
0x0000000000420f40 : mov eax, 0x16 ; ret
0x000000000043e252 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043e24b : mov eax, 0x30 ; pop rbx ; ret
0x000000000043e244 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426439 : mov eax, 0x4354c0 ; ret
0x0000000000425b0c : mov eax, 0x43d480 ; cmove rax, rdx ; ret
0x00000000004b851b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000499e53 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x00000000004269ea : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043e23d : mov eax, 0x60 ; pop rbx ; ret
0x000000000046a900 : mov eax, 0x66 ; syscall ; ret
0x000000000046a920 : mov eax, 0x68 ; syscall ; ret
0x000000000046a910 : mov eax, 0x6b ; syscall ; ret
0x000000000046a930 : mov eax, 0x6c ; syscall ; ret
0x0000000000417a53 : mov eax, 0x6c9800 ; ret
0x000000000046f6c7 : mov eax, 0x6ca1e0 ; call rdx
0x000000000043e236 : mov eax, 0x80 ; pop rbx ; ret
0x0000000000474cde : mov eax, 0x83004bc3 ; ret
0x0000000000410cf1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000466fc0 : mov eax, 0xc9 ; syscall ; ret
0x0000000000442612 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000041fdc6 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000410e8f : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000045179e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410cd9 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411951 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dbcc : mov eax, 0xffffffff ; ret
0x000000000047a2ad : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415302 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e78b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000443f36 : mov eax, 1 ; ret
0x000000000049c8f0 : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004664c1 : mov eax, 2 ; ret
0x000000000049e463 : mov eax, 3 ; je 0x49e478 ; ret
0x00000000004664d1 : mov eax, 3 ; ret
0x000000000049c8e0 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000004664e1 : mov eax, 4 ; ret
0x00000000004664f1 : mov eax, 5 ; ret
0x0000000000466501 : mov eax, 6 ; ret
0x0000000000466511 : mov eax, 7 ; ret
0x000000000049c8c1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e22f : mov eax, 8 ; pop rbx ; ret
0x000000000049e475 : mov eax, 8 ; ret
0x0000000000463bbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414a8c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410a03 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414c68 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000414f88 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000004878e3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004152ac : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464c24 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047e7dd : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478141 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000473d4a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x473d29 ; ret
0x000000000044f33f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455122 : mov eax, dword ptr [rax*8 + 0x4b2a80] ; jmp rax
0x0000000000455173 : mov eax, dword ptr [rax*8 + 0x4b2b80] ; jmp rax
0x0000000000457263 : mov eax, dword ptr [rax*8 + 0x4b2c80] ; jmp rax
0x0000000000455d96 : mov eax, dword ptr [rax*8 + 0x4b2f80] ; jmp rax
0x000000000045ff71 : mov eax, dword ptr [rax*8 + 0x4b3400] ; jmp rax
0x0000000000461295 : mov eax, dword ptr [rax*8 + 0x4b3500] ; jmp rax
0x0000000000461779 : mov eax, dword ptr [rax*8 + 0x4b3600] ; jmp rax
0x0000000000460007 : mov eax, dword ptr [rax*8 + 0x4b3900] ; jmp rax
0x000000000049c006 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000499d09 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474689 : mov eax, dword ptr [rax] ; ret
0x00000000004406cc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445137 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475b95 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471841 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aca1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439454 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000439466 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000439476 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000439486 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000439496 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042905a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042a932 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043abe0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000439420 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ab31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000439381 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043abb1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439401 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464a6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004162a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004162c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0438 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a044f ; call rax
0x0000000000464c21 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004165d1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a488 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a4a0 ; ret
0x000000000049c011 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c091 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c0d1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c131 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c121 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c0e1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044d95c : mov eax, dword ptr [rdi*8 + 0x6caa40] ; ret
0x00000000004780d1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4780e7 ; ret
0x000000000041628f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049de35 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49de47 ; ret
0x000000000049de50 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49de67 ; ret
0x000000000049e070 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e087 ; ret
0x000000000043e307 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e2f9 ; ret
0x0000000000428db6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000410980 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000463d67 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000040fec0 : mov eax, dword ptr [rdx] ; ret
0x0000000000416281 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x416280 ; ret
0x0000000000488350 : mov eax, dword ptr [rip + 0x243f0a] ; ret
0x0000000000473d6b : mov eax, dword ptr [rip + 0x257ff7] ; mov qword ptr [rsi], rax ; ret
0x0000000000473d0a : mov eax, dword ptr [rip + 0x258060] ; ret
0x000000000044c811 : mov eax, dword ptr [rip + 0x27eee1] ; ret
0x00000000004454a1 : mov eax, dword ptr [rip + 0x286e21] ; ret
0x00000000004165b1 : mov eax, dword ptr [rip + 0x2b2b09] ; ret
0x000000000049c92c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000473bfc : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049c961 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000463ca7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c106 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400bf0 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044713a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447a9d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e037 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047855c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004783dd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e3c4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474688 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041c995 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a2a0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041c825 : mov eax, eax ; pop rbx ; ret
0x0000000000432755 : mov eax, eax ; ret
0x0000000000477672 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041292a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000462e7b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004634c9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046349c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f5c3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410cf6 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047a223 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000041309d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474958 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465cf9 : mov eax, ebx ; jmp 0x465b53
0x000000000040f929 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa0e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fb3e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004119bb : mov eax, ebx ; pop rbx ; ret
0x000000000047a0e7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046ae75 : mov eax, ecx ; jne 0x46aecd ; ret
0x000000000046d4f3 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d4c9
0x000000000041bd9e : mov eax, ecx ; ret
0x00000000004a307d : mov eax, edi ; call qword ptr [rax]
0x00000000004165e1 : mov eax, edi ; ret
0x0000000000487c0e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047ae13 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041daa8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417265 : mov eax, edx ; add rsp, 8 ; ret
0x000000000047238f : mov eax, edx ; call rax
0x000000000047c63b : mov eax, edx ; jle 0x47c64d ; ret
0x0000000000462c3b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c08a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e432 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041764c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f7b0 : mov eax, edx ; pop rbx ; ret
0x0000000000426b09 : mov eax, edx ; ret
0x00000000004786e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046a6f3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487a38 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb24 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000451ef4 : mov eax, esi ; ret
0x000000000043daab : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004143b5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004206fa : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004143b4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045a29f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a1d9 : mov eax, r8d ; ret
0x0000000000477671 : mov eax, r8d ; sub eax, ecx ; ret
0x00000000004678d7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc11a
0x00000000004a31c1 : mov ebp, 0xbde0fff8 ; clc ; call rax
0x00000000004ae184 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b79dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465648 : mov ebp, 0xf80148c0 ; ret
0x00000000004658cc : mov ebp, 0xf80148c6 ; ret
0x00000000004b9146 : mov ebp, 0xfb67d10d ; ret
0x00000000004552dc : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455861 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045cdaf : mov ebp, 0xfffffb60 ; call rax
0x000000000047602f : mov ebp, 0xffffff78 ; call rax
0x000000000049c3aa : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000042025f : mov ebp, eax ; call 0x41c4f4
0x000000000043fd27 : mov ebp, eax ; call rax
0x00000000004406c9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004786ed : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d2e7 : mov ebp, edi ; mov r15, rax ; jmp 0x47d303
0x0000000000440acf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000040214d : mov ebx, 0x80 ; call rax
0x0000000000442644 : mov ebx, 0xafb8341 ; je 0x442653 ; ret
0x00000000004b79db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000445a76 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445a59 ; jmp 0x445a4b
0x0000000000476819 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476b88 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x0000000000476c9a : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ad6 : mov ebx, eax ; call rax
0x000000000044f83f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044ed36 : mov ebx, edi ; test rax, rax ; je 0x44ed46 ; call rax
0x00000000004bee7c : mov ecx, 0x41380e0a ; ret
0x00000000004b79d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000043560c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042f9b5 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464bfb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000428db3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000431d23 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431f23 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432123 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b0b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b0f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004352e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435273 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435203 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435125 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435045 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434fd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434f65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434ef5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434e85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b091 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047325d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478237 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004781c5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000466d88 : mov ecx, edi ; call rbx
0x000000000046d4f6 : mov ecx, edi ; mov r15, rax ; jmp 0x46d4c6
0x0000000000432771 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432774 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004152a7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000044476b : mov ecx, esi ; call rbx
0x0000000000473be3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473bc8 ; ret
0x0000000000441e22 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x00000000004423a0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000004419dd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041abcc : mov edi, 0x4a201c ; call 0x416e07
0x000000000041abb3 : mov edi, 0x4a204b ; call 0x416e07
0x00000000004754fc : mov edi, 0x4b5d83 ; call 0x401727
0x000000000040090c : mov edi, 0x4be0c0 ; call rax
0x0000000000470a76 : mov edi, 0x6ca100 ; call rax
0x0000000000470ae2 : mov edi, 0x6ca100 ; pop rbx ; pop rbp ; jmp rax
0x00000000004780ff : mov edi, 0x6ca140 ; add rsp, 8 ; jmp rax
0x0000000000443c45 : mov edi, 0x6ca140 ; call rax
0x000000000047661f : mov edi, 0x6ca140 ; jmp rax
0x0000000000400890 : mov edi, 0x6cab50 ; jmp rax
0x0000000000402ec5 : mov edi, 0x6cafe0 ; call rax
0x0000000000402bcf : mov edi, 0x6cafe0 ; call rbx
0x0000000000402c76 : mov edi, 0x6cb060 ; call rax
0x000000000040351c : mov edi, 0x6cb0a0 ; call r15
0x00000000004034d4 : mov edi, 0x6cb0a0 ; call rax
0x0000000000445541 : mov edi, 0x6cb6d0 ; call rax
0x000000000043e3fa : mov edi, 0x6cb720 ; call rax
0x0000000000402bc8 : mov edi, 0x6cb720 ; call rbx
0x000000000047a862 : mov edi, 0x6cb9c0 ; call rax
0x000000000047a98d : mov edi, 0x6cb9c4 ; call rdx
0x000000000047fa59 : mov edi, 0x8b410024 ; adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000441e06 : mov edi, 0x8b48fffd ; jge 0x441e14 ; call rbx
0x0000000000441df8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x0000000000441dea : mov edi, 0x8b49fffd ; jge 0x441df8 ; call rbx
0x00000000004a31bd : mov edi, 0xbd30fff8 ; clc ; jmp rax
0x00000000004a31a9 : mov edi, 0xbff0fff8 ; clc ; call qword ptr [rsi]
0x00000000004a321d : mov edi, 0xc066fff8 ; clc ; jmp rsi
0x000000000049bd5a : mov edi, 1 ; call r14
0x0000000000401607 : mov edi, 1 ; call rax
0x000000000049c64c : mov edi, 1 ; jmp rax
0x00000000004098f5 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405bf9
0x000000000040991c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405bf9
0x0000000000409906 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405bf9
0x0000000000440233 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cdae : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047602e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c30e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466635 : mov edi, dword ptr [rbp] ; call r12
0x000000000040dfbd : mov edi, dword ptr [rbp] ; call r14
0x000000000043fe8a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000476bb8 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000043fe38 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000464be8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464bb4
0x00000000004b9406 : mov edi, dword ptr [rdx] ; ret
0x000000000047aba8 : mov edi, dword ptr [rip + 0x250e16] ; call rax
0x000000000047aa6b : mov edi, dword ptr [rip + 0x250f53] ; jmp rax
0x000000000043fdf7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000446e41 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044031f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447135 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447a98 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b68a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x0000000000447e7e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004475b5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x00000000004482e0 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446c42 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447669 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044aeca : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004494e8 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449928 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448868 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448c0f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400b97 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400beb : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000440280 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049dc3a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x00000000004085d2 : mov edi, eax ; call 0x41dd98
0x0000000000420f4a : mov edi, eax ; call rcx
0x000000000046d4f9 : mov edi, eax ; jmp 0x46d4c3
0x000000000047d2ea : mov edi, eax ; jmp 0x47d300
0x0000000000451eed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x451ee1 ; mov rax, rsi ; ret
0x0000000000403058 : mov edi, eax ; mov dword ptr [rbp - 0x68], eax ; call 0x44f337
0x000000000042025c : mov edi, eax ; mov rbp, rax ; call 0x41c4f7
0x00000000004202e8 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049ea3c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040fd8d : mov edi, ebp ; call 0x42c004
0x000000000047e0c6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e1fc : mov edi, ebp ; call r14
0x000000000044f887 : mov edi, ebp ; call r15
0x000000000041e866 : mov edi, ebp ; call rax
0x0000000000440b20 : mov edi, ebp ; call rbx
0x000000000044fe04 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f1c7 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bbbf : mov edi, ebx ; call 0x417e14
0x000000000044c7c7 : mov edi, ebx ; call r12
0x0000000000444a3d : mov edi, ebx ; call r14
0x00000000004625e9 : mov edi, ebx ; call r8
0x0000000000411f77 : mov edi, ebx ; call rax
0x0000000000445601 : mov edi, ebx ; jmp 0x4455cb
0x000000000049e863 : mov edi, ebx ; jne 0x49e855 ; pop rbx ; ret
0x0000000000414af4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414c64 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041185a : mov edi, edi ; call 0x400349
0x0000000000441ad7 : mov edi, edi ; call 0x41dd94
0x0000000000410365 : mov edi, edi ; call rax
0x0000000000440b64 : mov edi, edi ; call rbx
0x0000000000464f44 : mov edi, edi ; xor r8d, r8d ; call rbx
0x0000000000451f71 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x451f59 ; mov rax, rsi ; ret
0x0000000000441b1c : mov edi, esi ; call 0x41dd94
0x000000000045c696 : mov edi, esi ; call 0x4265a9
0x000000000044508e : mov edi, esi ; call r15
0x0000000000440b44 : mov edi, esi ; call rbx
0x000000000044f842 : mov edi, esp ; call r15
0x0000000000440afb : mov edi, esp ; call rbx
0x0000000000466d85 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445134 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004731a9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004731a8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042642f : mov edx, 0x42f930 ; cmove rax, rdx ; ret
0x000000000049dd92 : mov edx, 0x480022df ; mov dword ptr [rsi + 0x28], eax ; ret
0x00000000004424c6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004bda91 : mov edx, 0xbca0fffd ; std ; jmp rax
0x00000000004b88be : mov edx, 0xcac982a4 ; call 0xffffffffaf0e273e
0x0000000000446987 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004447b0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463b88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047ac81 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000411f70 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042a92f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042905d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047ac95 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000041035e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049da39 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472388 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b0d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b0c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b113 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b123 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431761 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431b20 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004313b1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b6c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000435350 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043b711 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435191 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b6a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b081 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e179 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049bc99 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004174e4 : mov edx, eax ; jmp 0x417501
0x0000000000420fe0 : mov edx, eax ; jmp 0x420fab
0x0000000000469746 : mov edx, eax ; jmp 0x46974f
0x000000000046b0b5 : mov edx, eax ; jmp 0x46b0aa
0x000000000044fe07 : mov edx, ebp ; call r15
0x000000000040fd8a : mov edx, ebp ; mov rdi, r13 ; call 0x42c007
0x000000000047e0c1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e081 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f881 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000044f89c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000047390c : mov edx, ebp ; xor edi, edi ; call 0x43fbf6
0x0000000000458404 : mov edx, esp ; call 0x4634e8
0x000000000047390b : mov edx, r13d ; xor edi, edi ; call 0x43fbf7
0x000000000046ac69 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441046 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000004468c5 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004468b7 : mov esi, 0x4a56fa8a ; add byte ptr [rax - 0x7f], cl ; ret 0x56e0
0x000000000047633f : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048a05f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004b79de : mov esi, 0xc2c1c0bf ; ret
0x000000000041460b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e134 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440b86 : mov esi, 1 ; call rbx
0x0000000000440d73 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440c3f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440bb7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000440ffd : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004625e3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000461ef8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043fd71 : mov esi, 2 ; jmp rax
0x0000000000440ff1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000440d64 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440c30 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440ba8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043fd8b : mov esi, 3 ; jmp rax
0x000000000044156c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004415c3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441643 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441743 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c30a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c769 : mov esi, dword ptr [rbx] ; call r14
0x0000000000476bb4 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000049dc3e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049c7b8 : mov esi, dword ptr [rdi] ; call r14
0x000000000040dfba : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049da35 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x0000000000432659 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400b93 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444766 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000004508d1 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e861 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447664 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004494e3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041de71 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000400587 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400594 ; ret
0x000000000041f45e : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a6ac : mov esi, ebp ; xor edx, edx ; jmp 0x46a67a
0x000000000047aba6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x250e16] ; call rax
0x000000000044f89f : mov esi, ebx ; mov rdi, r12 ; call r15
0x0000000000420f47 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414b39 : mov esi, ecx ; jbe 0x414add ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c64a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045cdab : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e1f9 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452b2b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000049c6a1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000466d82 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000044fe01 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e0c4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e084 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044f853 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004202e5 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f884 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042000a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041f845 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000425de1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000425e11 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000425e01 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004237c3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042ca0b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000425df1 : mov esp, 0xf80148c0 ; ret
0x00000000004006cf : mov esp, eax ; call 0x43e128
0x00000000004786ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c3ae : mov esp, ecx ; ret
0x000000000043fd24 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000042c8ce : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499d0b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435600 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463838 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463878 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004647d8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000046383c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464876 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000415489 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442b75 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000463d64 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047aca4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463ca4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047ac98 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464af0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461715 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41d9f9
0x000000000045637b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x442599
0x0000000000454d47 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004722a0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472489 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471a4f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d240 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478324 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004119b6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047835d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047435e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004121b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004782c2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487c64 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004149d2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c6a2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414a4d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411946 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000414d04 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000414e9b : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047dd45 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488388 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c069 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x0000000000478d9e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043b8dc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b24c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b22c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b28f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b2af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b270 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414962 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470a34 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470a06 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c840 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414992 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041857f : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c0c0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043b89c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b1ec : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b8bc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b20c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435127 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350b7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435047 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434fd7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b79a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000434f67 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b13a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b7ba : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000434ef7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b14a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b7da : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000434e87 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b15a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a0e3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000478d23 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414966 : mov qword ptr [rdi + 8], rax ; ret
0x000000000042658d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c078 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431244 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431282 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478c8e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004315cb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434937 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317ab : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004348b7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043199b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434837 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b6c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004347a8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431d6c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434718 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f6c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434688 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478c19 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431248 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431286 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000004313fb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004314f7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431443 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349b7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c285 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c616 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478be8 : mov qword ptr [rdi], r9 ; ret
0x000000000043b726 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b116 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b126 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b137 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b147 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b157 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000042658a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b107 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400547 : mov qword ptr [rdi], rcx ; ret
0x000000000043b713 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435193 : mov qword ptr [rdi], rdx ; ret
0x00000000004355fd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043263d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a2b2 : mov qword ptr [rdi], rsi ; ret
0x000000000040f892 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043acba : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004394aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043acda : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004394ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043acfa : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004394ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043ab8a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004393da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416325 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ab33 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000439383 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047ac84 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000416291 : mov qword ptr [rdx], rax ; ret
0x0000000000463b85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000004014e9 : mov qword ptr [rip + 0x2c7ba0], rax ; xor eax, eax ; ret
0x000000000049dd96 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046dd80 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000473d71 : mov qword ptr [rsi], rax ; ret
0x000000000041b36a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049c7b2 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047ba5f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047bc62 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047bbb1 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b421 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000440235 : mov qword ptr [rsp + 8], rax ; call rbx
0x00000000004098f8 : mov qword ptr [rsp], rax ; call 0x405bf6
0x000000000041b426 : mov qword ptr [rsp], rcx ; call rdx
0x000000000044f31d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043263c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004b88bd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e273f
0x00000000004006ce : mov r12, rax ; call 0x43e129
0x000000000046bc37 : mov r12b, 0xe8 ; ret 0xfd34
0x000000000043fd23 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d2e6 : mov r13, r15 ; mov r15, rax ; jmp 0x47d304
0x00000000004406c8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049c309 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c30d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d4f8 : mov r15, rax ; jmp 0x46d4c4
0x000000000047d2e9 : mov r15, rax ; jmp 0x47d301
0x00000000004c6b0c : mov r8b, byte ptr [rax] ; add byte ptr [rax], dh ; xor bl, bh ; call rsp
0x000000000047325c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000044476a : mov r9, r14 ; call rbx
0x0000000000466d87 : mov r9, r15 ; call rbx
0x0000000000411950 : mov rax, -1 ; pop rbx ; ret
0x00000000004129c2 : mov rax, -1 ; ret
0x00000000004664b0 : mov rax, 1 ; ret
0x00000000004664c0 : mov rax, 2 ; ret
0x00000000004664d0 : mov rax, 3 ; ret
0x00000000004664e0 : mov rax, 4 ; ret
0x00000000004664f0 : mov rax, 5 ; ret
0x0000000000466500 : mov rax, 6 ; ret
0x0000000000466510 : mov rax, 7 ; ret
0x0000000000475b94 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414a8b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410a02 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414c67 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000414f87 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000004878e2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004152ab : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464c23 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047e7dc : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478140 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f33e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455121 : mov rax, qword ptr [rax*8 + 0x4b2a80] ; jmp rax
0x0000000000455172 : mov rax, qword ptr [rax*8 + 0x4b2b80] ; jmp rax
0x0000000000457262 : mov rax, qword ptr [rax*8 + 0x4b2c80] ; jmp rax
0x0000000000455d95 : mov rax, qword ptr [rax*8 + 0x4b2f80] ; jmp rax
0x000000000045ff70 : mov rax, qword ptr [rax*8 + 0x4b3400] ; jmp rax
0x0000000000461294 : mov rax, qword ptr [rax*8 + 0x4b3500] ; jmp rax
0x0000000000461778 : mov rax, qword ptr [rax*8 + 0x4b3600] ; jmp rax
0x0000000000460006 : mov rax, qword ptr [rax*8 + 0x4b3900] ; jmp rax
0x000000000049c005 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000004406cb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445136 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471840 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aca0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439380 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0437 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0450 ; call rax
0x0000000000464c20 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004165d0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c010 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c090 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c0d0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c130 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c120 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c0e0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044d95b : mov rax, qword ptr [rdi*8 + 0x6caa40] ; ret
0x00000000004780d0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4780e8 ; ret
0x000000000041628e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000416280 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x416281 ; ret
0x0000000000473d09 : mov rax, qword ptr [rip + 0x258060] ; ret
0x000000000044c810 : mov rax, qword ptr [rip + 0x27eee1] ; ret
0x00000000004454a0 : mov rax, qword ptr [rip + 0x286e21] ; ret
0x00000000004165b0 : mov rax, qword ptr [rip + 0x2b2b09] ; ret
0x000000000049c92b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049c960 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c105 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400bef : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447139 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447a9c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e036 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047855b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416a83 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004206f9 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c994 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041c824 : mov rax, r8 ; pop rbx ; ret
0x0000000000432754 : mov rax, r8 ; ret
0x000000000046ae74 : mov rax, r9 ; jne 0x46aece ; ret
0x000000000046aef5 : mov rax, r9 ; ret
0x0000000000412929 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004634c8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046349b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004744e1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c239 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000041309c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474957 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f928 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa0d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fb3d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004119ba : mov rax, rbx ; pop rbx ; ret
0x000000000041bd9d : mov rax, rcx ; ret
0x00000000004165e0 : mov rax, rdi ; ret
0x0000000000487c0d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047ae12 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041daa7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417264 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047238e : mov rax, rdx ; call rax
0x000000000041e431 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041764b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e277 : mov rax, rdx ; pop rbx ; ret
0x0000000000426b08 : mov rax, rdx ; ret
0x000000000046a6f2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487a37 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb23 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000451ef3 : mov rax, rsi ; ret
0x000000000043daaa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c3a9 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004786ec : mov rbp, r9 ; nop ; jmp rdx
0x000000000042025e : mov rbp, rax ; call 0x41c4f5
0x000000000043fd26 : mov rbp, rax ; call rax
0x0000000000476c99 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ad5 : mov rbx, rax ; call rax
0x000000000044f83e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044ed35 : mov rbx, rdi ; test rax, rax ; je 0x44ed47 ; call rax
0x000000000043b0f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478236 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004781c4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d4f5 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d4c7
0x0000000000432770 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432773 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473be2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473bc9 ; ret
0x000000000044027f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040dfbc : mov rdi, qword ptr [r13] ; call r14
0x000000000043fe89 : mov rdi, qword ptr [r13] ; call rbx
0x000000000043fdf6 : mov rdi, qword ptr [r14] ; call rbx
0x000000000043fe37 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440232 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cdad : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047602d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466634 : mov rdi, qword ptr [rbp] ; call r12
0x000000000043ffbe : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000476bb7 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000464be7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464bb5
0x0000000000446e40 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044b689 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004475b4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004482df : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446c41 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447668 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044aec9 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004494e7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448867 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000049dc39 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000044f841 : mov rdi, r12 ; call r15
0x0000000000440afa : mov rdi, r12 ; call rbx
0x0000000000466d84 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445133 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000040fd8c : mov rdi, r13 ; call 0x42c005
0x000000000040e1fb : mov rdi, r13 ; call r14
0x0000000000440b1f : mov rdi, r13 ; call rbx
0x000000000044fe03 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000441b1b : mov rdi, r14 ; call 0x41dd95
0x000000000044508d : mov rdi, r14 ; call r15
0x0000000000440b43 : mov rdi, r14 ; call rbx
0x0000000000441ad6 : mov rdi, r15 ; call 0x41dd95
0x0000000000410364 : mov rdi, r15 ; call rax
0x0000000000440b63 : mov rdi, r15 ; call rbx
0x0000000000464f43 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000004085d1 : mov rdi, rax ; call 0x41dd99
0x0000000000420f49 : mov rdi, rax ; call rcx
0x000000000042025b : mov rdi, rax ; mov rbp, rax ; call 0x41c4f8
0x00000000004202e7 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049ea3b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044f886 : mov rdi, rbp ; call r15
0x000000000041e865 : mov rdi, rbp ; call rax
0x0000000000441002 : mov rdi, rbp ; call rbx
0x000000000041f1c6 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bbbe : mov rdi, rbx ; call 0x417e15
0x000000000044c7c6 : mov rdi, rbx ; call r12
0x0000000000444a3c : mov rdi, rbx ; call r14
0x00000000004625e8 : mov rdi, rbx ; call r8
0x0000000000411f76 : mov rdi, rbx ; call rax
0x0000000000445600 : mov rdi, rbx ; jmp 0x4455cc
0x000000000049e862 : mov rdi, rbx ; jne 0x49e856 ; pop rbx ; ret
0x0000000000414af3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414c63 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000049bc98 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049da38 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047ac80 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047ac94 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004313b0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435190 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e178 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000458403 : mov rdx, r12 ; call 0x4634e9
0x000000000047e0c0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e080 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004174e3 : mov rdx, rax ; jmp 0x417502
0x0000000000420fdf : mov rdx, rax ; jmp 0x420fac
0x0000000000469745 : mov rdx, rax ; jmp 0x469750
0x000000000046b0b4 : mov rdx, rax ; jmp 0x46b0ab
0x000000000044fe06 : mov rdx, rbp ; call r15
0x000000000040fd89 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c008
0x000000000049dc3d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049c7b7 : mov rsi, qword ptr [r15] ; call r14
0x000000000040dfb9 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049c768 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444765 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000004508d0 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e860 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041de70 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000047e0c3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e083 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f852 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044f883 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420009 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041f844 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041f45d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049c6a0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000466d81 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e1f8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452b2a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000400586 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x000000000046a6ab : mov rsi, rbp ; xor edx, edx ; jmp 0x46a67b
0x000000000047aba5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x250e16] ; call rax
0x000000000044f89e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000420f46 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414b38 : mov rsi, rcx ; jbe 0x414ade ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c649 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004786e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c3ad : mov rsp, rcx ; ret
0x0000000000435625 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442999 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042657d : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c66d4 : mov word ptr [rbx], ds ; sti ; jmp qword ptr [rdx]
0x000000000043b81c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b18c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b924 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b274 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004353c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b6e8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b0c8 : mov word ptr [rdi + 4], dx ; ret
0x000000000043b73a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b10a : mov word ptr [rdi + 8], dx ; ret
0x0000000000432672 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043194c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431764 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431948 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b093 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043da25 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004353cb : mov word ptr [rdi], cx ; ret
0x000000000043b6a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435433 : mov word ptr [rdi], dx ; ret
0x0000000000435622 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000043266f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043ac08 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439448 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043abb3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439403 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000416fce : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1512 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043da28 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7228 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c72d4 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c374c : mov word ptr [rsi], ss ; add byte ptr [rax - 0x43], al ; clc ; jmp qword ptr [rsi]
0x000000000044f424 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000043266e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048a85d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c8985 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0589 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x0000000000446271 : movabs al, byte ptr [0x8b3d8b4c00000010] ; ret
0x000000000048ec55 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464be3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000046f615 : movabs byte ptr [0x394802e0c148006c], al ; ret 0x860f
0x0000000000446099 : movabs byte ptr [0x89482fff7880fffb], al ; ret 0x774
0x000000000042fed2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042fece : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042ff7c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b160 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b9dd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b32d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043509f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043502f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434fbf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434f4f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b97d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b2cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000434edf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b99d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b2ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000434e6f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b9bd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b30d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043548f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043541f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043533f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352cf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043525f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351ef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043517f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043510f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004264dc : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x4264f9 ; ret
0x00000000004264f5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000004345fb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043466b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b7f4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b174 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b1b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b1a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b228 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b1e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b208 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b188 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b329 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b2c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b2e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b309 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434e1a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000434e74 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b161 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b9de : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b32e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004350a0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435030 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434fc0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434f50 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b97e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b2ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000434ee0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b99e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b2ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000434e70 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b9be : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b30e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435490 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435420 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435340 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352d0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435260 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351f0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435180 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435110 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004264dd : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x4264f8 ; ret
0x00000000004264f6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004345fc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043466c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434da7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d27 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c97 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c17 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b97 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b17 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a97 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a17 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434997 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434917 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434897 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434817 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434787 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004346f7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434667 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b7f5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b175 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b1c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b1b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b1a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b229 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b1e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b209 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b189 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b32a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b2ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b2ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b30a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434e1b : movq qword ptr [rdi], mm0 ; ret
0x0000000000434e75 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b9282 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba4dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba536 ; jmp 0x4ba477
0x000000000041aa58 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000441ce8 : movsb byte ptr [rdi], byte ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x00000000004c7864 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; add byte ptr [rax], al ; fmul dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000047430c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004172b7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004bab15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba3d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000478c42 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000047f76f : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x24
0x000000000043fb94 : movsd dword ptr [rdi], dword ptr [rsi] ; sub byte ptr [rax], al ; test rax, rax ; je 0x43fba7 ; ret
0x0000000000491633 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004915ed : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004776a1 : movsx eax, dl ; neg eax ; ret
0x0000000000421361 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432a36 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042f9b2 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049b789 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b201 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000499cd9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049aea8 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000042e2fd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043af29 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000499f01 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004a3019 : movsxd rdi, eax ; inc dword ptr [rax + 0x65] ; clc ; jmp rax
0x000000000042fa7f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000043cf0c : movsxd rsi, esi ; ret 0x7520
0x00000000004915ee : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491634 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f4ac : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047ad4c : movzx eax, al ; neg eax ; ret
0x000000000047aaf6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aa25 : movzx eax, al ; ret
0x0000000000413cdc : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415976 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411b9d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414e9f : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000412e1a : movzx eax, byte ptr [rax] ; ret
0x000000000049cc89 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004226f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e310 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000425f70 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422713 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414b3d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411bb0 : movzx eax, byte ptr [rdx] ; ret
0x0000000000413cdd : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e187 : movzx eax, cl ; pop rbx ; ret
0x000000000043e1af : movzx eax, dl ; pop rbx ; ret
0x000000000043d56a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d569 ; ret
0x000000000043d61a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d619 ; ret
0x000000000042f1b4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422710 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e313 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db3f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40db27 ; ret
0x000000000042e1e1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042283f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e073 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043cf34 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043cf94 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043cf84 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043cf74 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043cf64 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043cf54 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043cf44 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434dc0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042ef67 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043cf1b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004354a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000425f73 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425f99 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434d40 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435430 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466631 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046aa24 : movzx rax, al ; ret
0x0000000000465717 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000462e37 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041672f : neg eax ; ret
0x00000000004140c6 : neg edx ; call 0x4002f4
0x000000000043f281 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004140c5 : neg rdx ; call 0x4002f5
0x0000000000410228 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004131fc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004344eb : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047b90e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462b2b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e61c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c2f50 : nop ; add byte ptr [rax], r8b ; cmp al, 0x7c ; clc ; call qword ptr [rcx]
0x000000000041af2a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000467ef6 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004bed2d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bed45 ; ret
0x00000000004bed3b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e3cf : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000044492f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000425ddf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004884af : nop ; call rax
0x00000000004c5b0d : nop ; cli ; call rsi
0x00000000004a3424 : nop ; iretd ; clc ; jmp rax
0x0000000000411572 : nop ; jmp 0x41147c
0x00000000004786ef : nop ; jmp rdx
0x000000000043157f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043175f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046a8ff : nop ; mov eax, 0x66 ; syscall ; ret
0x0000000000416bdf : nop ; mov eax, 0xffffffff ; ret
0x000000000040febf : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046ac6f : nop ; mov eax, edi ; ret
0x0000000000431b1f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b6bf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000041194f : nop ; mov rax, -1 ; pop rbx ; ret
0x00000000004158ff : nop ; mov rax, -1 ; ret
0x0000000000416ef4 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004455ff : nop ; mov rdi, rbx ; jmp 0x4455cd
0x000000000041e85f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b15f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000046244f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46241e
0x000000000046244e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46241f
0x00000000004bda50 : nop ; pop rbx ; std ; jmp rax
0x000000000043d8ff : nop ; ret
0x000000000040995c : nop ; ret 0xffff
0x00000000004a3478 : nop ; salc ; clc ; jmp rax
0x00000000004a34b4 : nop ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004bfa50 : nop ; sbb dword ptr [rax], eax ; add byte ptr [rax + rdx*2], bl ; cmc ; jmp qword ptr [rcx]
0x00000000004162cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004c1550 : nop ; xor al, 0 ; add byte ptr [rax + rsi*4 - 0xa], cl ; jmp qword ptr [rsi]
0x0000000000425f9f : nop ; xor eax, eax ; ret
0x0000000000425e5f : nop ; xor rax, rax ; ret
0x000000000047810b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047df6b : nop dword ptr [rax + rax] ; call rbx
0x000000000043b09b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400898 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047aa73 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000004129cb : nop dword ptr [rax + rax] ; ret
0x000000000041318b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046647c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000400ab5 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047ddc9 : nop dword ptr [rax] ; call rax
0x000000000041670c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000041094d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c594 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e174 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000004008e5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e534 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e36c : nop dword ptr [rax] ; pop rbx ; ret
0x00000000004062a5 : nop dword ptr [rax] ; ret
0x000000000049e2cd : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000411194 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047df6a : nop word ptr [rax + rax] ; call rbx
0x00000000004129ca : nop word ptr [rax + rax] ; ret
0x000000000041318a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004447f1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000429cc7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b33f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046ab32 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041bd99 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c6aa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046aaaf : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452780 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004226f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041c822 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469743 : or al, 0x20 ; mov rdx, rax ; jmp 0x469752
0x000000000041b428 : or al, 0x24 ; call rdx
0x0000000000443c41 : or al, 0x24 ; je 0x443c55 ; mov edi, 0x6ca140 ; call rax
0x0000000000418b92 : or al, 0x2b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004c2934 : or al, 0x35 ; clc ; jmp rsp
0x00000000004c16cc : or al, 0x36 ; add byte ptr [rax], al ; xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x0000000000462452 : or al, 0x40 ; jmp 0x46241b
0x0000000000462451 : or al, 0x40 ; jmp 0x46241c
0x0000000000400b9a : or al, 0x41 ; call rsp
0x000000000044555f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004783e0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400bee : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047425b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047ae33 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b30f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046219a : or al, 0x7e ; ret
0x000000000045d119 : or al, 0x83 ; ret
0x0000000000458a1c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000421363 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428db4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432a38 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042f9b4 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000489e1b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046ac68 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e2ff : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043af2b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042f9b8 : or al, 0xb ; jmp r9
0x000000000043af2f : or al, 0xb ; jmp rcx
0x0000000000499f03 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000434fc3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004264e3 : or al, 0xf3 ; ret
0x00000000004628bb : or al, 0xf6 ; ret 0xf04
0x000000000045d09c : or al, 0xf6 ; ret 0xf08
0x00000000004c72e8 : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004beb39 : or al, byte ptr [rax] ; add ah, dh ; add ch, dh ; call qword ptr [rdx]
0x00000000004beb25 : or al, byte ptr [rax] ; add al, bh ; add ch, dh ; call qword ptr [rax]
0x000000000044f8b1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000042298d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429ed1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004229b1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049bd7e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000408366 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000047d3d0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489947 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c64a3 : or al, byte ptr [rcx] ; ret
0x0000000000496c87 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004beb24 : or al, byte ptr fs:[rax] ; add al, bh ; add ch, dh ; call qword ptr [rax]
0x0000000000477329 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000408e27 : or al, ch ; ret
0x000000000040c228 : or al, ch ; ret 0xff99
0x0000000000465208 : or al, ch ; ret 1
0x0000000000488352 : or bh, byte ptr [rdi] ; and al, 0 ; ret
0x00000000004c4b51 : or bh, dl ; jmp rdx
0x0000000000442b78 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000435183 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044f757 : or bl, dh ; ret
0x000000000040a3d5 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000414d06 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472221 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x00000000004103d7 : or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000473dff : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004393d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e216 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e8d2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004406f7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000496e62 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000469ea3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049b787 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000439497 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046410f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000004103d8 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416b5b : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472222 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x00000000004166e7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000004423a5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bc99 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479025 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004c543a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c1eb8 : or byte ptr [rax + 0xb], cl ; ret
0x000000000047579b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403eac : or byte ptr [rax + 1], cl ; ret
0x000000000041afc7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000467acc : or byte ptr [rax - 0x39], cl ; ret
0x0000000000425e7b : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x0000000000425e8f : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x00000000004188e3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000473d08 : or byte ptr [rax - 0x75], cl ; add eax, 0x258060 ; ret
0x0000000000440231 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409908 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bf7
0x000000000040df9a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004393dd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000473e00 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fb3c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b425 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x00000000004393d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f1c5 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041764a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047dc77 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472b50 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e8d3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472af9 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000472b4f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000041bc95 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b04ac
0x000000000041bc94 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b04ad
0x000000000041c858 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044f8d4 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440627 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c626 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c6ae : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000462d1e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000472db8 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c242 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000410cd8 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000041048d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422bec : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004174f4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004174b5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422bed : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a071 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c11 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041548c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041d956 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049c8c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004447b1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043e230 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e476 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a3d6 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000042b72e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049d660 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004789cc : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047dea9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000489ca3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000473d4c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000041db50 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405943 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004017c5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000041295a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049c846 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462450 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46241d
0x0000000000457727 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f631 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000470a09 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a21b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000469ea4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c089 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f1ba : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049b788 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c72ea : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c04b7 : or byte ptr [rcx + 0xb], al ; ret
0x0000000000461cdb : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000047fd2b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004792c0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040e1f7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a222 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049c763 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004116ba : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000439498 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000464110 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489802 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d3e9 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e0ea : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fb53 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000004487b9 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045af61 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d366 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cb8f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000044273e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004518a0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000041768b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bad9e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000470ec7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470ae1 : or byte ptr [rdi + 0x6ca100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000477f71 : or byte ptr [rdi + 0x6ca140], bh ; call rax
0x000000000040351b : or byte ptr [rdi + 0x6cb0a0], bh ; call r15
0x00000000004bf61f : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4650 : or byte ptr [rdi + 0xb], al ; jae 0x4c4664 ; ret
0x0000000000481ec8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000449b43 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044cd89 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000414e9e : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462311 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487c49 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000414d07 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049c716 : or byte ptr [rdi], cl ; ret 0xfc3
0x000000000042ff7b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044da14 : or byte ptr [rdi], cl ; test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455866 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049c715 : or byte ptr [rdi], r9b ; ret 0xfc3
0x000000000040047c : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476636 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c3660 : or ch, 0xfd ; call qword ptr [rbx]
0x00000000004a398d : or cl, bh ; call qword ptr [rax]
0x000000000047af97 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044c910 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411b8e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004123d7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464baf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000004116c0 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042513a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004523e7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000489de3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463b87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000004004e8 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489ca9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408068 : or cl, ch ; ret
0x0000000000462722 : or cl, ch ; ret 0xfffc
0x0000000000487ed5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004a398c : or cl, dil ; call qword ptr [rax]
0x00000000004350a3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049de55 : or dh, bl ; ret
0x000000000047df67 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041b873 : or dh, dh ; ret 0x7404
0x000000000041b7ee : or dh, dh ; ret 0xf04
0x000000000040279e : or dh, dh ; ret 0xfdf
0x000000000040da77 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x000000000040214a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047602c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x00000000004235ce : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422b1d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b5df : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a77 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bea75 : or dword ptr [rax], eax ; add byte ptr [rax - 1], bl ; hlt ; call qword ptr [rbx]
0x000000000040ffef : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000489dc3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042f736 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004121d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004165b3 : or dword ptr [rbx], ebp ; sub eax, dword ptr [rax] ; ret
0x0000000000478b1c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fb16 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041fcfc : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401604 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478456 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000474669 : or dword ptr [rip + 0x255b00], 1 ; pop rbx ; ret
0x00000000004c64a0 : or eax, 0x10a0303 ; ret
0x00000000004c6548 : or eax, 0x1370303 ; ret
0x000000000043b981 : or eax, 0x1c478d48 ; ret
0x0000000000415642 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6490 : or eax, 0x34b0303 ; ret
0x00000000004c64ec : or eax, 0x35b0303 ; ret
0x0000000000461d0a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462412 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042cc02 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x0000000000489e37 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429b27 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429b91 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a0c4d : or eax, 0x834825eb ; ret 0x4810
0x00000000004aded9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ba3d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440b5e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000434f53 : or eax, 0xf7f0ff3 ; ret
0x000000000044415c : or eax, 0xffffffff ; ret
0x00000000004c72eb : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045dd3f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004228bd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004228e1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044d204 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c72ec : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c86d1 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045dd3e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044257e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004162c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000417563 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00000000004c8a48 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435113 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a48e : or ebx, esi ; ret
0x000000000041d1ea : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418a34 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fa0c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000447955 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489dff : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c461a : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c614 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c4652 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bed38 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435033 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004121d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000440183 : or esp, ebx ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435182 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435112 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004350a2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4651 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435032 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c86d0 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x000000000042c613 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044c90f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462721 : or r9b, r13b ; ret 0xfffc
0x00000000004c4619 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6547 : or rax, 0x1370303 ; ret
0x00000000004c648f : or rax, 0x34b0303 ; ret
0x00000000004c64eb : or rax, 0x35b0303 ; ret
0x0000000000461d09 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462411 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044415b : or rax, 0xffffffffffffffff ; ret
0x0000000000496b62 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049e148 : out -0x18, eax ; ret 0xffe7
0x00000000004b9280 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000441ba5 : out -0x3f, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441bb5 ; call rbx
0x000000000040322b : out -0x77, eax ; ret 0x8948
0x00000000004bafa8 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000043499a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000040f5c0 : out 0, eax ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000046dae3 : out 0x25, eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000041b1b3 : out 0x2a, al ; add dh, dh ; ret 0xf02
0x000000000044f843 : out 0x41, eax ; call rdi
0x0000000000475749 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044f854 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x00000000004202e6 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f885 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445135 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000466d86 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041f846 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415993 : out 0x5b, al ; ret
0x00000000004731aa : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042000b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000047e0c5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e085 : out 0x89, al ; out dx, eax ; call rax
0x000000000043491a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a331d : out 0xf8, al ; jmp qword ptr [rax]
0x000000000049e471 : out 2, al ; jne 0x49e484 ; mov eax, 8 ; ret
0x000000000042c489 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004586ea : out dx, al ; add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x000000000041d1ed : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000400959 : out dx, al ; call rax
0x00000000004a32ed : out dx, al ; clc ; jmp rax
0x0000000000488146 : out dx, al ; cmp dword ptr [rax + rax], esp ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004ba3d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041db2e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004315ca : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c004 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000041f45f : out dx, al ; mov rdi, rbx ; call rax
0x0000000000434d2a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b48e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a6ad : out dx, al ; xor edx, edx ; jmp 0x46a679
0x000000000041b573 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e345 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418a37 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ea3d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040fd8e : out dx, eax ; call 0x42c003
0x000000000047e0c7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e1fd : out dx, eax ; call r14
0x000000000044f888 : out dx, eax ; call r15
0x000000000041e867 : out dx, eax ; call rax
0x0000000000440b21 : out dx, eax ; call rbx
0x00000000004313fa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004314f6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431442 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044fe05 : out dx, eax ; mov rdx, rbp ; call r15
0x0000000000434daa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b58d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f1c8 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041593e : out dx, eax ; pop rbx ; ret
0x000000000042e383 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e398 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e3ad : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d6b3 : out dx, eax ; ret 0xf66
0x00000000004098fd : out dx, eax ; ret 0xffff
0x000000000042f89c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f885 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f86e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e32a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042949e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bade : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bab83 : outsb dx, byte ptr [rsi] ; ja 0x4bab0c ; ret 0x48f
0x000000000047f7ce : outsb dx, byte ptr [rsi] ; ret 0x24
0x000000000040997e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b88c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004bd9b1 : outsb dx, byte ptr [rsi] ; std ; push rax ; outsd dx, dword ptr [rsi] ; std ; call rax
0x00000000004454a4 : outsb dx, byte ptr [rsi] ; sub byte ptr [rax], al ; ret
0x000000000042694a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004c5085 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; clc ; cli ; jmp rdi
0x00000000004214b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000426f6e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000418b91 : outsd dx, dword ptr [rsi] ; or al, 0x2b ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042f69d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042f73d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000046571a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f6a2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9286 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000431d37 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042f742 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046576a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bd9b5 : outsd dx, dword ptr [rsi] ; std ; call rax
0x00000000004b9285 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041ab8f : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004227b2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000466474 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046645f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004227b1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ba685 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ba686 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000042365f : pmovmskb edx, mm4 ; test edx, edx ; je 0x423673 ; bsf eax, edx ; ret
0x00000000004425f5 : pop r10 ; ret
0x00000000004bab0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e53a : pop r12 ; jmp rax
0x00000000004202ec : pop r12 ; jmp rcx
0x000000000043fd6f : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043fd89 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004731ad : pop r12 ; pop r13 ; jmp rax
0x000000000048ebfc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eb7a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044153b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402093 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040146f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401592 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f475 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405946 : pop r12 ; pop r13 ; ret
0x000000000047b23c : pop r12 ; pop r14 ; ret
0x000000000046b011 : pop r12 ; pop rbp ; ret
0x00000000004005ba : pop r12 ; ret
0x00000000004731af : pop r13 ; jmp rax
0x000000000048ebfe : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eb7c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044153d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402095 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401471 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401594 : pop r13 ; pop r14 ; ret
0x000000000040f477 : pop r13 ; pop rbp ; ret
0x0000000000405948 : pop r13 ; ret
0x000000000048ec00 : pop r14 ; fmul st(0) ; ret
0x000000000048eb7e : pop r14 ; fmulp st(1) ; ret
0x000000000044153f : pop r14 ; pop r15 ; jmp rax
0x0000000000402097 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401473 : pop r14 ; pop r15 ; ret
0x0000000000401596 : pop r14 ; ret
0x0000000000441541 : pop r15 ; jmp rax
0x0000000000402099 : pop r15 ; pop rbp ; ret
0x0000000000401475 : pop r15 ; ret
0x0000000000418581 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000443954 : pop rax ; add al, bpl ; ret
0x00000000004c1488 : pop rax ; jns 0x4c1484 ; call qword ptr [rax]
0x00000000004053d4 : pop rax ; loop 0x4053de ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000418582 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004782c6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004bea78 : pop rax ; push rsp ; call qword ptr [rbx]
0x0000000000409994 : pop rax ; ret 0xffff
0x0000000000474c55 : pop rbp ; add r8b, bpl ; ret
0x0000000000478fba : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041db52 : pop rbp ; jmp rax
0x0000000000400913 : pop rbp ; mov byte ptr [rip + 0x2ca245], 1 ; ret
0x00000000004189a2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000040088f : pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000041e539 : pop rbp ; pop r12 ; jmp rax
0x00000000004202eb : pop rbp ; pop r12 ; jmp rcx
0x000000000043fd6e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043fd88 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004731ac : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048ebfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eb79 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044153a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040146e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401591 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405945 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b23b : pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004005b9 : pop rbp ; pop r12 ; ret
0x000000000048ebff : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048eb7d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044153e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402096 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401472 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401595 : pop rbp ; pop r14 ; ret
0x000000000040f478 : pop rbp ; pop rbp ; ret
0x000000000047a228 : pop rbp ; pop rbx ; ret
0x0000000000400481 : pop rbp ; ret
0x0000000000478fc2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000041295c : pop rbp ; sub rax, rdx ; ret
0x00000000004c72da : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b7e58 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e1dc : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e20f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b7e56 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004878ea : pop rbx ; jmp rax
0x0000000000410e8e : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474687 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e273 : pop rbx ; mov eax, eax ; ret
0x0000000000462c3a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a29e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000047661e : pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x0000000000414af6 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414c66 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004634c7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420008 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f474 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b010 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041db51 : pop rbx ; pop rbp ; jmp rax
0x000000000041e538 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004202ea : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043fd6d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043fd87 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004731ab : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401590 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405944 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b23a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004005b8 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400480 : pop rbx ; pop rbp ; ret
0x000000000041295b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400cb5 : pop rbx ; ret
0x00000000004bb140 : pop rbx ; ret 0x6f9
0x0000000000420291 : pop rbx ; ret 0xffff
0x00000000004bda51 : pop rbx ; std ; jmp rax
0x00000000004668d9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000044063a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047aa68 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x250f53] ; jmp rax
0x00000000004c39dd : pop rcx ; add byte ptr [rax], al ; rcr bh, 0xf8 ; call qword ptr [rbx]
0x0000000000474449 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488b3f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004bda4d : pop rcx ; std ; call qword ptr [rax - 0x1f0002a5]
0x000000000042ff78 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042bc1d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431999 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004317a9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba3fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441542 : pop rdi ; jmp rax
0x00000000004b93c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049dfee : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004315c9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004313f9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004314f5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431441 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040209a : pop rdi ; pop rbp ; ret
0x0000000000401476 : pop rdi ; ret
0x00000000004b9fe1 : pop rdx ; je 0x4b9fab ; ret 0xacfc
0x00000000004bafa7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00000000004425f4 : pop rdx ; pop r10 ; ret
0x00000000004782c7 : pop rdx ; pop rbx ; ret
0x0000000000442619 : pop rdx ; pop rsi ; ret
0x00000000004425f6 : pop rdx ; ret
0x00000000004bab10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000443f52 : pop rdx ; sub dword ptr [rax], 0 ; test eax, eax ; je 0x443f68 ; ret
0x000000000046963e : pop rsi ; adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042bb1e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044eb22 : pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x0000000000473683 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000425e9c : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048ec01 : pop rsi ; fmul st(0) ; ret
0x000000000048eb7f : pop rsi ; fmulp st(1) ; ret
0x000000000042c625 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441540 : pop rsi ; pop r15 ; jmp rax
0x0000000000402098 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401474 : pop rsi ; pop r15 ; ret
0x0000000000401597 : pop rsi ; ret
0x00000000004296b0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3b0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047bc64 : pop rsp ; and al, 0x78 ; call r12
0x0000000000476562 : pop rsp ; and eax, 0x38754000 ; ret
0x000000000041e53b : pop rsp ; jmp rax
0x00000000004202ed : pop rsp ; jmp rcx
0x000000000043fd70 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043fd8a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422c10 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004731ae : pop rsp ; pop r13 ; jmp rax
0x000000000048ebfd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eb7b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044153c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402094 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401470 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401593 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f476 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405947 : pop rsp ; pop r13 ; ret
0x000000000047b23d : pop rsp ; pop r14 ; ret
0x0000000000474c54 : pop rsp ; pop rbp ; add r8b, bpl ; ret
0x000000000046b012 : pop rsp ; pop rbp ; ret
0x00000000004c361c : pop rsp ; push rbp ; add byte ptr [rax], al ; jo 0x4c35e0 ; clc ; call qword ptr [rdi]
0x00000000004005bb : pop rsp ; ret
0x00000000004c7e0d : popfq ; add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rax]
0x00000000004a3151 : popfq ; clc ; call rax
0x00000000004a318d : popfq ; clc ; dec dword ptr [rdi - 0x43] ; clc ; jmp qword ptr [rax]
0x00000000004400ef : popfq ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4400ff ; call rbx
0x000000000041d97b : popfq ; fsubr qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000049b5a9 : popfq ; ret 0xf45
0x0000000000494160 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f649 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000434e72 : psllq mm1, qword ptr [r15] ; jg 0x434e8d ; ret
0x0000000000434e73 : psllq mm1, qword ptr [rdi] ; jg 0x434e8c ; ret
0x000000000043b1a6 : psllq mm1, qword ptr [rdi] ; jg 0x43b1ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b1a5 : psllq mm1, qword ptr [rdi] ; jg 0x43b1bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b207 : psllq mm1, qword ptr [rdi] ; jg 0x43b21c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a3751 : psubw mm7, mm7 ; ret 0xf916
0x00000000004528ef : push -0x76000005 ; ret 0x8941
0x000000000047bb1e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004876f6 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000480d4f : push -0x7c000006 ; ret 0x8908
0x000000000048586a : push -0x9000007 ; ret 0xf02
0x000000000043bac4 : push -0x9ffffff ; ret 0x7501
0x000000000049bef8 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f45c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004bab82 : push 0x6e ; ja 0x4bab0d ; ret 0x48f
0x00000000004c01a1 : push 0xf5 ; call qword ptr [rsi]
0x00000000004bd9a9 : push 0xfd ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x00000000004856fc : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a1e1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a38c3 : push qword ptr [rax + 0x10] ; stc ; jmp rax
0x00000000004a36d7 : push qword ptr [rax + 0x16] ; stc ; jmp rax
0x00000000004a32ab : push qword ptr [rax + 0x30fff8c1] ; ret 0xfff8
0x00000000004a32b3 : push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004a34bb : push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004bda27 : push qword ptr [rax + 0x44] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004a334f : push qword ptr [rax - 0x20] ; clc ; push qword ptr [rax] ; loop 0x4a3357 ; call qword ptr [rax]
0x00000000004a343b : push qword ptr [rax - 0x29] ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a3a13 : push qword ptr [rax - 0x2f000689] ; ja 0x4a3a1c ; jmp rax
0x00000000004bdb17 : push qword ptr [rax - 0x37] ; std ; jmp rdx
0x00000000004bdaa7 : push qword ptr [rax - 0x3f00023e] ; ret 0xfffd
0x00000000004a3a8f : push qword ptr [rax - 0x3f000683] ; jge 0x4a3a98 ; jmp rax
0x00000000004a3a67 : push qword ptr [rax - 0x3f000684] ; jl 0x4a3a70 ; call rax
0x00000000004a39d3 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a39dc ; call rax
0x00000000004a3187 : push qword ptr [rax - 0x53] ; clc ; call qword ptr [rax]
0x00000000004a3077 : push qword ptr [rax - 0x78] ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004bda1b : push qword ptr [rax - 0x7c] ; std ; call rax
0x00000000004bd9ab : push qword ptr [rax] ; insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x00000000004bd9cb : push qword ptr [rax] ; jnp 0x4bd9d0 ; call qword ptr [rax]
0x00000000004a3353 : push qword ptr [rax] ; loop 0x4a3353 ; call qword ptr [rax]
0x00000000004a31bf : push qword ptr [rax] ; mov ebp, 0xbde0fff8 ; clc ; call rax
0x00000000004a32af : push qword ptr [rax] ; ret 0xfff8
0x000000000043d448 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000004109eb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004152ed : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464765 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046470d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415991 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004427c2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415939 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466a2a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000410ec1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000474579 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a1e2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000443950 : push qword ptr [rcx] ; sar byte ptr [rdi + 0x4a4f58], 0xe8 ; ret
0x000000000040db9d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f258 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f2fc : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f07a : push qword ptr [rdi + 3] ; ret
0x000000000043f0c9 : push qword ptr [rdi + 4] ; ret
0x000000000046a9af : push qword ptr [rdi + 6] ; ret
0x000000000044f755 : push qword ptr [rdi + 8] ; ret
0x000000000046a5cc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000414e16 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a354f : push qword ptr [rdx + 0x19] ; stc ; jmp rdx
0x00000000004a377f : push qword ptr [rdx] ; adc ecx, edi ; jmp qword ptr [rdx + 0x12fff910]
0x00000000004a3503 : push qword ptr [rsi + 0x46fff91a] ; sbb bh, cl ; call rsi
0x000000000046a87d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a362f : push qword ptr [rsp + rbx + 0x1c44fff9] ; stc ; call rsp
0x0000000000414a4f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046383a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004162d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041af30 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004180a4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000043f3fc : push rax ; add byte ptr [r8], r8b ; ret
0x0000000000414a50 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f119 : push rax ; add byte ptr [rax], al ; ret
0x000000000041a36f : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425ab5 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004a2f38 : push rax ; add eax, edi ; jmp qword ptr [rax]
0x00000000004447f8 : push rax ; call rbx
0x00000000004a309f : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004bfa55 : push rax ; cmc ; jmp qword ptr [rcx]
0x000000000045dc35 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a33db : push rax ; in al, -8 ; jmp rax
0x00000000004a335b : push rax ; in eax, -8 ; call rax
0x00000000004a3a1f : push rax ; ja 0x4a3a20 ; call qword ptr [rax]
0x00000000004a39e3 : push rax ; jbe 0x4a39e8 ; inc dword ptr [rax] ; ja 0x4a39ec ; call qword ptr [rax]
0x00000000004bd9d3 : push rax ; jle 0x4bd9d8 ; call rax
0x00000000004781cc : push rax ; jmp qword ptr [rax]
0x000000000049c953 : push rax ; jne 0x49c94c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049c9b3 : push rax ; jne 0x49c9ac ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004bd9c8 : push rax ; jns 0x4bd9cf ; push qword ptr [rax] ; jnp 0x4bd9d3 ; call qword ptr [rax]
0x00000000004a3a3f : push rax ; js 0x4a3a40 ; call qword ptr [rax]
0x00000000004a3157 : push rax ; lahf ; clc ; call qword ptr [rax]
0x00000000004a3184 : push rax ; lodsb al, byte ptr [rsi] ; clc ; push qword ptr [rax - 0x53] ; clc ; call qword ptr [rax]
0x00000000004468ca : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000487d66 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b688 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004188e2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000041b872 : push rax ; or dh, dh ; ret 0x7404
0x000000000041b7ed : push rax ; or dh, dh ; ret 0xf04
0x0000000000422b1c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a32ec : push rax ; out dx, al ; clc ; jmp rax
0x00000000004bd9b3 : push rax ; outsd dx, dword ptr [rsi] ; std ; call rax
0x000000000046663e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004468cc : push rax ; push rsp ; ret
0x00000000004162c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004647da : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a36a3 : push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a36bc : push rax ; sbb edi, ecx ; jmp rax
0x0000000000443f79 : push rax ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004a3177 : push rax ; test al, 0xf8 ; call qword ptr [rax]
0x00000000004a344f : push rax ; xbegin 0xfffffffff914f55e ; call qword ptr [rax]
0x000000000041598d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000049ea47 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047971f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004c361d : push rbp ; add byte ptr [rax], al ; jo 0x4c35df ; clc ; call qword ptr [rdi]
0x00000000004c36b5 : push rbp ; add byte ptr [rax], al ; js 0x4c367c ; clc ; call qword ptr [rdi]
0x00000000004c365d : push rbp ; add byte ptr [rax], al ; or ch, 0xfd ; call qword ptr [rbx]
0x0000000000440481 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004744b8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046bc33 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x00000000004952a8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004914b7 : push rbp ; ret
0x0000000000464f41 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x0000000000425dda : push rbp ; xor rax, rax ; ret
0x0000000000400ab9 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047aaf4 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d676 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004234f9 : push rbx ; add qword ptr [rax], rax ; ret
0x000000000044d202 : push rbx ; je 0x44d219 ; cmp esi, 3 ; je 0x44d219 ; pop rbx ; ret
0x00000000004646d9 : push rbx ; je 0x46473d ; pop rbp ; pop r12 ; ret
0x000000000046477e : push rbx ; je 0x4647e2 ; pop rbp ; pop r12 ; ret
0x00000000004628ba : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416b5a : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000414e9d : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040d6e9 : push rbx ; ret
0x0000000000413df4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000411f71 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004b9fdc : push rbx ; xchg eax, edx ; jae 0x4b9fbb ; push rsi ; pop rdx ; je 0x4b9fb0 ; ret 0xacfc
0x000000000043f020 : push rcx ; add byte ptr [rax], al ; ret
0x00000000004b9265 : push rcx ; call qword ptr [rsi]
0x000000000043578d : push rcx ; jl 0x4357de ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004358f4 : push rcx ; jl 0x435945 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049d65f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000489ca5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043b6ea : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000434fd9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000043b79c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b1ad : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000431288 : push rdi ; clc ; ret
0x0000000000431400 : push rdi ; cld ; ret
0x0000000000431f27 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004348b9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434839 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043468a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414994 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043471a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d118 : push rdi ; or al, 0x83 ; ret
0x000000000045d09b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a21a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047fd2a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a221 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043b980 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000004876f5 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042f69e : push rdi ; ret
0x0000000000400fe5 : push rdi ; ret 0
0x000000000042f73e : push rdi ; ret 0xff3
0x0000000000432127 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043194a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431d27 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c36a : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041035f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000046571b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004c3325 : push rdx ; add byte ptr [rax], al ; test al, 0x9e ; clc ; call qword ptr [rdx]
0x000000000046acaa : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c543d : push rdx ; ret
0x00000000004468c6 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042e384 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043dc89 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43dce0 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463ca2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004468ba : push rsi ; add byte ptr [rax - 0x7f], cl ; ret 0x56e0
0x0000000000435271 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004352e1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b135 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435201 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b0d3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e399 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004313b2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431b21 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431755 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431935 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431b15 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431575 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c5731 : push rsi ; cli ; jmp rsp
0x00000000004bab80 : push rsi ; cli ; push 0x6e ; ja 0x4bab0f ; ret 0x48f
0x00000000004bfc09 : push rsi ; cmc ; call qword ptr [rcx]
0x000000000043cf86 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043cf76 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043cf46 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042c6ad : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004b9fe0 : push rsi ; pop rdx ; je 0x4b9fac ; ret 0xacfc
0x000000000041ea42 : push rsi ; ret
0x000000000048586d : push rsi ; ret 0xf02
0x000000000045ebb8 : push rsi ; ret 0xf10
0x00000000004c8861 : push rsi ; std ; jmp qword ptr [rbx]
0x000000000043cf56 : push rsi ; sub eax, edx ; ret
0x000000000042e3ae : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042643b : push rsp ; add r11b, sil ; ret
0x000000000041b36c : push rsp ; and al, 0x10 ; call rax
0x0000000000464c93 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046689e : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004475b1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446c3e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000466f01 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b686 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e17a : push rsp ; and al, 0x68 ; call rax
0x000000000041f45a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004482dc : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044aec6 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491630 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004915ea : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041ac75 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004bea79 : push rsp ; call qword ptr [rbx]
0x00000000004c4a14 : push rsp ; imul eax, dword ptr [rax], 0xfa055800 ; call rsi
0x000000000041bafa : push rsp ; ret
0x0000000000429370 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004be55c : pushfq ; add al, 0 ; add byte ptr [rax], dl ; hlt ; call qword ptr [rax]
0x00000000004c7dbd : pushfq ; add byte ptr [rax], al ; jo 0x4c7da7 ; cld ; call qword ptr [rax]
0x00000000004be524 : pushfq ; add edi, esi ; call rdi
0x0000000000446dc0 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c885c : pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rbx]
0x0000000000413f2c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a070 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c365c : pushfq ; push rbp ; add byte ptr [rax], al ; or ch, 0xfd ; call qword ptr [rbx]
0x000000000040057d : pushfq ; ret
0x0000000000468363 : pushfq ; ret 0xb60f
0x000000000049b570 : pushfq ; ret 0xf45
0x00000000004a3434 : rcl ah, 1 ; clc ; jmp qword ptr [rax]
0x000000000042643a : rcl byte ptr [rbx + rax*2], 0xf3 ; ret
0x00000000004c8860 : rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rbx]
0x00000000004b9fdf : rcl dword ptr [rsi + 0x5a], cl ; je 0x4b9fad ; ret 0xacfc
0x00000000004b9fdb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4b9fb1 ; ret 0xacfc
0x00000000004a3440 : rcr al, 0xf8 ; call qword ptr [rax]
0x00000000004c39e0 : rcr bh, 0xf8 ; call qword ptr [rbx]
0x0000000000441ddc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3488 : rcr bl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000462e8a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000044063c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462c3c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a227 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000442740 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004173af : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041e97e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b239 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ebbe : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c247 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c08b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e433 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000041764d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000040f946 : rcr byte ptr [rbx], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004ba3fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004bda18 : rcr byte ptr [rdx - 0x7b8f0003], 0xfd ; call rax
0x00000000004a3154 : rcr byte ptr [rsi - 0x600f0008], 1 ; clc ; call qword ptr [rax]
0x000000000043ffba : rcr ch, cl ; std ; dec dword ptr [rax - 0x75] ; jge 0x43ffca ; call rbx
0x0000000000478729 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a1010 : rcr dword ptr [rip + 0x40], 1 ; add byte ptr [rax], al ; ret 0x401d
0x0000000000432776 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400589 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400592 ; ret
0x00000000004002e1 : ret
0x00000000004005d4 : ret 0
0x00000000004ae2e0 : ret 0x10
0x000000000044f3cb : ret 0x100
0x000000000046286f : ret 0x107
0x0000000000476056 : ret 0x10eb
0x000000000041bb22 : ret 0x110
0x000000000047a1fc : ret 0x114d
0x0000000000447078 : ret 0x1189
0x0000000000445e0b : ret 0x11e9
0x000000000048332a : ret 0x12
0x000000000040bcca : ret 0x120
0x00000000004744bc : ret 0x1272
0x000000000040acca : ret 0x130
0x000000000049d413 : ret 0x1374
0x000000000046d96f : ret 0x1376
0x000000000040a2ca : ret 0x13a
0x000000000046aaf1 : ret 0x1477
0x000000000041b211 : ret 0x148
0x00000000004159a2 : ret 0x149
0x0000000000419b23 : ret 0x14c
0x0000000000435b4c : ret 0x14d
0x000000000042382a : ret 0x17
0x0000000000435a89 : ret 0x180f
0x000000000044ee66 : ret 0x1874
0x0000000000425e45 : ret 0x1876
0x00000000004174e5 : ret 0x18eb
0x0000000000467ef5 : ret 0x190
0x00000000004888b2 : ret 0x1a75
0x00000000004ba95a : ret 0x1ad4
0x00000000004b90ed : ret 0x1b49
0x000000000041d95f : ret 0x1be
0x00000000004affb0 : ret 0x1d4
0x00000000004b0748 : ret 0x1d5
0x0000000000400c65 : ret 0x1d89
0x00000000004479c3 : ret 0x1e76
0x0000000000449557 : ret 0x1f0f
0x000000000041e5be : ret 0x1f76
0x000000000044f2e7 : ret 0x200
0x0000000000446bbc : ret 0x2176
0x00000000004a006c : ret 0x22
0x00000000004235c8 : ret 0x2288
0x00000000004a0cca : ret 0x2294
0x00000000004a0356 : ret 0x22a6
0x000000000049dd5a : ret 0x22df
0x000000000049d9ba : ret 0x22e1
0x000000000042f8a2 : ret 0x2373
0x000000000047f737 : ret 0x24
0x000000000046ffb4 : ret 0x25
0x00000000004144c9 : ret 0x2501
0x000000000041db0d : ret 0x2575
0x0000000000468322 : ret 0x2635
0x000000000045a27e : ret 0x2715
0x00000000004012b6 : ret 0x2773
0x0000000000465516 : ret 0x2774
0x000000000045167a : ret 0x27a1
0x000000000044d43a : ret 0x27e2
0x0000000000431056 : ret 0x280f
0x0000000000425e35 : ret 0x2876
0x000000000047f2c8 : ret 0x28f5
0x0000000000485bed : ret 0x2941
0x00000000004103cd : ret 0x2948
0x000000000049b4fa : ret 0x2949
0x00000000004327c1 : ret 0x294c
0x00000000004124db : ret 0x294d
0x000000000041d5e4 : ret 0x2a
0x000000000041e4cb : ret 0x2a75
0x00000000004173ca : ret 0x2b2c
0x000000000043f57a : ret 0x2b3
0x000000000041006f : ret 0x2b48
0x00000000004460ae : ret 0x2b49
0x0000000000415cf5 : ret 0x2b64
0x000000000043e142 : ret 0x2b77
0x000000000043dde7 : ret 0x2c76
0x0000000000400ffa : ret 0x2ca6
0x00000000004832b4 : ret 0x2e
0x0000000000462455 : ret 0x2e66
0x0000000000445f95 : ret 0x3101
0x00000000004036c6 : ret 0x3145
0x000000000046fa72 : ret 0x314c
0x00000000004af4a8 : ret 0x33
0x0000000000403e71 : ret 0x348
0x000000000044bfeb : ret 0x349
0x0000000000488908 : ret 0x357e
0x00000000004ba23a : ret 0x3827
0x000000000047ba12 : ret 0x3840
0x000000000040fa8f : ret 0x3841
0x000000000044039f : ret 0x3845
0x0000000000425e25 : ret 0x3876
0x0000000000442f39 : ret 0x3880
0x0000000000414dab : ret 0x389
0x00000000004b88c6 : ret 0x38ae
0x000000000047a656 : ret 0x38b
0x000000000044f8c1 : ret 0x3948
0x000000000041cde2 : ret 0x3949
0x000000000044ce06 : ret 0x394c
0x0000000000452788 : ret 0x394d
0x000000000043d562 : ret 0x3a01
0x000000000042f88b : ret 0x3a73
0x000000000044c913 : ret 0x3a76
0x0000000000442731 : ret 0x3b01
0x00000000004208da : ret 0x3ba
0x0000000000466fda : ret 0x3bba
0x000000000040e58e : ret 0x3ce8
0x00000000004457d5 : ret 0x3d83
0x000000000046ab77 : ret 0x3e8
0x0000000000469e92 : ret 0x3e9
0x000000000045956c : ret 0x3ee8
0x000000000049b27f : ret 0x3ee9
0x0000000000418ec2 : ret 0x4007
0x00000000004a1018 : ret 0x401d
0x00000000004666e6 : ret 0x408d
0x0000000000477f8f : ret 0x40bf
0x0000000000445bc0 : ret 0x4101
0x0000000000454da0 : ret 0x4108
0x0000000000456868 : ret 0x4110
0x000000000041c4fc : ret 0x4117
0x000000000046ec0c : ret 0x412f
0x000000000043f6ad : ret 0x4164
0x000000000044698e : ret 0x41c3
0x000000000042e21a : ret 0x4266
0x0000000000467ff2 : ret 0x428d
0x000000000044c90a : ret 0x4372
0x000000000044d39b : ret 0x4389
0x0000000000445a7f : ret 0x438b
0x000000000043f137 : ret 0x43e8
0x00000000004110c3 : ret 0x4401
0x0000000000455327 : ret 0x440f
0x0000000000464457 : ret 0x4410
0x000000000047b501 : ret 0x448d
0x0000000000489805 : ret 0x44c6
0x00000000004032b6 : ret 0x44e8
0x00000000004621d2 : ret 0x4502
0x000000000046d608 : ret 0x4574
0x0000000000462d18 : ret 0x45f6
0x00000000004b93c4 : ret 0x474c
0x000000000049d663 : ret 0x4776
0x000000000045a193 : ret 0x47e9
0x0000000000448445 : ret 0x4801
0x000000000042c491 : ret 0x4802
0x000000000042c56d : ret 0x4803
0x0000000000404250 : ret 0x4804
0x000000000042c53d : ret 0x4805
0x000000000042c525 : ret 0x4806
0x0000000000423553 : ret 0x4808
0x000000000044ee74 : ret 0x4809
0x0000000000458654 : ret 0x480f
0x000000000041ad79 : ret 0x4810
0x000000000044c7e0 : ret 0x4811
0x0000000000452dd2 : ret 0x481e
0x000000000041acbb : ret 0x4820
0x000000000045b89c : ret 0x482d
0x000000000044438f : ret 0x4830
0x00000000004012b2 : ret 0x4838
0x000000000042e126 : ret 0x4840
0x0000000000423668 : ret 0x48c3
0x000000000046718d : ret 0x48d
0x00000000004737f4 : ret 0x48e9
0x00000000004bab86 : ret 0x48f
0x0000000000402f5e : ret 0x4901
0x000000000044bbc3 : ret 0x4904
0x000000000042c7ae : ret 0x4906
0x0000000000456ed8 : ret 0x4908
0x0000000000469f29 : ret 0x4909
0x00000000004228c2 : ret 0x4910
0x0000000000420b36 : ret 0x4920
0x000000000041fab0 : ret 0x4930
0x000000000047e404 : ret 0x4976
0x00000000004437ba : ret 0x4a4e
0x000000000044621b : ret 0x4a50
0x000000000046c732 : ret 0x4b30
0x0000000000474553 : ret 0x4b5c
0x00000000004bc118 : ret 0x4bb6
0x00000000004058d5 : ret 0x4c01
0x000000000042c6f1 : ret 0x4c02
0x000000000044c6cf : ret 0x4c04
0x0000000000485935 : ret 0x4c08
0x00000000004524c6 : ret 0x4c40
0x0000000000448690 : ret 0x4c88
0x0000000000446aa1 : ret 0x4d02
0x00000000004ba5e7 : ret 0x4e27
0x0000000000469747 : ret 0x4eb
0x0000000000444848 : ret 0x4ee9
0x000000000044569e : ret 0x4f74
0x000000000042f874 : ret 0x5173
0x000000000044ec73 : ret 0x527e
0x0000000000462a98 : ret 0x5389
0x000000000045ad8b : ret 0x53e9
0x000000000047b79d : ret 0x5438
0x0000000000491656 : ret 0x5488
0x000000000044cc8a : ret 0x5489
0x000000000045a9e3 : ret 0x548b
0x00000000004b884c : ret 0x5508
0x00000000004054df : ret 0x5525
0x00000000004468bf : ret 0x56e0
0x0000000000420fa2 : ret 0x575
0x000000000046d97d : ret 0x576
0x00000000004bab18 : ret 0x5803
0x000000000040e74b : ret 0x589
0x00000000004b8520 : ret 0x591c
0x00000000004b9287 : ret 0x5ae4
0x0000000000449981 : ret 0x5c77
0x00000000004bafb2 : ret 0x62c1
0x000000000045c253 : ret 0x6348
0x00000000004116e2 : ret 0x6349
0x000000000047eeb7 : ret 0x63e8
0x000000000049a4b0 : ret 0x65e9
0x0000000000489bd7 : ret 0x6610
0x0000000000425db2 : ret 0x6620
0x00000000004236b5 : ret 0x66c3
0x00000000004744ce : ret 0x674
0x00000000004b853f : ret 0x67b2
0x000000000047d51d : ret 0x6876
0x000000000049d862 : ret 0x68e8
0x000000000043eb0d : ret 0x6b8
0x000000000049b557 : ret 0x6be9
0x000000000044557c : ret 0x6c
0x00000000004bb141 : ret 0x6f9
0x000000000043280e : ret 0x7280
0x0000000000475ea9 : ret 0x728d
0x000000000043dfab : ret 0x72e9
0x00000000004152f1 : ret 0x7401
0x000000000041e6bf : ret 0x7402
0x000000000041b875 : ret 0x7404
0x0000000000410be3 : ret 0x7408
0x0000000000400e3c : ret 0x7420
0x0000000000458a22 : ret 0x7450
0x000000000043bac9 : ret 0x7501
0x000000000043bad6 : ret 0x7502
0x0000000000426569 : ret 0x7504
0x000000000043cf04 : ret 0x7508
0x000000000043ba9b : ret 0x7510
0x0000000000426564 : ret 0x7518
0x000000000043baa8 : ret 0x7520
0x000000000043bab5 : ret 0x7540
0x0000000000472e41 : ret 0x758b
0x000000000042e762 : ret 0x7677
0x00000000004460a2 : ret 0x774
0x00000000004789ea : ret 0x777
0x000000000049b34b : ret 0x77e9
0x000000000046d90a : ret 0x7874
0x000000000041b1aa : ret 0x7ae9
0x0000000000446bea : ret 0x7b8
0x0000000000425d42 : ret 0x7e20
0x00000000004214bc : ret 0x7f10
0x00000000004616d6 : ret 0x7f3c
0x0000000000432b2e : ret 0x80
0x0000000000422699 : ret 0x8000
0x000000000046974c : ret 0x8001
0x00000000004725af : ret 0x8005
0x000000000047d3d6 : ret 0x8008
0x000000000046a132 : ret 0x8010
0x00000000004736ee : ret 0x8018
0x000000000046ffb8 : ret 0x804
0x000000000046c370 : ret 0x8116
0x0000000000486e8b : ret 0x8148
0x000000000045a9a4 : ret 0x8166
0x0000000000419c7c : ret 0x820f
0x0000000000404030 : ret 0x8301
0x000000000047d911 : ret 0x8308
0x000000000042e330 : ret 0x830f
0x000000000043de70 : ret 0x8341
0x0000000000421065 : ret 0x8348
0x000000000041b273 : ret 0x8349
0x000000000047fa79 : ret 0x8364
0x000000000043f1f7 : ret 0x83e8
0x0000000000411030 : ret 0x840
0x000000000046af52 : ret 0x8401
0x00000000004174f9 : ret 0x840f
0x000000000043df10 : ret 0x8444
0x000000000049b4c7 : ret 0x8445
0x000000000045c245 : ret 0x8504
0x0000000000462926 : ret 0x8508
0x0000000000412bf2 : ret 0x850f
0x0000000000468255 : ret 0x8545
0x0000000000418f92 : ret 0x8548
0x000000000044ec85 : ret 0x854d
0x000000000045981c : ret 0x858b
0x00000000004570bd : ret 0x85c6
0x000000000045510a : ret 0x85c7
0x000000000049a748 : ret 0x85e9
0x0000000000400bfe : ret 0x860f
0x000000000044f5d5 : ret 0x870f
0x00000000004b7e5e : ret 0x871e
0x00000000004616dd : ret 0x875
0x0000000000425e55 : ret 0x876
0x0000000000489800 : ret 0x87e
0x000000000044e66a : ret 0x87e9
0x000000000047e1c4 : ret 0x87f6
0x0000000000447bd1 : ret 0x8804
0x000000000045df12 : ret 0x880f
0x000000000044eb27 : ret 0x8840
0x0000000000446fd2 : ret 0x8901
0x000000000047097e : ret 0x8908
0x0000000000400ca6 : ret 0x890f
0x000000000044cd8f : ret 0x8941
0x0000000000400619 : ret 0x8944
0x00000000004110ab : ret 0x8945
0x0000000000449a41 : ret 0x8948
0x000000000040fe5d : ret 0x8949
0x0000000000403a97 : ret 0x894c
0x0000000000445b9f : ret 0x894d
0x00000000004792bb : ret 0x894e
0x000000000048348c : ret 0x89e9
0x000000000047801e : ret 0x8b
0x000000000046241a : ret 0x8b04
0x000000000046ac43 : ret 0x8b05
0x00000000004ba68e : ret 0x8b36
0x000000000044eefa : ret 0x8b41
0x0000000000401424 : ret 0x8b48
0x0000000000410826 : ret 0x8b49
0x000000000047923e : ret 0x8b4a
0x0000000000411380 : ret 0x8b4c
0x00000000004802b5 : ret 0x8d01
0x00000000004523ea : ret 0x8d04
0x0000000000459550 : ret 0x8d0f
0x000000000040d2ef : ret 0x8d48
0x0000000000403246 : ret 0x8d49
0x0000000000465a98 : ret 0x8d4a
0x0000000000411336 : ret 0x8d4c
0x000000000041c55c : ret 0x8d4e
0x0000000000410371 : ret 0x8e0f
0x000000000040144e : ret 0x900
0x00000000004210e5 : ret 0x90c3
0x000000000041230b : ret 0x938b
0x000000000043f3e7 : ret 0x93e8
0x0000000000485840 : ret 0x940f
0x000000000048a456 : ret 0x941
0x00000000004657b8 : ret 0x94c
0x000000000047aaef : ret 0x950f
0x0000000000455869 : ret 0x9522
0x00000000004038d8 : ret 0x953d
0x00000000004b94b3 : ret 0x9576
0x00000000004815f0 : ret 0x9589
0x000000000041b1c1 : ret 0x976
0x000000000044f15d : ret 0x9de8
0x0000000000488989 : ret 0x9e74
0x0000000000410288 : ret 0x9e9
0x0000000000473bf9 : ret 0x9f75
0x00000000004adae0 : ret 0xa
0x00000000004915c0 : ret 0xa074
0x00000000004b91a3 : ret 0xa514
0x0000000000468c7e : ret 0xa9be
0x00000000004b9627 : ret 0xac65
0x000000000049db1e : ret 0xace8
0x00000000004b9fe4 : ret 0xacfc
0x000000000043df96 : ret 0xaf0f
0x0000000000485987 : ret 0xb3e8
0x000000000041bb5f : ret 0xb48b
0x0000000000402819 : ret 0xb60f
0x000000000046800b : ret 0xb70f
0x000000000043ea40 : ret 0xb8
0x000000000045fba9 : ret 0xb848
0x000000000044ecc5 : ret 0xb87f
0x0000000000426437 : ret 0xb8c3
0x0000000000466f42 : ret 0xb8e9
0x00000000004846d2 : ret 0xb908
0x00000000004b94ee : ret 0xb9b9
0x000000000045608d : ret 0xbb41
0x0000000000478b12 : ret 0xbc41
0x000000000049b8e5 : ret 0xbc80
0x000000000046065e : ret 0xbd83
0x00000000004848c0 : ret 0xbe08
0x00000000004b9244 : ret 0xbe57
0x000000000045aa78 : ret 0xbf07
0x0000000000483ca1 : ret 0xbf08
0x0000000000422559 : ret 0xc000
0x000000000048ec5e : ret 0xc001
0x000000000048ec12 : ret 0xc002
0x0000000000412b33 : ret 0xc031
0x000000000046b4b0 : ret 0xc084
0x0000000000425c00 : ret 0xc085
0x000000000040e8d6 : ret 0xc148
0x00000000004670ad : ret 0xc269
0x000000000045af46 : ret 0xc283
0x000000000042f744 : ret 0xc2b2
0x000000000043e1b1 : ret 0xc35b
0x00000000004b79e2 : ret 0xc4c3
0x00000000004b8df8 : ret 0xc4ff
0x00000000004328a8 : ret 0xc580
0x000000000049b4fd : ret 0xc5e9
0x00000000004824c0 : ret 0xc6e9
0x0000000000420fe1 : ret 0xc6eb
0x0000000000437fa0 : ret 0xc748
0x000000000041be0c : ret 0xc789
0x0000000000414d9c : ret 0xc883
0x000000000047d023 : ret 0xc931
0x0000000000442d79 : ret 0xc985
0x0000000000423521 : ret 0xc9ff
0x000000000048104d : ret 0xcb73
0x00000000004b888a : ret 0xcca7
0x00000000004ba96d : ret 0xcd11
0x000000000041d1f1 : ret 0xce31
0x0000000000404ce4 : ret 0xce80
0x0000000000480925 : ret 0xce83
0x0000000000418a3b : ret 0xcf31
0x00000000004adee0 : ret 0xd
0x000000000047b92a : ret 0xd021
0x000000000044222f : ret 0xd029
0x000000000043271c : ret 0xd073
0x00000000004054ee : ret 0xd089
0x0000000000464095 : ret 0xd108
0x0000000000486859 : ret 0xd129
0x000000000049a116 : ret 0xd284
0x0000000000485757 : ret 0xd309
0x0000000000488d6b : ret 0xd348
0x000000000045af63 : ret 0xd529
0x00000000004868d0 : ret 0xd629
0x0000000000466dfd : ret 0xd721
0x00000000004867e2 : ret 0xd729
0x000000000043df9b : ret 0xd889
0x00000000004ba405 : ret 0xd8f
0x00000000004776a3 : ret 0xd8f7
0x00000000004007b6 : ret 0xd975
0x000000000047b6f0 : ret 0xda38
0x000000000040f7a5 : ret 0xdaf7
0x0000000000448101 : ret 0xdb85
0x00000000004ba4e6 : ret 0xdcd9
0x000000000046a690 : ret 0xdd72
0x00000000004b9462 : ret 0xde5d
0x0000000000410965 : ret 0xde74
0x000000000049b0c2 : ret 0xde89
0x00000000004b81f1 : ret 0xde9e
0x0000000000486ca8 : ret 0xdee9
0x0000000000422419 : ret 0xe000
0x000000000043ba59 : ret 0xe074
0x0000000000446bdd : ret 0xe077
0x0000000000443a19 : ret 0xe083
0x000000000044b163 : ret 0xe183
0x0000000000443f92 : ret 0xe1eb
0x000000000044706b : ret 0xe277
0x000000000040db2c : ret 0xe281
0x0000000000400dad : ret 0xe283
0x000000000043f197 : ret 0xe3e8
0x0000000000466160 : ret 0xe575
0x00000000004174d7 : ret 0xe675
0x0000000000457a93 : ret 0xe680
0x00000000004ba606 : ret 0xe71f
0x00000000004012a8 : ret 0xe72
0x0000000000452920 : ret 0xe783
0x000000000046ddf5 : ret 0xe874
0x0000000000459405 : ret 0xe87f
0x0000000000454ca2 : ret 0xe883
0x000000000046e19e : ret 0xe8c0
0x000000000040076e : ret 0xe8c1
0x0000000000425353 : ret 0xe901
0x0000000000402ae2 : ret 0xe902
0x0000000000449b49 : ret 0xe904
0x000000000047b321 : ret 0xe907
0x00000000004235b6 : ret 0xe908
0x00000000004291d6 : ret 0xe910
0x0000000000452ec9 : ret 0xe920
0x000000000041fb53 : ret 0xe96e
0x00000000004b8967 : ret 0xe970
0x00000000004888cc : ret 0xe974
0x000000000041fcff : ret 0xe977
0x000000000043e13a : ret 0xea81
0x0000000000457a17 : ret 0xeac0
0x0000000000400c81 : ret 0xeac1
0x00000000004228e6 : ret 0xeb10
0x000000000041fb1f : ret 0xeb5b
0x000000000040e54a : ret 0xeb72
0x0000000000402178 : ret 0xebe8
0x00000000004bb118 : ret 0xec2
0x000000000047f259 : ret 0xec75
0x00000000004704e8 : ret 0xed75
0x000000000044acbe : ret 0xed85
0x0000000000445b1f : ret 0xee75
0x00000000004badba : ret 0xef32
0x0000000000418566 : ret 0xef75
0x0000000000443891 : ret 0xefc1
0x00000000004222d9 : ret 0xf000
0x000000000040d4b8 : ret 0xf001
0x00000000004027ca : ret 0xf01
0x0000000000419f46 : ret 0xf02
0x000000000041b7f0 : ret 0xf04
0x000000000045d09e : ret 0xf08
0x0000000000459f27 : ret 0xf0e9
0x000000000046b0b6 : ret 0xf0eb
0x000000000041af33 : ret 0xf0f
0x0000000000421472 : ret 0xf10
0x0000000000461e45 : ret 0xf229
0x000000000044fb56 : ret 0xf301
0x000000000045d0da : ret 0xf40
0x00000000004681dd : ret 0xf43
0x000000000049b571 : ret 0xf45
0x00000000004640ba : ret 0xf48
0x000000000045a4e4 : ret 0xf4c
0x0000000000402aeb : ret 0xf4e9
0x00000000004439fc : ret 0xf631
0x0000000000421289 : ret 0xf66
0x000000000043dd5c : ret 0xf685
0x000000000049105a : ret 0xf706
0x000000000041bb43 : ret 0xf710
0x0000000000479d25 : ret 0xf74
0x00000000004268dc : ret 0xf748
0x0000000000465c00 : ret 0xf749
0x00000000004327ce : ret 0xf80
0x0000000000422199 : ret 0xf800
0x00000000004b80d0 : ret 0xf869
0x00000000004a31b4 : ret 0xf8bd
0x00000000004a3754 : ret 0xf916
0x00000000004a358c : ret 0xf919
0x000000000040446a : ret 0xf929
0x000000000045c952 : ret 0xfa39
0x0000000000459929 : ret 0xfa80
0x000000000048a866 : ret 0xfa81
0x0000000000405502 : ret 0xfac1
0x000000000044645a : ret 0xfb9e
0x0000000000422059 : ret 0xfc00
0x000000000048bda6 : ret 0xfc01
0x000000000048bd5a : ret 0xfc02
0x000000000044cc4a : ret 0xfc0e
0x000000000043f28a : ret 0xfc3
0x000000000046bc3a : ret 0xfd34
0x000000000046b0ea : ret 0xfd42
0x00000000004521da : ret 0xfd43
0x0000000000446cb0 : ret 0xfd83
0x00000000004027a0 : ret 0xfdf
0x0000000000421f19 : ret 0xfe00
0x0000000000418452 : ret 0xfe7e
0x000000000043de93 : ret 0xfe83
0x00000000004326ee : ret 0xfec5
0x0000000000421dd9 : ret 0xff00
0x00000000004914fe : ret 0xff2
0x000000000042e14a : ret 0xff3
0x0000000000421c99 : ret 0xff80
0x0000000000488ba6 : ret 0xff81
0x0000000000488b5a : ret 0xff82
0x000000000040c22a : ret 0xff99
0x0000000000486e40 : ret 0xff9f
0x00000000004524b2 : ret 0xffb0
0x00000000004004f0 : ret 0xffb8
0x000000000048eb47 : ret 0xffbf
0x0000000000421b59 : ret 0xffc0
0x0000000000400396 : ret 0xffd0
0x0000000000420e1e : ret 0xffdf
0x000000000044f318 : ret 0xffe0
0x00000000004085da : ret 0xffe2
0x000000000049e14a : ret 0xffe7
0x000000000044144a : ret 0xffe8
0x000000000044134a : ret 0xffe9
0x0000000000459bcc : ret 0xffee
0x000000000040edcc : ret 0xffef
0x000000000040da7e : ret 0xfff0
0x0000000000421799 : ret 0xfff8
0x000000000041c371 : ret 0xfff9
0x000000000043ee49 : ret 0xfffb
0x0000000000421659 : ret 0xfffc
0x0000000000441adb : ret 0xfffd
0x0000000000405298 : ret 0xfffe
0x00000000004104ca : ret 0xffff
0x000000000040fd91 : ret 1
0x0000000000419b0a : ret 2
0x000000000042f502 : ret 3
0x000000000040305f : ret 4
0x000000000041a456 : ret 5
0x0000000000418bb0 : ret 6
0x00000000004b1f84 : ret 7
0x000000000040a3de : ret 8
0x000000000043c50a : ret 9
0x000000000046244d : retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462420
0x00000000004925ef : retf -0x7af1 ; call qword ptr [rsi]
0x000000000043d625 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e275 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000466c5b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004162d7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004776ae : rol bl, 1 ; mov eax, 1 ; ret
0x0000000000425f9d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e122 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465512 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004b1980 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447958 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489ca6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000460365 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e66d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049bfa6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f6bb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a651 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042cb32 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000481ea1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046ae81 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46ae78 ; ret
0x000000000047872b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442ae6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416728 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004664d2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004bdff8 : rol byte ptr [rbx], 0xfe ; call rax
0x000000000043e131 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c2bb : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004406c7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e065 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004a3098 : rol byte ptr [rcx - 8], 1 ; jmp rax
0x00000000004664b2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043df46 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044ddd2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043dfa7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043df92 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000043271e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466512 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004c1270 : rol byte ptr [rdx - 0xa], 0xff ; ret
0x00000000004664c2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004447f6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c667 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466502 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004a3988 : rol byte ptr [rsi], 0xf9 ; inc dword ptr [rax + 8] ; stc ; call qword ptr [rax]
0x00000000004b79e0 : rol cl, 0xc2 ; ret
0x0000000000467fdf : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046645c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000400543 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x000000000046aef3 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044403d : rol ecx, -0x1f ; add edx, ebx ; loopne 0x4440a7 ; pop rbp ; ret
0x0000000000425e22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x425e69 ; add rax, rdi ; ret
0x00000000004237c7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000041077a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473739 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446baa : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000049d368 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cb91 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049c712 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046aafc : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ab2f ; ret
0x00000000004425c8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479126 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004012a5 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049aea7 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x0000000000442f35 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467960 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f21d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046d8ac : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f20e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000479cae : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042ca0c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000425df2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488986 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004888c9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004237c4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004add88 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000425f95 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488126 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000468faa : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fd8bd
0x000000000045da4a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b2c8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000425de2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000425e12 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000425e02 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041baf7 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041be16 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000004152aa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000478fc3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000459569 : ror byte ptr [rax - 0x77], 1 ; ret 0x3ee8
0x0000000000412765 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000469dc5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000040db29 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000420a32 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000047f6ca : ror byte ptr [rax - 0x77], 5 ; pop rsi ; ret
0x000000000041768d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004131b1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4131c6 ; ret
0x000000000047aae9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fabf : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046aa20 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041c996 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478458 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cbde : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c555 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb0d74
0x0000000000471d72 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472afc : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456bd2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a52a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000475c7d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449143 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469a1e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448684 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047a7da : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487ed4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046d90f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049d65c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004479c0 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446bb9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447040 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000046ae73 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000464f42 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f4ae : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472225 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043dde4 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x000000000041137a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426719 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000004424cc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468008 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041db8d : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046aca7 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ece6 : ror byte ptr [rdi], 0x84 ; ret
0x000000000044640c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x0000000000437f2a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000437f66 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459bc9 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x0000000000457bd7 : ror byte ptr [rdi], 0x8a ; ret 8
0x00000000004908a8 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044222c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c05c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047b79a : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b1a7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x00000000004616d3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047aaec : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485754 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047b6ed : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x0000000000466f3f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x0000000000466dfa : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f7a2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466a2e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fa8c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040db3e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40db28 ; ret
0x0000000000418fb9 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d585 : ror byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047ba0f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bb23 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004c7840 : ror byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x0000000000457bd6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004a3454 : ror dl, 0xf8 ; call qword ptr [rax]
0x0000000000410493 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000047ce46 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000472b4c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000479fb3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a190 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432772 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047df71 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041492d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414927 ; ret
0x00000000004637fd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4637f7 ; ret
0x000000000040eac8 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004052d2 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000044ec82 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c615 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441ad5 : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41dd96
0x0000000000441b1a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41dd96
0x000000000043ba57 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000488d68 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x0000000000467efb : ror dword ptr [rdi], -0x6c ; ret
0x000000000042eed8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f5e4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3b6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042f336 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f674 : ror dword ptr [rdi], -0x7b ; je 0x42f684 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f16b : ror dword ptr [rdi], -0x7b ; jno 0x42f180 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f233 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042eeb0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041492c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414928 ; ret
0x00000000004637fc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4637f8 ; ret
0x0000000000446bb4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004c3329 : sahf ; clc ; call qword ptr [rdx]
0x00000000004c33b1 : sahf ; clc ; jmp rbx
0x00000000004a3155 : sahf ; clc ; push rax ; lahf ; clc ; call qword ptr [rax]
0x000000000042b5de : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479601 : sahf ; ret 0x148
0x00000000004b88c5 : sahf ; ret 0x38ae
0x0000000000450dd0 : sahf ; ret 0x8348
0x000000000047b954 : sahf ; ret 0xe8c1
0x000000000049b583 : sahf ; ret 0xf45
0x00000000004c67dd : sahf ; std ; call rcx
0x000000000041672e : sal bh, 0xd8 ; ret
0x000000000043e289 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000422697 : sal bh, 1 ; ret 0x8000
0x0000000000422557 : sal bh, 1 ; ret 0xc000
0x0000000000422417 : sal bh, 1 ; ret 0xe000
0x00000000004222d7 : sal bh, 1 ; ret 0xf000
0x0000000000422197 : sal bh, 1 ; ret 0xf800
0x0000000000422057 : sal bh, 1 ; ret 0xfc00
0x0000000000421f17 : sal bh, 1 ; ret 0xfe00
0x0000000000421dd7 : sal bh, 1 ; ret 0xff00
0x0000000000421c97 : sal bh, 1 ; ret 0xff80
0x0000000000421b57 : sal bh, 1 ; ret 0xffc0
0x0000000000421a17 : sal bh, 1 ; ret 0xffe0
0x00000000004218d7 : sal bh, 1 ; ret 0xfff0
0x0000000000421797 : sal bh, 1 ; ret 0xfff8
0x0000000000421657 : sal bh, 1 ; ret 0xfffc
0x0000000000421517 : sal bh, 1 ; ret 0xfffe
0x000000000045a1e4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466c4f : sal bl, 1 ; ret
0x0000000000473252 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000425dd8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049de53 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049de38 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458a1e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004131b4 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004425f1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416285 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043d790 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414930 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e2cb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040db43 : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000473d4f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000466c8b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047e0ad : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000047aa3a : sal byte ptr [rcx + rbx - 0x41], 0x9c ; ret
0x000000000042370c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000400579 : sal byte ptr [rcx + rdx - 0x41], 0x9c ; ret
0x000000000047a89b : sal byte ptr [rcx - 0x41], 0x9c ; ret
0x00000000004425c6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440ad2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004a3a18 : sal byte ptr [rdi - 7], 1 ; jmp rax
0x00000000004654db : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047604d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x476072
0x00000000004235c3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a39d8 : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a39dc : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d381 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040da79 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047ae31 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004789cf : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473be7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004152a8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000445089 : sal dword ptr [rcx], cl ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000432775 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043ba96 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044da17 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042f959 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049e8b1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a3479 : salc ; clc ; jmp rax
0x000000000043da0b : salc ; clc ; ret
0x0000000000473be9 : salc ; ret
0x00000000004c7e10 : sar al, 1 ; cld ; call qword ptr [rax]
0x000000000048583a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483bfc : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484243 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d393 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471041 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a48c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449b41 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3a3c : sar byte ptr [rax - 7], 1 ; push rax ; js 0x4a3a43 ; call qword ptr [rax]
0x00000000004a3a6c : sar byte ptr [rcx + rdi*8 - 1], 0xd0 ; jl 0x4a3a73 ; jmp rax
0x0000000000443f8d : sar byte ptr [rcx], cl ; ret
0x0000000000443952 : sar byte ptr [rdi + 0x4a4f58], 0xe8 ; ret
0x0000000000474c52 : sar byte ptr [rdi + 0x4b5d5c], 0xe8 ; ret
0x0000000000474cdc : sar byte ptr [rdi + 0x4bc3b8], 0x83 ; ret
0x00000000004c29c0 : sar byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x00000000004a3094 : sar byte ptr [rdi], 0xf8 ; call rax
0x00000000004bda20 : sar byte ptr [rdi], 1 ; std ; jmp qword ptr [rax]
0x00000000004615fc : sar byte ptr [rdx], 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000440ffc : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c63c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b925f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004679fa : sar byte ptr [rsi], cl ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000441ce9 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441cdc : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000435553 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43555e ; ret
0x00000000004004ee : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402bce : sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x00000000004a32a9 : sar eax, -1 ; mov al, 0xc1 ; clc ; push qword ptr [rax] ; ret 0xfff8
0x00000000004a322d : sar eax, -1 ; ret 0xfff8
0x000000000046496c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047ca6b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a3431 : sar eax, cl ; call rax
0x0000000000441bb4 : sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441ba6 : sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441b99 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004c2891 : sar ebp, cl ; jmp qword ptr [rdx]
0x00000000004b8fc3 : sar ecx, 1 ; jnp 0x4b8f84 ; ret
0x0000000000425f97 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000046496b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000425f96 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047681a : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476b89 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x0000000000476c9b : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x0000000000469c80 : sbb al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bfa54 : sbb al, 0x50 ; cmc ; jmp qword ptr [rcx]
0x0000000000443f78 : sbb al, 0x50 ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004c39dc : sbb al, 0x59 ; add byte ptr [rax], al ; rcr bh, 0xf8 ; call qword ptr [rbx]
0x0000000000418973 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x000000000046795e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000441a70 : sbb al, 0xc3 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000049c766 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004c24a9 : sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004a34f9 : sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3635 : sbb al, 0xf9 ; call rsp
0x00000000004a3631 : sbb al, 0xf9 ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004a34b5 : sbb al, 0xf9 ; jmp qword ptr [rax]
0x000000000047bc60 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x0000000000460915 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004a33d0 : sbb bh, 0xf8 ; inc dword ptr [rax - 0x1f] ; clc ; call qword ptr [rax]
0x00000000004a3509 : sbb bh, cl ; call rsi
0x00000000004a3505 : sbb bh, cl ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004b7d45 : sbb bl, byte ptr [rsi] ; ret
0x00000000004782c4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000047a897 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rcx - 0x41], 0x9c ; ret
0x000000000049ea4b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041052a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047aae6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047148b : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004782c5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000416ef3 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000043e78a : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000447e81 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000040991e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bf7
0x0000000000414991 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000410281 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041dc27 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000047a898 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx - 0x41], 0x9c ; ret
0x0000000000412303 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ea4c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c48e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449224 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c48d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041524f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000464c95 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444769 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416aa3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042c8d1 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410949 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004162c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004647db : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004713a9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b369 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000464d73 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041c823 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410823 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041052b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000464dc7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047aae7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004c67d8 : sbb byte ptr [rdi - 0x616c0000], al ; std ; call rcx
0x000000000041e342 : sbb byte ptr [rdi], cl ; test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c60b0 : sbb ch, 0xfa ; jmp rdi
0x00000000004129b5 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x000000000042328d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429d2d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e7d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422989 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000423199 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b97a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b19a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b58a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042adaa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a88d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a06d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422c0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042984d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000422f4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000423269 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042af49 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423339 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429b8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042936d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a54d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000004230ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004228dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000422cdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b43a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bd6a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004231bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004229ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004296ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a4f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422dad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004297e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a003 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b33b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bc6b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042301d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a823 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b23 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429643 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a343 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b48b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042acab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a73 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a3484 : sbb dl, 0xf8 ; call rax
0x000000000047681f : sbb dl, dh ; jmp r11
0x00000000004943b8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c93c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x00000000004bfa51 : sbb dword ptr [rax], eax ; add byte ptr [rax + rdx*2], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000494341 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004943b9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004754fd : sbb dword ptr [rbp + 0x4b], 0 ; call 0x401726
0x0000000000453168 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004ba5fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000454dc6 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000411a2a : sbb dword ptr [rdx], ecx ; pop rbx ; ret
0x000000000043d467 : sbb eax, -1 ; ret
0x00000000004427b5 : sbb eax, 0 ; leave ; ret
0x00000000004a34b1 : sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3569 : sbb eax, 0x1d42fff9 ; stc ; call rdx
0x00000000004a34e9 : sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x00000000004a36a5 : sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x000000000049e9d0 : sbb eax, 0x22cbab ; jne 0x49e9c0 ; pop rbx ; ret
0x00000000004a1011 : sbb eax, 0x40 ; add byte ptr [rax], al ; ret 0x401d
0x000000000045c94d : sbb eax, 0xe81ffec1 ; ret 0xfa39
0x0000000000494161 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004941d9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047872a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049c711 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d465 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000047b499 : sbb ebx, 0x89000001 ; ret
0x000000000045c250 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000004468c7 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3491 : sbb ecx, edi ; call qword ptr [rax]
0x00000000004a3551 : sbb ecx, edi ; jmp rdx
0x00000000004a354d : sbb ecx, edi ; push qword ptr [rdx + 0x19] ; stc ; jmp rdx
0x00000000004c66d5 : sbb edi, ebx ; jmp qword ptr [rdx]
0x00000000004a357d : sbb edi, ecx ; call qword ptr [rdx]
0x00000000004a34c1 : sbb edi, ecx ; call rax
0x00000000004a34bd : sbb edi, ecx ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a34fd : sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000004a36bd : sbb edi, ecx ; jmp rax
0x00000000004c4db9 : sbb edx, edi ; jmp rdx
0x00000000004a3508 : sbb r15b, cl ; call rsi
0x00000000004258ad : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042b9ce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000042bacd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042534d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000401304 : scasd eax, dword ptr [rdi] ; ret
0x00000000004103cc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043dfaa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420a38 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401423 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043df95 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044f7d0 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048812d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004425cc : setae al ; ret
0x000000000041672c : setne al ; neg eax ; ret
0x0000000000443f90 : setne dl ; jmp 0x443f78
0x0000000000465bb5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a3174 : shl byte ptr [rdi - 0x570f0008], 1 ; clc ; call qword ptr [rax]
0x000000000043d6af : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000043ba53 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000421285 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042f86b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042f882 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465756 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465767 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f761 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004aefb0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9148 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042f7e6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d50b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465752 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f89d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f886 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f86f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e32b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f801 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425bfc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042f6c1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444041 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044403e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000478c8c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478c17 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478be6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c611 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000474050 : shl edx, 4 ; call 0x40031d
0x0000000000476051 : shl edx, 5 ; add rdx, rax ; jmp 0x47606e
0x0000000000478c8b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478c16 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478be5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047404f : shl rdx, 4 ; call 0x40031e
0x0000000000476050 : shl rdx, 5 ; add rdx, rax ; jmp 0x47606f
0x000000000047604f : shl rdx, 5 ; add rdx, rax ; jmp 0x476070
0x000000000046a6af : shr bl, cl ; ret
0x0000000000445a7d : shr bl, cl ; ret 0x438b
0x000000000044d8b9 : shr byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44d8cd ; call rax
0x000000000042e2cf : shr byte ptr [rcx], 0xc8 ; ret
0x000000000044c638 : shr byte ptr [rcx], cl ; ret
0x0000000000467ff0 : shr byte ptr [rcx], cl ; ret 0x428d
0x0000000000425f9b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000478660 : shr byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x000000000045ea47 : shr cl, cl ; ret
0x0000000000426a29 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e1ba : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e199 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000478d9c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478d21 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478cf0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464a73 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000478d9b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478d20 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478cef : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464a72 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae189 : sldt word ptr [rax] ; ret
0x0000000000445b0c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000426431 : stc ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000041a4d2 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a3892 : stc ; call qword ptr [rax + 0x10fff916]
0x00000000004a34b2 : stc ; call qword ptr [rax + 0x20fff91c]
0x00000000004a3492 : stc ; call qword ptr [rax]
0x00000000004a355e : stc ; call qword ptr [rdx + 0x22fff91e]
0x00000000004a357e : stc ; call qword ptr [rdx]
0x00000000004a34fa : stc ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a34da : stc ; call qword ptr [rsi]
0x00000000004a34c2 : stc ; call rax
0x0000000000466d89 : stc ; call rbx
0x00000000004c3eb2 : stc ; call rdi
0x00000000004a356e : stc ; call rdx
0x00000000004a350a : stc ; call rsi
0x00000000004a3636 : stc ; call rsp
0x000000000047a7d2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f6c6 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; pop rsi ; ret
0x00000000004876f7 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004859aa : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a354a : stc ; dec esp ; sbb ecx, edi ; push qword ptr [rdx + 0x19] ; stc ; jmp rdx
0x00000000004a34be : stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3696 : stc ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a398a : stc ; inc dword ptr [rax + 8] ; stc ; call qword ptr [rax]
0x00000000004a38be : stc ; inc dword ptr [rax] ; adc ecx, edi ; push qword ptr [rax + 0x10] ; stc ; jmp rax
0x00000000004a39e6 : stc ; inc dword ptr [rax] ; ja 0x4a39e9 ; call qword ptr [rax]
0x00000000004a3aba : stc ; inc dword ptr [rax] ; jg 0x4a3abd ; jmp qword ptr [rax]
0x00000000004a3a76 : stc ; inc dword ptr [rax] ; jge 0x4a3a79 ; jmp qword ptr [rax]
0x00000000004a3a9a : stc ; inc dword ptr [rax] ; jle 0x4a3a9d ; jmp qword ptr [rax]
0x00000000004a34ae : stc ; inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a356a : stc ; inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x00000000004a3506 : stc ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004a34f6 : stc ; inc dword ptr [rsi] ; sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3632 : stc ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004a39d6 : stc ; inc eax ; jbe 0x4a39d9 ; call rax
0x00000000004a3a92 : stc ; inc eax ; jge 0x4a3a95 ; jmp rax
0x00000000004a3a6a : stc ; inc eax ; jl 0x4a3a6d ; call rax
0x00000000004a3ab2 : stc ; inc eax ; jle 0x4a3ab5 ; jmp rax
0x00000000004a34e6 : stc ; inc esi ; sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x000000000042aa82 : stc ; je 0x42aa4e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000495e42 : stc ; je 0x495e0e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a34b6 : stc ; jmp qword ptr [rax]
0x00000000004a3782 : stc ; jmp qword ptr [rdx + 0x12fff910]
0x000000000049bb62 : stc ; jmp qword ptr [rdx]
0x00000000004a34fe : stc ; jmp qword ptr [rsi]
0x00000000004a34a6 : stc ; jmp rax
0x00000000004a3552 : stc ; jmp rdx
0x00000000004a34ee : stc ; jmp rsi
0x00000000004a361a : stc ; jmp rsp
0x00000000004b8fc4 : stc ; jnp 0x4b8f83 ; ret
0x0000000000432128 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d4f7 : stc ; mov r15, rax ; jmp 0x46d4c5
0x00000000004a38c2 : stc ; push qword ptr [rax + 0x10] ; stc ; jmp rax
0x00000000004a36d6 : stc ; push qword ptr [rax + 0x16] ; stc ; jmp rax
0x00000000004a34ba : stc ; push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3a12 : stc ; push qword ptr [rax - 0x2f000689] ; ja 0x4a3a1d ; jmp rax
0x00000000004a3a8e : stc ; push qword ptr [rax - 0x3f000683] ; jge 0x4a3a99 ; jmp rax
0x00000000004a3a66 : stc ; push qword ptr [rax - 0x3f000684] ; jl 0x4a3a71 ; call rax
0x00000000004a39d2 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a39dd ; call rax
0x00000000004a354e : stc ; push qword ptr [rdx + 0x19] ; stc ; jmp rdx
0x00000000004a377e : stc ; push qword ptr [rdx] ; adc ecx, edi ; jmp qword ptr [rdx + 0x12fff910]
0x00000000004a3502 : stc ; push qword ptr [rsi + 0x46fff91a] ; sbb bh, cl ; call rsi
0x00000000004a362e : stc ; push qword ptr [rsp + rbx + 0x1c44fff9] ; stc ; call rsp
0x00000000004a3a1e : stc ; push rax ; ja 0x4a3a21 ; call qword ptr [rax]
0x00000000004a39e2 : stc ; push rax ; jbe 0x4a39e9 ; inc dword ptr [rax] ; ja 0x4a39ed ; call qword ptr [rax]
0x00000000004a3a3e : stc ; push rax ; js 0x4a3a41 ; call qword ptr [rax]
0x00000000004a36a2 : stc ; push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x0000000000426bd3 : stc ; ret
0x000000000043da0a : stc ; salc ; clc ; ret
0x0000000000435a54 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004bda4e : std ; call qword ptr [rax - 0x1f0002a5]
0x00000000004bd9ae : std ; call qword ptr [rax]
0x00000000004c3662 : std ; call qword ptr [rbx]
0x00000000004bda1e : std ; call rax
0x00000000004c67de : std ; call rcx
0x00000000004bdfe6 : std ; call rsp
0x00000000004bdaa2 : std ; dec dword ptr [rax - 0x4f00023e] ; ret 0xfffd
0x000000000043ffbc : std ; dec dword ptr [rax - 0x75] ; jge 0x43ffc8 ; call rbx
0x000000000044026f : std ; dec dword ptr [rax - 0x75] ; jge 0x44027b ; call rbx
0x0000000000441e07 : std ; dec dword ptr [rax - 0x75] ; jge 0x441e13 ; call rbx
0x000000000043f4d1 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043fe7a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044027d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043fe87 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43fe93 ; call rbx
0x000000000043ffae : std ; dec dword ptr [rcx - 0x75] ; jge 0x43ffba ; call rbx
0x00000000004400f1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4400fd ; call rbx
0x0000000000440261 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44026d ; call rbx
0x0000000000441a7f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441a8b ; call rbx
0x0000000000441ba7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441bb3 ; call rbx
0x0000000000441cea : std ; dec dword ptr [rcx - 0x75] ; jge 0x441cf6 ; call rbx
0x0000000000441deb : std ; dec dword ptr [rcx - 0x75] ; jge 0x441df7 ; call rbx
0x00000000004bda4a : std ; inc dword ptr [rax + 0x59] ; std ; call qword ptr [rax - 0x1f0002a5]
0x00000000004bdb12 : std ; inc dword ptr [rax] ; leave ; std ; push qword ptr [rax - 0x37] ; std ; jmp rdx
0x000000000047324f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bdaaa : std ; inc eax ; ret 0xfffd
0x00000000004bda2a : std ; inc eax ; std ; call qword ptr [rax]
0x0000000000477efe : std ; jbe 0x477f0b ; ret
0x00000000004bda92 : std ; jmp qword ptr [rax - 0x1f000244]
0x00000000004bda82 : std ; jmp qword ptr [rax - 0x1f00024d]
0x00000000004bda72 : std ; jmp qword ptr [rax - 0x1f000256]
0x00000000004bda62 : std ; jmp qword ptr [rax - 0x1f00025f]
0x00000000004bda22 : std ; jmp qword ptr [rax]
0x00000000004c8862 : std ; jmp qword ptr [rbx]
0x00000000004c2892 : std ; jmp qword ptr [rdx]
0x00000000004bda66 : std ; jmp rax
0x00000000004bdb1a : std ; jmp rdx
0x00000000004bdfde : std ; jmp rsp
0x000000000047d2e8 : std ; mov r15, rax ; jmp 0x47d302
0x000000000043194b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bda26 : std ; push qword ptr [rax + 0x44] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bdb16 : std ; push qword ptr [rax - 0x37] ; std ; jmp rdx
0x00000000004bdaa6 : std ; push qword ptr [rax - 0x3f00023e] ; ret 0xfffd
0x00000000004bda1a : std ; push qword ptr [rax - 0x7c] ; std ; call rax
0x00000000004bd9aa : std ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x00000000004bd9ca : std ; push qword ptr [rax] ; jnp 0x4bd9d1 ; call qword ptr [rax]
0x00000000004bd9d2 : std ; push rax ; jle 0x4bd9d9 ; call rax
0x00000000004bd9b2 : std ; push rax ; outsd dx, dword ptr [rsi] ; std ; call rax
0x0000000000458801 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440ad0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004c68c2 : sti ; call qword ptr [rax]
0x00000000004c6b12 : sti ; call rsp
0x000000000046ba97 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004744b4 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000466205 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000044e196 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c66d6 : sti ; jmp qword ptr [rdx]
0x00000000004c6572 : sti ; jmp rsi
0x0000000000431d28 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b914a : sti ; ret
0x000000000048eb46 : sti ; ret 0xffbf
0x000000000044ed37 : sti ; test rax, rax ; je 0x44ed45 ; call rax
0x000000000043fd20 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047a98a : stosb byte ptr [rdi], al ; add byte ptr [r15 + 0x6cb9c4], r15b ; call rdx
0x00000000004b9624 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004400e2 : stosb byte ptr [rdi], al ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000047a90e : stosb byte ptr [rdi], al ; ret
0x00000000004bda75 : stosb byte ptr [rdi], al ; std ; jmp rax
0x00000000004681d8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004681d9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004ba72c : stosd dword ptr [rdi], eax ; ret
0x000000000046ba96 : stosd dword ptr [rdi], eax ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004681d7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bab11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c63d8 : sub ah, dh ; cli ; jmp qword ptr [rdx]
0x0000000000400918 : sub al, 0 ; add ebx, esi ; ret
0x00000000004006b9 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004014ee : sub al, 0 ; xor eax, eax ; ret
0x00000000004c24ec : sub al, 0x44 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf8 ; call qword ptr [rax]
0x000000000044299a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042eeb3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d97d : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c0b29 : sub al, byte ptr [rax] ; add byte ptr [rsp + rdx*8], ah ; cmc ; call rdx
0x000000000041d41f : sub al, byte ptr [rax] ; jne 0x41d436 ; jmp 0x41d450
0x000000000041eda3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41edb3 ; call rax
0x0000000000480b71 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045fba3 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f64a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463c6c : sub bh, bh ; loopne 0x463c09 ; mov eax, 0xffffffff ; ret
0x000000000049de21 : sub bl, dh ; ret
0x000000000049de20 : sub bl, r14b ; ret
0x000000000041052e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046d96c : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046c756 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000483957 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041052f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x00000000004668a0 : sub byte ptr [rax - 0x73], cl ; je 0x4668cf ; call rbx
0x000000000041c36b : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041e864 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004055af : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000410285 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462b3c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040d419 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000481ecc : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004c08dd : sub byte ptr [rax], al ; add byte ptr [rax - 0x3f], ah ; cmc ; call qword ptr [rcx]
0x000000000044251d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004783b1 : sub byte ptr [rax], al ; jne 0x4783c8 ; add rsp, 0x38 ; ret
0x0000000000443f7a : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004454a5 : sub byte ptr [rax], al ; ret
0x0000000000443f54 : sub byte ptr [rax], al ; test eax, eax ; je 0x443f66 ; ret
0x000000000043fb95 : sub byte ptr [rax], al ; test rax, rax ; je 0x43fba6 ; ret
0x000000000040dafa : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414610 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000457266 : sub byte ptr [rbx + rcx*2], 0 ; jmp rax
0x0000000000443f33 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000443f32 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000044cdea : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000487ce4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041e97c : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047ad4b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004690c6 : sub byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091a20
0x000000000047b80d : sub cl, al ; call 0xffffffff8a09e138
0x000000000047c164 : sub cl, al ; call 0xffffffff8a09ea8f
0x000000000047192e : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000455126 : sub cl, byte ptr [rbx] ; jmp rax
0x00000000004681da : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000413df5 : sub cl, ch ; ret 0xfffe
0x00000000004c4488 : sub cl, dh ; stc ; call qword ptr [rsi]
0x0000000000476bba : sub dl, dh ; call r11
0x000000000046d979 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x0000000000443f53 : sub dword ptr [rax], 0 ; test eax, eax ; je 0x443f67 ; ret
0x000000000042ff77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ff8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4300dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43022d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43037d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4304cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43061d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43076d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4308bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43109d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4311ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fed3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fecf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042ff7d : sub dword ptr [rdi], esp ; jmp r9
0x000000000042f696 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041e959 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004111ae : sub eax, 0x29480005 ; ret
0x00000000004a39a1 : sub eax, 0x2f10fff9 ; stc ; call qword ptr [rax]
0x000000000044025f : sub eax, 0x49fffddb ; mov edi, dword ptr [rbp] ; call rbx
0x000000000045d151 : sub eax, 0x83000000 ; ret
0x00000000004828d7 : sub eax, 0xbfffffd7 ; ret
0x000000000043ea0c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d254 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043d8e4 : sub eax, 1 ; ret
0x0000000000478156 : sub eax, dword ptr [0] ; ret
0x0000000000442b72 : sub eax, dword ptr [rax + rax + 0x48] ; mov dword ptr [rax + 8], edx ; ret
0x00000000004166b9 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416646 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b4f55], 1 ; ret
0x0000000000417560 : sub eax, dword ptr [rax] ; jne 0x417578 ; jmp 0x417592
0x00000000004165b5 : sub eax, dword ptr [rax] ; ret
0x0000000000417b82 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417b92 ; call rax
0x00000000004017bf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499c71 : sub eax, dword ptr [rcx + r8*4] ; je 0x499c57 ; ret
0x0000000000499c72 : sub eax, dword ptr [rcx + rax*4] ; je 0x499c56 ; ret
0x0000000000416dee : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e30a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e2f6 ; ret
0x00000000004162a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000414f5d : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004668db : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000004159d9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047a34d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004226fc : sub eax, ecx ; ret
0x00000000004237c9 : sub eax, edi ; ret
0x000000000041295e : sub eax, edx ; ret
0x000000000043da97 : sub eax, edx ; vzeroupper ; ret
0x00000000004150be : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004127b8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b93be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b7e55 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479335 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000455177 : sub ecx, dword ptr [rbx] ; jmp rax
0x000000000044403c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004a3999 : sub ecx, edi ; call qword ptr [rax]
0x00000000004a399d : sub edi, ecx ; call qword ptr [rax]
0x0000000000442561 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004162d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004162c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000425e24 : sub edx, eax ; jbe 0x425e67 ; add rax, rdi ; ret
0x0000000000425e34 : sub edx, eax ; jbe 0x425e69 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425e44 : sub edx, eax ; jbe 0x425e69 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425e54 : sub edx, eax ; jbe 0x425e69 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000410362 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000411f74 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004a0dd1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004166b8 : sub r8, qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004159d8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043d8e3 : sub rax, 1 ; ret
0x0000000000478155 : sub rax, qword ptr [0] ; ret
0x0000000000416ded : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478154 : sub rax, qword ptr fs:[0] ; ret
0x00000000004668da : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004237c8 : sub rax, rdi ; ret
0x000000000041295d : sub rax, rdx ; ret
0x000000000043da96 : sub rax, rdx ; vzeroupper ; ret
0x0000000000425e23 : sub rdx, rax ; jbe 0x425e68 ; add rax, rdi ; ret
0x0000000000410361 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000411f73 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004a0dd0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000442617 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000466fc5 : syscall ; ret
0x000000000044362f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004104a3 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004153d9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000499e63 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c133 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c24a8 : test al, 0x1c ; clc ; call qword ptr [rax]
0x0000000000400e38 : test al, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004c5968 : test al, 0x78 ; add byte ptr [rax], al ; and al, 0x83 ; cli ; call rax
0x00000000004b8717 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c3328 : test al, 0x9e ; clc ; call qword ptr [rdx]
0x000000000047d95d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000442229 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a3179 : test al, 0xf8 ; call qword ptr [rax]
0x00000000004bda71 : test al, 0xfd ; jmp qword ptr [rax - 0x1f000256]
0x000000000043f286 : test al, 2 ; cmove eax, edx ; ret
0x000000000042e2ca : test al, al ; jne 0x42e2b8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041a455 : test al, dl ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000421086 : test ax, 1 ; ret
0x00000000004a306d : test bh, al ; call rax
0x00000000004bda1d : test bh, ch ; call rax
0x0000000000445b0b : test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a4d1 : test bh, cl ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004c3fa5 : test bh, cl ; call rdx
0x000000000046d587 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046ae83 : test bl, bl ; je 0x46ae76 ; ret
0x0000000000474e75 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000047c273 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000047b849 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000466efe : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x0000000000440391 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000415ac5 : test byte ptr [rax - 0x77], 0x1d ; ret
0x0000000000440ad4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000474e76 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046f971 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c656d : test byte ptr [rax], al ; add byte ptr [rax + 0x10], ah ; sti ; jmp rsi
0x000000000043bc2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b06a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004165da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411baa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442b18 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000040089a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041659a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e16a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041191a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043ba6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000465f8c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000418fbb : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000465fa4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a676 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004172b6 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047aa6a : test byte ptr [rbx + 0x250f533d], 0 ; jmp rax
0x000000000041de97 : test byte ptr [rbx - 0xa000000], cl ; ret
0x000000000044920c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004174de : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000047f7c8 : test byte ptr [rcx + 0x5c70000], cl ; outsb dx, byte ptr [rsi] ; ret 0x24
0x000000000044fe02 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049c6a2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000466d83 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x000000000045786a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043fd22 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x0000000000422a76 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c722d : test byte ptr [rcx], al ; ret
0x0000000000417d47 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049f85e : test byte ptr [rdi], 0x84 ; ret
0x000000000044019a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047140e : test byte ptr [rdi], 0x85 ; ret
0x000000000047b927 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x00000000004868cd : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465bcc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004005b3 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465bb4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004112a4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047356e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046546d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000004059f5 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004236ad : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044e37d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043e182 : test ch, 0xf0 ; je 0x43e17b ; movzx eax, cl ; pop rbx ; ret
0x000000000043d56f : test cl, cl ; jne 0x43d564 ; ret
0x000000000043d61f : test cl, cl ; jne 0x43d614 ; ret
0x000000000043d8df : test cl, cl ; jne 0x43d8d8 ; sub rax, 1 ; ret
0x00000000004685bd : test cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041ceb9 : test cl, dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000043e1aa : test dh, 0xf0 ; je 0x43e179 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e1aa : test dh, 0xf0 ; je 0x43e17b ; movzx eax, dl ; pop rbx ; ret
0x000000000041a400 : test dh, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000044640e : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041db8f : test dh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446985 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000043bab4 : test dl, 0x40 ; jne 0x43ba79 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bae2 : test dl, 4 ; jne 0x43ba79 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000418ea4 : test dl, bh ; add al, 0 ; add dh, dh ; ret
0x000000000045ba83 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000420506 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000044da16 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040db42 : test dl, dl ; jne 0x40db24 ; ret
0x000000000043d78f : test dl, dl ; jne 0x43d788 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004269e9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000046093b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047da24 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045c4c9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049aeab : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049aeaa : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c35f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f197 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f5e6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047e899 : test dword ptr [rbx - 0x16000002], esi ; ret
0x00000000004180e0 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451adb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425d9a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426700 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000040fe56 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f16d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f07d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ef8d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004500ce : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x0000000000403ea6 : test dword ptr [rcx], 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000041b1ba : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047d90a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004268ea : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f570 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cb13 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045b0bc : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c175 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f634 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042eeb2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044640f : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440b3d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d2f2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c45e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f3b8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004ba400 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432b26 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004424cb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400908 : test eax, eax ; je 0x40091c ; mov edi, 0x4be0c0 ; call rax
0x0000000000400956 : test eax, eax ; je 0x40094c ; call rax
0x0000000000402c72 : test eax, eax ; je 0x402c86 ; mov edi, 0x6cb060 ; call rax
0x0000000000402ec1 : test eax, eax ; je 0x402edf ; mov edi, 0x6cafe0 ; call rax
0x00000000004030b5 : test eax, eax ; je 0x4030d3 ; mov edi, 0x6cafe0 ; call rax
0x00000000004034d0 : test eax, eax ; je 0x4034e4 ; mov edi, 0x6cb0a0 ; call rax
0x0000000000403618 : test eax, eax ; je 0x40362c ; mov edi, 0x6cb0a0 ; call rax
0x0000000000417aa8 : test eax, eax ; je 0x417ab3 ; pop rbx ; ret
0x0000000000417b85 : test eax, eax ; je 0x417b8f ; call rax
0x000000000041eda6 : test eax, eax ; je 0x41edb0 ; call rax
0x0000000000423483 : test eax, eax ; je 0x42348f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e3f6 : test eax, eax ; je 0x43e40a ; mov edi, 0x6cb720 ; call rax
0x000000000043e40e : test eax, eax ; je 0x43e422 ; mov edi, 0x6cb720 ; call rax
0x000000000043fb98 : test eax, eax ; je 0x43fba3 ; ret
0x0000000000443dcf : test eax, eax ; je 0x443de3 ; mov edi, 0x6ca140 ; call rax
0x0000000000443f56 : test eax, eax ; je 0x443f64 ; ret
0x000000000044d78e : test eax, eax ; je 0x44d7a2 ; mov edi, 0x6cb720 ; call rax
0x000000000044d7bd : test eax, eax ; je 0x44d7d9 ; mov edi, 0x6cb720 ; call rax
0x000000000044d8be : test eax, eax ; je 0x44d8c8 ; call rax
0x000000000044d91d : test eax, eax ; je 0x44d931 ; mov edi, 0x6cb720 ; call rax
0x000000000044da96 : test eax, eax ; je 0x44dab1 ; mov edi, 0x6cb720 ; call rax
0x000000000044dd76 : test eax, eax ; je 0x44dd8a ; mov edi, 0x6cb720 ; call rax
0x000000000044de7a : test eax, eax ; je 0x44de84 ; call rax
0x000000000044ed39 : test eax, eax ; je 0x44ed43 ; call rax
0x0000000000470a72 : test eax, eax ; je 0x470a86 ; mov edi, 0x6ca100 ; call rax
0x0000000000474a66 : test eax, eax ; je 0x474a7a ; mov edi, 0x6ca140 ; call rax
0x0000000000474a8e : test eax, eax ; je 0x474aa2 ; mov edi, 0x6ca140 ; call rax
0x0000000000474b04 : test eax, eax ; je 0x474b18 ; mov edi, 0x6ca140 ; call rax
0x00000000004765d1 : test eax, eax ; je 0x476649 ; mov edi, 0x6ca140 ; call rax
0x0000000000477f8c : test eax, eax ; je 0x477f5b ; mov edi, 0x6ca140 ; call rax
0x00000000004780ea : test eax, eax ; je 0x4780fe ; mov edi, 0x6ca140 ; call rax
0x000000000047ae30 : test eax, eax ; je 0x47ae48 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e506 : test eax, eax ; je 0x47e51a ; mov edi, 0x6ca140 ; call rax
0x000000000047e532 : test eax, eax ; je 0x47e546 ; mov edi, 0x6ca140 ; call rax
0x0000000000487cb0 : test eax, eax ; je 0x487cc4 ; mov edi, 0x6ca140 ; call rax
0x0000000000487d58 : test eax, eax ; je 0x487d6c ; mov edi, 0x6ca140 ; call rax
0x000000000049e6d8 : test eax, eax ; je 0x49e6ec ; mov edi, 0x6ca100 ; call rax
0x000000000049e799 : test eax, eax ; je 0x49e7ad ; mov edi, 0x6ca100 ; call rax
0x00000000004a043c : test eax, eax ; je 0x4a044b ; call rax
0x0000000000416284 : test eax, eax ; jne 0x41627d ; ret
0x0000000000425dd7 : test eax, eax ; jne 0x425e37 ; xor rax, rax ; ret
0x00000000004425f0 : test eax, eax ; jne 0x4425eb ; pop rdx ; pop r10 ; ret
0x0000000000473d4e : test eax, eax ; jne 0x473d25 ; ret
0x000000000049de37 : test eax, eax ; jne 0x49de45 ; ret
0x000000000049de52 : test eax, eax ; jne 0x49de65 ; ret
0x000000000049e072 : test eax, eax ; jne 0x49e085 ; ret
0x0000000000471040 : test eax, eax ; js 0x47104d ; pop rbx ; ret
0x000000000047a48b : test eax, eax ; js 0x47a49d ; ret
0x000000000046ae72 : test eax, eax ; mov rax, r9 ; jne 0x46aed0 ; ret
0x0000000000425d00 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041e344 : test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445a7a : test ebx, ebx ; jne 0x445a55 ; jmp 0x445a47
0x000000000047a7ae : test ebx, ebx ; jne 0x47a7c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e860 : test ebx, ebx ; mov rdi, rbx ; jne 0x49e858 ; pop rbx ; ret
0x000000000043baa2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043baaf : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000466c49 : test ecx, ecx ; jne 0x466c08 ; mov rax, rdx ; ret
0x000000000046aec1 : test ecx, ecx ; jne 0x46ae77 ; xor eax, eax ; ret
0x00000000004a3071 : test edi, eax ; jmp qword ptr [rax]
0x0000000000421030 : test edi, edi ; je 0x421049 ; mov eax, 0x16 ; ret
0x0000000000423662 : test edx, edx ; je 0x423670 ; bsf eax, edx ; ret
0x0000000000423662 : test edx, edx ; je 0x423671 ; bsf eax, edx ; ret
0x000000000042370b : test edx, edx ; je 0x423727 ; bsf rax, rdx ; ret
0x000000000042370b : test edx, edx ; je 0x423728 ; bsf rax, rdx ; ret
0x00000000004654da : test edx, edx ; je 0x465507 ; bsf rax, rdx ; ret
0x00000000004654da : test edx, edx ; je 0x465508 ; bsf rax, rdx ; ret
0x00000000004131b3 : test edx, edx ; jne 0x4131c4 ; ret
0x000000000041492f : test edx, edx ; jne 0x414925 ; ret
0x00000000004637ff : test edx, edx ; jne 0x4637f5 ; ret
0x0000000000466c8a : test edx, edx ; jne 0x466c85 ; ret
0x0000000000400765 : test edx, edx ; jns 0x40065d ; jmp 0x40073a
0x000000000043ba95 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000041a45f : test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000040ed3b : test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004653d1 : test esi, esi ; jne 0x4653e0 ; xor rax, rax ; ret
0x000000000041fe1c : test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cec3 : test esp, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000046ae82 : test r11b, r11b ; je 0x46ae77 ; ret
0x0000000000473d4d : test r8, r8 ; jne 0x473d26 ; ret
0x0000000000423482 : test r8d, r8d ; je 0x423490 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046ae71 : test r8d, r8d ; mov rax, r9 ; jne 0x46aed1 ; ret
0x0000000000466c48 : test r9d, r9d ; jne 0x466c09 ; mov rax, rdx ; ret
0x0000000000400955 : test rax, rax ; je 0x40094d ; call rax
0x0000000000417aa7 : test rax, rax ; je 0x417ab4 ; pop rbx ; ret
0x0000000000417b84 : test rax, rax ; je 0x417b90 ; call rax
0x000000000041eda5 : test rax, rax ; je 0x41edb1 ; call rax
0x000000000043fb97 : test rax, rax ; je 0x43fba4 ; ret
0x000000000044d8bd : test rax, rax ; je 0x44d8c9 ; call rax
0x000000000044de79 : test rax, rax ; je 0x44de85 ; call rax
0x000000000044ed38 : test rax, rax ; je 0x44ed44 ; call rax
0x000000000047ae2f : test rax, rax ; je 0x47ae49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a043b : test rax, rax ; je 0x4a044c ; call rax
0x0000000000416283 : test rax, rax ; jne 0x41627e ; ret
0x0000000000445a79 : test rbx, rbx ; jne 0x445a56 ; jmp 0x445a48
0x000000000047a7ad : test rbx, rbx ; jne 0x47a7c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e85f : test rbx, rbx ; mov rdi, rbx ; jne 0x49e859 ; pop rbx ; ret
0x000000000042370a : test rdx, rdx ; je 0x423728 ; bsf rax, rdx ; ret
0x000000000042370a : test rdx, rdx ; je 0x423729 ; bsf rax, rdx ; ret
0x00000000004654d9 : test rdx, rdx ; je 0x465508 ; bsf rax, rdx ; ret
0x00000000004654d9 : test rdx, rdx ; je 0x465509 ; bsf rax, rdx ; ret
0x00000000004131b2 : test rdx, rdx ; jne 0x4131c5 ; ret
0x000000000041492e : test rdx, rdx ; jne 0x414926 ; ret
0x00000000004637fe : test rdx, rdx ; jne 0x4637f6 ; ret
0x00000000004653d0 : test rsi, rsi ; jne 0x4653e1 ; xor rax, rax ; ret
0x00000000004133c5 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000004355ea : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043290a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432840 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432609 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043d9f0 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043274f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000432573 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004325d6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043d99a : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004355d6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004355bd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043db6b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043db6f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043da05 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043da09 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004358f3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043578c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043558e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000435552 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435a55 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043dd28 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043dc8b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043db2a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042aa81 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000405555 : vpsubsb xmm10, xmm15, xmm4 ; loopne 0x405565 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004055bd : vpsubsb xmm13, xmm15, xmmword ptr [rax + 1] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043da99 : vzeroupper ; ret
0x0000000000473f79 : wait ; ret
0x0000000000441d7d : xadd ch, bh ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3451 : xbegin 0xfffffffff914f55c ; call qword ptr [rax]
0x000000000042328f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429d2f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e7f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000042298b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042319b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b97c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b19c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b58c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042adac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004975dd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004421c7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004960e1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004972e1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004969e1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ce1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963d9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000499e52 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x0000000000499e62 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x0000000000499e29 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042a88f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a06f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422c0f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042984f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000422f4f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000042326b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042af4b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042333b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3af : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429b8f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042936f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a54f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000004230ef : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004228df : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049b78c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000422cdf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b43c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac5c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a34d8 : xchg byte ptr [rdi], bl ; stc ; call qword ptr [rsi]
0x000000000042bd6c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049aba2 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004231bf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004229af : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004296af : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a51 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422daf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496686 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004297e5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4e5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497586 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c86 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496986 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a005 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b33d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049637e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bc6d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042301f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049540f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049522f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495c07 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494b27 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495a27 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a825 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b25 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429645 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a345 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b48d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042acad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a75 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004453ec : xchg dword ptr [rax - 0x39], ecx ; ret
0x0000000000470a36 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000444f86 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x0000000000476631 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045dd3d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004846a5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e485 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b80cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004826db : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449592 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000441e05 : xchg dword ptr [rdi - 0x74b70003], edi ; jge 0x441e15 ; call rbx
0x0000000000487613 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004425ee : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4425ed ; pop rdx ; pop r10 ; ret
0x000000000046e198 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485429 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b826b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494768 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004479bb : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464626 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411252 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000452ec2 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000441df7 : xchg eax, ebp ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000041ac7a : xchg eax, ebp ; ret
0x000000000047ba11 : xchg eax, ebp ; ret 0x3840
0x0000000000462a97 : xchg eax, ebp ; ret 0x5389
0x000000000041c019 : xchg eax, ebp ; ret 0x8348
0x0000000000466d9e : xchg eax, ebp ; ret 0x8b4c
0x000000000048a455 : xchg eax, ebp ; ret 0x941
0x00000000004038d7 : xchg eax, ebp ; ret 0x953d
0x0000000000467a8b : xchg eax, ebp ; ret 0xb60f
0x0000000000466f41 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b4af : xchg eax, ebp ; ret 0xc084
0x000000000045af45 : xchg eax, ebp ; ret 0xc283
0x0000000000442d78 : xchg eax, ebp ; ret 0xc985
0x0000000000488d6a : xchg eax, ebp ; ret 0xd348
0x0000000000466dfc : xchg eax, ebp ; ret 0xd721
0x000000000040f7a4 : xchg eax, ebp ; ret 0xdaf7
0x0000000000443f91 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466a30 : xchg eax, ebp ; ret 0xe883
0x000000000049b61d : xchg eax, ebp ; ret 0xf45
0x00000000004679ff : xchg eax, ebp ; ret 0xf748
0x000000000041672d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485839 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000414f82 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000469f30 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e300 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043af2c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fa82 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000044f8c0 : xchg eax, ebx ; ret 0x3948
0x000000000045041e : xchg eax, ebx ; ret 0x3949
0x000000000041102f : xchg eax, ebx ; ret 0x840
0x00000000004508f3 : xchg eax, ebx ; ret 0x8548
0x0000000000464094 : xchg eax, ebx ; ret 0xd108
0x0000000000420e17 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042a931 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004a31f8 : xchg eax, ecx ; ret
0x000000000042905f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004c7865 : xchg eax, edi ; add byte ptr [rax], al ; fmul dword ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000004c783d : xchg eax, edi ; add byte ptr [rax], al ; ror byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x00000000004c6db9 : xchg eax, edi ; jmp qword ptr [rsi]
0x0000000000409855 : xchg eax, edi ; ret
0x000000000044222b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004b8718 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000048584f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004175da : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000470edf : xchg eax, edx ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004b9fdd : xchg eax, edx ; jae 0x4b9fba ; push rsi ; pop rdx ; je 0x4b9faf ; ret 0xacfc
0x00000000004a31bc : xchg eax, edx ; mov edi, 0xbd30fff8 ; clc ; jmp rax
0x0000000000476561 : xchg eax, edx ; pop rsp ; and eax, 0x38754000 ; ret
0x000000000046e06b : xchg eax, edx ; ret 0x8348
0x0000000000474f46 : xchg eax, edx ; ret 0xb60f
0x000000000044222e : xchg eax, edx ; ret 0xd029
0x00000000004b80cf : xchg eax, edx ; ret 0xf869
0x0000000000423487 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e600 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004695f6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434337 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042e6bd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e61b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ba96c : xchg eax, esi ; ret 0xcd11
0x000000000042e66c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a34fc : xchg eax, esi ; sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000004433e8 : xchg eax, esp ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c7579 : xchg eax, esp ; add byte ptr [rax], al ; mov ah, 6 ; cld ; jmp qword ptr [rax]
0x0000000000443f88 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004bab7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bab10 ; ret 0x48f
0x0000000000458804 : xchg eax, esp ; ret
0x000000000046d577 : xchg eax, esp ; ret 0x1f0f
0x000000000047c05e : xchg eax, esp ; ret 0x3840
0x000000000047b79c : xchg eax, esp ; ret 0x5438
0x000000000041b1a9 : xchg eax, esp ; ret 0x7ae9
0x00000000004616d5 : xchg eax, esp ; ret 0x7f3c
0x000000000043de6f : xchg eax, esp ; ret 0x8341
0x0000000000449b45 : xchg eax, esp ; ret 0x8348
0x000000000043df0f : xchg eax, esp ; ret 0x8444
0x000000000046f161 : xchg eax, esp ; ret 0x8545
0x000000000047aaee : xchg eax, esp ; ret 0x950f
0x0000000000455868 : xchg eax, esp ; ret 0x9522
0x0000000000402818 : xchg eax, esp ; ret 0xb60f
0x000000000046b90c : xchg eax, esp ; ret 0xc283
0x000000000047b929 : xchg eax, esp ; ret 0xd021
0x0000000000485756 : xchg eax, esp ; ret 0xd309
0x000000000047b6ef : xchg eax, esp ; ret 0xda38
0x000000000047a530 : xchg eax, esp ; ret 0xdaf7
0x000000000049b5bc : xchg eax, esp ; ret 0xf45
0x0000000000459928 : xchg eax, esp ; ret 0xfa80
0x000000000043de92 : xchg eax, esp ; ret 0xfe83
0x000000000046aa1f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004c67dc : xchg eax, esp ; sahf ; std ; call rcx
0x0000000000411571 : xchg eax, r8d ; jmp 0x41147d
0x0000000000418b54 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x000000000043e96f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000411251 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000418ea5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469bb5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b0fd9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042f95c : xlatb ; add r9, r11 ; jmp r9
0x000000000043e771 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a343d : xlatb ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a0627 : xlatb ; idiv edi ; ret
0x000000000046aaff : xlatb ; ja 0x46ab2c ; ret
0x00000000004b9143 : xlatb ; jo 0x4b91bf ; mov ebp, 0xfb67d10d ; ret
0x0000000000451f72 : xlatb ; mov byte ptr [rsi], al ; jne 0x451f58 ; mov rax, rsi ; ret
0x00000000004211d9 : xlatb ; ret
0x00000000004ba5e6 : xlatb ; ret 0x4e27
0x00000000004657b7 : xlatb ; ret 0x94c
0x0000000000425bff : xlatb ; ret 0xc085
0x00000000004211d0 : xlatb ; ret 0xc148
0x0000000000423684 : xlatb ; ret 0xf66
0x000000000042cb31 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043ba56 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000422696 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000422556 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422416 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000004222d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000422196 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000422056 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000421f16 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000421dd6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421c96 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421b56 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421a16 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000004218d6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421796 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000421656 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421516 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043ba52 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465755 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465766 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004685dc : xor ah, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c1551 : xor al, 0 ; add byte ptr [rax + rsi*4 - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004b80ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000043f118 : xor al, 0x50 ; add byte ptr [rax], al ; ret
0x00000000004054dd : xor al, 0x89 ; ret 0x5525
0x0000000000461ef7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b92aa : xor al, 0xd8 ; ret
0x0000000000425e5c : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000049de1a : xor bl, bh ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004c6b11 : xor bl, bh ; call rsp
0x0000000000425d1d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000049e614 : xor byte ptr [rax + 0x39], cl ; ret
0x00000000004210e1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004678dd : xor byte ptr [rax - 0x39], cl ; ret
0x000000000044992b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000042358f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464762 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004109fd : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e9b2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e96a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e24c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004646aa : xor byte ptr [rax], al ; je 0x4646b4 ; ret
0x00000000004c6b10 : xor byte ptr [rax], dh ; sti ; call rsp
0x0000000000415640 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004a31c0 : xor byte ptr [rbp - 0x421f0008], bh ; clc ; call rax
0x0000000000403513 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049f85b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004c16d0 : xor byte ptr [rbp - 9], al ; call qword ptr [rax]
0x0000000000443b8c : xor byte ptr [rbx + 0x28], bh ; add cl, ch ; ret
0x000000000049e16e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c081f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x000000000042694b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000041598e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004a3068 : xor byte ptr [rbx - 0x7b7f0008], al ; clc ; call rax
0x00000000004bd9cc : xor byte ptr [rbx - 3], bh ; call qword ptr [rax]
0x0000000000443b89 : xor byte ptr [rcx + 0x287b3005], cl ; add cl, ch ; ret
0x00000000004206f8 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458837 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004109fe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f895 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004bf430 : xor byte ptr [rdi], ch ; cmc ; call qword ptr [rax]
0x00000000004638c0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458802 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000044553d : xor byte ptr [rdx + 0x44], ah ; add byte ptr [rdi + 0x6cb6d0], bh ; call rax
0x00000000004c01a0 : xor byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x00000000004c17ef : xor byte ptr [rdx], al ; int 0xa
0x00000000004c10c3 : xor byte ptr [rdx], al ; ret
0x000000000042e3af : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046571c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000425d1e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e03a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x000000000044005c : xor ch, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a32a8 : xor cl, al ; clc ; push qword ptr [rax + 0x30fff8c1] ; ret 0xfff8
0x0000000000426430 : xor cl, bh ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000465d9b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000472e66 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d2af : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000440c62 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a3354 : xor dl, ah ; clc ; call qword ptr [rax]
0x00000000004a32b0 : xor dl, al ; clc ; push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004a3780 : xor dl, byte ptr [rcx] ; stc ; jmp qword ptr [rdx + 0x12fff910]
0x0000000000476b8e : xor dl, dh ; jmp r11
0x0000000000476ca0 : xor dl, dh ; ret
0x0000000000420a35 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a18d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000041dc2a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004c126d : xor dword ptr [rax], eax ; add al, al ; idiv dil ; ret
0x000000000044508a : xor dword ptr [rbx], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000043f1d7 : xor dword ptr [rdi + rcx*2], 0 ; ret
0x0000000000441103 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000049dee9 : xor eax, 0x22de62 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049dd91 : xor eax, 0x22dfba ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a39b1 : xor eax, 0x3710fff9 ; stc ; call qword ptr [rax]
0x000000000048e299 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040e9af : xor eax, dword ptr [0x30] ; call rax
0x000000000049cbdd : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478457 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047852f : xor eax, eax ; add rsp, 0x68 ; ret
0x000000000047457a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451999 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000464f47 : xor eax, eax ; call rbx
0x000000000046aafb : xor eax, eax ; cmp rdi, rdx ; ja 0x46ab30 ; ret
0x00000000004425c7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004427c5 : xor eax, eax ; leave ; ret
0x0000000000462e89 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044063b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044273f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041e97d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b238 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ebbd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042361c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004121bc : xor eax, eax ; pop rbx ; ret
0x00000000004014f0 : xor eax, eax ; ret
0x000000000042e2ce : xor eax, eax ; sub eax, ecx ; ret
0x000000000043e1a8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e17b ; movzx eax, dl ; pop rbx ; ret
0x000000000046ae80 : xor eax, eax ; test r11b, r11b ; je 0x46ae79 ; ret
0x00000000004131b0 : xor eax, eax ; test rdx, rdx ; jne 0x4131c7 ; ret
0x0000000000467813 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000473e18 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a68d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000447db1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000466225 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000044ee72 : xor ecx, eax ; ret 0x4809
0x00000000004a39a9 : xor ecx, edi ; call qword ptr [rax]
0x00000000004a39ad : xor edi, ecx ; call qword ptr [rax]
0x000000000047390e : xor edi, edi ; call 0x43fbf4
0x000000000040e967 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004447f3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000443f8c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x443f7c
0x000000000045a1e3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047a7d9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a6ae : xor edx, edx ; jmp 0x46a678
0x0000000000473b84 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004152a9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000041768c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000487ed3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440ad1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000401605 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047aa69 : xor esi, esi ; mov edi, dword ptr [rip + 0x250f53] ; jmp rax
0x000000000043fd21 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440ad3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440af8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440b1d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440b41 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440b61 : xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000047404d : xor esi, esi ; shl rdx, 4 ; call 0x400320
0x0000000000464f46 : xor r8d, r8d ; call rbx
0x000000000040e9ae : xor rax, qword ptr [0x30] ; call rax
0x000000000040e9ad : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000425d9f : xor rax, rax ; ret
0x000000000040e966 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e965 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 8881
